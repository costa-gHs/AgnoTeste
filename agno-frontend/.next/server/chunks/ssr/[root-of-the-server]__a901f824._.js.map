{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/agnoClient.js"],"sourcesContent":["// agnoClient.js - Cliente para conectar com o backend Agno TOTALMENTE CORRIGIDO\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nclass AgnoClient {\r\n  constructor(baseURL = 'http://localhost:8000') {\r\n    this.baseURL = baseURL;\r\n    this.userId = 1; // Pode ser configurado dinamicamente\r\n    this.eventListeners = new Map();\r\n    this.requestQueue = new Map();\r\n    this.connectionTimeout = 10000; // 10 segundos\r\n  }\r\n\r\n  // Configurar ID do usu√°rio\r\n  setUserId(userId) {\r\n    this.userId = userId;\r\n    console.log(`üîß User ID configurado para: ${userId}`);\r\n  }\r\n\r\n  // Fazer requisi√ß√µes HTTP com retry autom√°tico\r\n  async makeRequest(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const requestId = `${endpoint}_${Date.now()}`;\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      mode: 'cors',\r\n      credentials: 'omit',\r\n      timeout: this.connectionTimeout,\r\n      ...options,\r\n    };\r\n\r\n    // Adicionar user_id como query parameter para GET requests\r\n    const urlWithUser = new URL(url);\r\n    if (options.method !== 'POST' || !options.body) {\r\n      urlWithUser.searchParams.append('user_id', this.userId);\r\n    }\r\n\r\n    // Retry logic\r\n    const maxRetries = 3;\r\n    let lastError = null;\r\n\r\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n      try {\r\n        console.log(`üåê [Tentativa ${attempt}/${maxRetries}] ${options.method || 'GET'}: ${urlWithUser.toString()}`);\r\n\r\n        // Timeout promise\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Request timeout')), this.connectionTimeout);\r\n        });\r\n\r\n        // Fetch promise\r\n        const fetchPromise = fetch(urlWithUser.toString(), config);\r\n\r\n        // Race between fetch and timeout\r\n        const response = await Promise.race([fetchPromise, timeoutPromise]);\r\n\r\n        console.log(`üì° Resposta recebida: ${response.status} ${response.statusText}`);\r\n\r\n        if (!response.ok) {\r\n          let errorData;\r\n          try {\r\n            const contentType = response.headers.get('content-type');\r\n            if (contentType && contentType.includes('application/json')) {\r\n              errorData = await response.json();\r\n            } else {\r\n              errorData = { message: await response.text() };\r\n            }\r\n          } catch (parseError) {\r\n            errorData = { message: `HTTP ${response.status}: ${response.statusText}` };\r\n          }\r\n\r\n          const error = new Error(errorData.detail || errorData.message || `HTTP ${response.status}: ${response.statusText}`);\r\n          error.status = response.status;\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n\r\n        const contentType = response.headers.get('content-type');\r\n        let data;\r\n\r\n        if (contentType && contentType.includes('application/json')) {\r\n          data = await response.json();\r\n        } else {\r\n          data = await response.text();\r\n        }\r\n\r\n        console.log(`‚úÖ Dados recebidos:`, data);\r\n        return data;\r\n\r\n      } catch (error) {\r\n        lastError = error;\r\n        console.error(`‚ùå [Tentativa ${attempt}/${maxRetries}] Erro:`, error.message);\r\n\r\n        // Se √© erro de rede ou timeout, tentar novamente\r\n        if (attempt < maxRetries && (\r\n          error.name === 'TypeError' ||\r\n          error.message.includes('timeout') ||\r\n          error.message.includes('fetch') ||\r\n          error.status >= 500\r\n        )) {\r\n          const delayMs = Math.min(1000 * Math.pow(2, attempt - 1), 5000); // Exponential backoff\r\n          console.log(`‚è≥ Aguardando ${delayMs}ms antes da pr√≥xima tentativa...`);\r\n          await new Promise(resolve => setTimeout(resolve, delayMs));\r\n          continue;\r\n        }\r\n\r\n        // Para outros erros, n√£o retry\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Se chegou aqui, todas as tentativas falharam\r\n    console.error('‚ùå Todas as tentativas falharam:', lastError);\r\n\r\n    if (lastError.name === 'TypeError' && lastError.message.includes('fetch')) {\r\n      throw new Error(`N√£o foi poss√≠vel conectar com o servidor em ${this.baseURL}. Verifique se o backend est√° rodando na porta 8000.`);\r\n    }\r\n\r\n    throw lastError;\r\n  }\r\n\r\n  // Fazer requisi√ß√£o de streaming CORRIGIDA\r\n  async makeStreamingRequest(endpoint, data, onChunk, onComplete, onError) {\r\n    const url = `${this.baseURL}${endpoint}?user_id=${this.userId}`;\r\n\r\n    try {\r\n      console.log(`üåä Iniciando streaming para: ${url}`);\r\n      console.log(`üì§ Dados enviados:`, data);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'text/plain, application/json',\r\n          'Cache-Control': 'no-cache',\r\n        },\r\n        mode: 'cors',\r\n        credentials: 'omit',\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      console.log(`üì° Status do streaming: ${response.status}`);\r\n\r\n      if (!response.ok) {\r\n        let errorMessage;\r\n        try {\r\n          const errorData = await response.json();\r\n          errorMessage = errorData.detail || errorData.message || `HTTP ${response.status}`;\r\n        } catch {\r\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      // Verificar se o corpo da resposta existe\r\n      if (!response.body) {\r\n        throw new Error('Streaming n√£o suportado - resposta sem body');\r\n      }\r\n\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      let buffer = '';\r\n      let chunkCount = 0;\r\n\r\n      console.log('üîÑ Iniciando leitura do stream...');\r\n\r\n      try {\r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n\r\n          if (done) {\r\n            console.log(`‚úÖ Stream conclu√≠do ap√≥s ${chunkCount} chunks`);\r\n            break;\r\n          }\r\n\r\n          chunkCount++;\r\n          const chunk = decoder.decode(value, { stream: true });\r\n          buffer += chunk;\r\n\r\n          // Processar linhas completas\r\n          const lines = buffer.split('\\n');\r\n          buffer = lines.pop() || ''; // Manter a linha incompleta no buffer\r\n\r\n          for (const line of lines) {\r\n            if (line.trim() === '') continue;\r\n\r\n            if (line.startsWith('data: ')) {\r\n              try {\r\n                const jsonData = line.slice(6); // Remove \"data: \"\r\n                const parsed = JSON.parse(jsonData);\r\n\r\n                console.log(`üì® Chunk recebido:`, parsed);\r\n\r\n                if (parsed.type === 'chunk' && parsed.content) {\r\n                  onChunk(parsed.content);\r\n                } else if (parsed.type === 'complete') {\r\n                  console.log('üèÅ Stream marcado como completo');\r\n                  onComplete(parsed);\r\n                  return;\r\n                } else if (parsed.type === 'error') {\r\n                  console.error('‚ùå Erro no stream:', parsed.message);\r\n                  onError(new Error(parsed.message));\r\n                  return;\r\n                }\r\n              } catch (parseError) {\r\n                console.warn('‚ö†Ô∏è Erro ao parsear chunk JSON:', parseError);\r\n                // Se n√£o conseguiu parsear como JSON, talvez seja texto puro\r\n                const content = line.startsWith('data: ') ? line.slice(6) : line;\r\n                if (content.trim() && !content.includes('{')) {\r\n                  onChunk(content);\r\n                }\r\n              }\r\n            } else if (line.trim() && !line.startsWith(':')) {\r\n              // Linha que n√£o √© coment√°rio SSE\r\n              console.log(`üìÑ Linha n√£o-SSE:`, line);\r\n              onChunk(line + '\\n');\r\n            }\r\n          }\r\n        }\r\n\r\n        // Se chegou aqui sem um \"complete\" expl√≠cito, considerar completo\r\n        if (chunkCount > 0) {\r\n          console.log('üèÅ Stream finalizado implicitamente');\r\n          onComplete({ session_id: `session_${Date.now()}` });\r\n        }\r\n\r\n      } finally {\r\n        reader.releaseLock();\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('‚ùå Erro no streaming:', error);\r\n      onError(error);\r\n    }\r\n  }\r\n\r\n  // AGENTS API\r\n  async createAgent(agentData) {\r\n    console.log('ü§ñ Criando agente:', agentData);\r\n\r\n    // Validar dados obrigat√≥rios\r\n    if (!agentData.name || !agentData.role) {\r\n      throw new Error('Nome e papel s√£o obrigat√≥rios');\r\n    }\r\n\r\n    // Garantir que instructions seja um array\r\n    if (typeof agentData.instructions === 'string') {\r\n      agentData.instructions = [agentData.instructions];\r\n    }\r\n\r\n    return this.makeRequest('/api/agents/create', {\r\n      method: 'POST',\r\n      body: JSON.stringify(agentData),\r\n    });\r\n  }\r\n\r\n  async listAgents() {\r\n    console.log('üìã Listando agentes...');\r\n    return this.makeRequest('/api/agents');\r\n  }\r\n\r\n  async chatWithAgent(agentId, message, onChunk, onComplete, onError) {\r\n    console.log(`üí¨ Iniciando chat com agente ${agentId}:`, message);\r\n\r\n    if (!agentId || !message.trim()) {\r\n      const error = new Error('ID do agente e mensagem s√£o obrigat√≥rios');\r\n      onError(error);\r\n      return;\r\n    }\r\n\r\n    // Adicionar fallback para onComplete\r\n    const safeOnComplete = (data) => {\r\n      console.log('‚úÖ Chat com agente conclu√≠do:', data);\r\n      if (onComplete) onComplete(data);\r\n    };\r\n\r\n    // Adicionar fallback para onError\r\n    const safeOnError = (error) => {\r\n      console.error('‚ùå Erro no chat com agente:', error);\r\n      if (onError) onError(error);\r\n    };\r\n\r\n    return this.makeStreamingRequest(\r\n      `/api/agents/${agentId}/chat`,\r\n      { message: message.trim() },\r\n      onChunk,\r\n      safeOnComplete,\r\n      safeOnError\r\n    );\r\n  }\r\n\r\n  // WORKFLOWS API\r\n  async createWorkflow(workflowData) {\r\n    console.log('üîÑ Criando workflow:', workflowData);\r\n\r\n    if (!workflowData.name) {\r\n      throw new Error('Nome do workflow √© obrigat√≥rio');\r\n    }\r\n\r\n    return this.makeRequest('/api/workflows/create', {\r\n      method: 'POST',\r\n      body: JSON.stringify(workflowData),\r\n    });\r\n  }\r\n\r\n  async listWorkflows() {\r\n    console.log('üìã Listando workflows...');\r\n    return this.makeRequest('/api/workflows');\r\n  }\r\n\r\n  async chatWithWorkflow(workflowId, message, onChunk, onComplete, onError) {\r\n    console.log(`üí¨ Iniciando chat com workflow ${workflowId}:`, message);\r\n\r\n    if (!workflowId || !message.trim()) {\r\n      const error = new Error('ID do workflow e mensagem s√£o obrigat√≥rios');\r\n      onError(error);\r\n      return;\r\n    }\r\n\r\n    return this.makeStreamingRequest(\r\n      `/api/workflows/${workflowId}/chat`,\r\n      { message: message.trim() },\r\n      onChunk,\r\n      onComplete,\r\n      onError\r\n    );\r\n  }\r\n\r\n  // SESSIONS API\r\n  async listSessions() {\r\n    console.log('üìã Listando sess√µes...');\r\n    return this.makeRequest('/api/sessions');\r\n  }\r\n\r\n  // METRICS API\r\n  async getMetrics() {\r\n    console.log('üìä Buscando m√©tricas...');\r\n    return this.makeRequest('/api/metrics');\r\n  }\r\n\r\n  async getPerformanceData(hours = 24) {\r\n    console.log(`üìà Buscando dados de performance (${hours}h)...`);\r\n    return this.makeRequest(`/api/performance?hours=${hours}`);\r\n  }\r\n\r\n  // HEALTH CHECK\r\n  async healthCheck() {\r\n    console.log('üè• Verificando sa√∫de do sistema...');\r\n    try {\r\n      const result = await this.makeRequest('/api/health');\r\n      console.log('‚úÖ Sistema saud√°vel:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('‚ùå Sistema com problemas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Testar conectividade b√°sica\r\n  async testConnection() {\r\n    try {\r\n      console.log('üß™ Testando conectividade b√°sica...');\r\n\r\n      const response = await fetch(this.baseURL, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        credentials: 'omit',\r\n        signal: AbortSignal.timeout(5000) // 5 segundos timeout\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('‚úÖ Backend acess√≠vel:', data);\r\n        return true;\r\n      } else {\r\n        console.log(`‚ö†Ô∏è Backend respondeu com erro: ${response.status}`);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Backend inacess√≠vel:', error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // WEBSOCKET CHAT (para uso futuro)\r\n  createWebSocketChat(type, itemId, onMessage, onError, onClose) {\r\n    const wsUrl = `ws://localhost:8000/ws/${type}/${itemId}?user_id=${this.userId}`;\r\n    console.log(`üîå Conectando WebSocket: ${wsUrl}`);\r\n\r\n    try {\r\n      const ws = new WebSocket(wsUrl);\r\n\r\n      ws.onopen = () => {\r\n        console.log(`‚úÖ WebSocket conectado para ${type}:${itemId}`);\r\n      };\r\n\r\n      ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          console.log('üì® Mensagem WebSocket:', data);\r\n          onMessage(data);\r\n        } catch (error) {\r\n          console.error('‚ùå Erro ao parsear mensagem WebSocket:', error);\r\n          if (onError) onError(error);\r\n        }\r\n      };\r\n\r\n      ws.onerror = (error) => {\r\n        console.error('‚ùå Erro no WebSocket:', error);\r\n        if (onError) onError(error);\r\n      };\r\n\r\n      ws.onclose = (event) => {\r\n        console.log(`üîå WebSocket fechado: ${event.code} ${event.reason}`);\r\n        if (onClose) onClose();\r\n      };\r\n\r\n      return {\r\n        send: (message) => {\r\n          if (ws.readyState === WebSocket.OPEN) {\r\n            const payload = JSON.stringify({ message });\r\n            console.log('üì§ Enviando via WebSocket:', payload);\r\n            ws.send(payload);\r\n          } else {\r\n            console.warn('‚ö†Ô∏è WebSocket n√£o est√° aberto para envio');\r\n          }\r\n        },\r\n        close: () => {\r\n          console.log('üîå Fechando WebSocket...');\r\n          ws.close();\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('‚ùå Erro ao criar WebSocket:', error);\r\n      if (onError) onError(error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // EVENT EMITTER PATTERN\r\n  on(event, callback) {\r\n    if (!this.eventListeners.has(event)) {\r\n      this.eventListeners.set(event, []);\r\n    }\r\n    this.eventListeners.get(event).push(callback);\r\n    console.log(`üì° Listener adicionado para evento: ${event}`);\r\n  }\r\n\r\n  off(event, callback) {\r\n    if (this.eventListeners.has(event)) {\r\n      const listeners = this.eventListeners.get(event);\r\n      const index = listeners.indexOf(callback);\r\n      if (index > -1) {\r\n        listeners.splice(index, 1);\r\n        console.log(`üì° Listener removido para evento: ${event}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  emit(event, data) {\r\n    if (this.eventListeners.has(event)) {\r\n      console.log(`üì° Emitindo evento: ${event}`, data);\r\n      this.eventListeners.get(event).forEach(callback => {\r\n        try {\r\n          callback(data);\r\n        } catch (error) {\r\n          console.error(`‚ùå Erro no listener do evento ${event}:`, error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // M√©todo para debug\r\n  getConnectionInfo() {\r\n    return {\r\n      baseURL: this.baseURL,\r\n      userId: this.userId,\r\n      connectionTimeout: this.connectionTimeout,\r\n      activeListeners: Array.from(this.eventListeners.keys()),\r\n      queuedRequests: this.requestQueue.size\r\n    };\r\n  }\r\n}\r\n\r\n// Hook React para usar o cliente Agno\r\nexport const useAgnoClient = () => {\r\n  const [client] = useState(() => new AgnoClient());\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\r\n  const [lastError, setLastError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const checkConnection = async () => {\r\n      try {\r\n        setConnectionStatus('connecting');\r\n        setLastError(null);\r\n\r\n        const connected = await client.testConnection();\r\n\r\n        if (mounted) {\r\n          setIsConnected(connected);\r\n          setConnectionStatus(connected ? 'connected' : 'disconnected');\r\n\r\n          if (connected) {\r\n            // Testar health check tamb√©m\r\n            try {\r\n              await client.healthCheck();\r\n              setConnectionStatus('healthy');\r\n            } catch (healthError) {\r\n              console.warn('Health check falhou:', healthError);\r\n              setConnectionStatus('connected'); // Ainda conectado, mas com problemas\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro no check de conex√£o:', error);\r\n        if (mounted) {\r\n          setIsConnected(false);\r\n          setConnectionStatus('error');\r\n          setLastError(error.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Check inicial\r\n    checkConnection();\r\n\r\n    // Check peri√≥dico (a cada 30 segundos)\r\n    const interval = setInterval(checkConnection, 30000);\r\n\r\n    return () => {\r\n      mounted = false;\r\n      clearInterval(interval);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    client,\r\n    isConnected,\r\n    connectionStatus,\r\n    lastError,\r\n    refresh: () => {\r\n      // For√ßa um novo check de conex√£o\r\n      setConnectionStatus('connecting');\r\n      client.testConnection().then(connected => {\r\n        setIsConnected(connected);\r\n        setConnectionStatus(connected ? 'connected' : 'disconnected');\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n// Inst√¢ncia global do cliente (pode ser usada em componentes n√£o-React)\r\nexport const agnoClientGlobal = new AgnoClient();\r\n\r\n// Log de inicializa√ß√£o\r\nconsole.log('üöÄ AgnoClient inicializado:', agnoClientGlobal.getConnectionInfo());\r\n\r\n// Export default\r\nexport default AgnoClient;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/AgnoManagementInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Bot,\r\n  Plus,\r\n  Play,\r\n  Settings,\r\n  Users,\r\n  Brain,\r\n  Zap,\r\n  MessageSquare,\r\n  ChevronRight,\r\n  Save,\r\n  Trash2,\r\n  Edit,\r\n  Copy,\r\n  GitBranch,\r\n  Activity,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Loader\r\n} from 'lucide-react';\r\n\r\n// Importar o cliente Agno\r\nimport AgnoClient from './agnoClient';\r\n\r\nconst AgnoManagementReal = () => {\r\n  const [activeTab, setActiveTab] = useState('agents');\r\n  const [agents, setAgents] = useState([]);\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [showCreateAgent, setShowCreateAgent] = useState(false);\r\n  const [showCreateWorkflow, setShowCreateWorkflow] = useState(false);\r\n  const [selectedAgent, setSelectedAgent] = useState(null);\r\n  const [selectedWorkflow, setSelectedWorkflow] = useState(null);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentResponse, setCurrentResponse] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Cliente Agno\r\n  const [agnoClient] = useState(() => new AgnoClient());\r\n  const chatEndRef = useRef(null);\r\n\r\n  // Carregar dados iniciais\r\n  useEffect(() => {\r\n    loadAgents();\r\n    loadWorkflows();\r\n    checkHealth();\r\n  }, []);\r\n\r\n  // Auto-scroll do chat\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [chatHistory, currentResponse]);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      const health = await agnoClient.healthCheck();\r\n      console.log('Backend conectado:', health);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Erro ao conectar com o backend. Verifique se est√° rodando na porta 8000.');\r\n      console.error('Erro de conex√£o:', err);\r\n    }\r\n  };\r\n\r\n  const loadAgents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await agnoClient.listAgents();\r\n      console.log('Dados recebidos do backend:', data);\r\n\r\n      const formattedAgents = data.map(agent => {\r\n        // Parsing seguro dos JSONs\r\n        let instructions = [];\r\n        let tools = [];\r\n        let langchainConfig = {};\r\n\r\n        try {\r\n          if (agent.instructions && typeof agent.instructions === 'string') {\r\n            instructions = JSON.parse(agent.instructions);\r\n          } else if (Array.isArray(agent.instructions)) {\r\n            instructions = agent.instructions;\r\n          }\r\n        } catch (e) {\r\n          console.warn('Erro ao parsear instructions:', e);\r\n          instructions = ['Assistente √∫til'];\r\n        }\r\n\r\n        try {\r\n          if (agent.langchain_config && typeof agent.langchain_config === 'string') {\r\n            langchainConfig = JSON.parse(agent.langchain_config);\r\n            tools = langchainConfig.tools || [];\r\n          } else if (agent.langchain_config && typeof agent.langchain_config === 'object') {\r\n            langchainConfig = agent.langchain_config;\r\n            tools = langchainConfig.tools || [];\r\n          }\r\n        } catch (e) {\r\n          console.warn('Erro ao parsear langchain_config:', e);\r\n          tools = [];\r\n        }\r\n\r\n        return {\r\n          id: agent.id,\r\n          name: agent.nome || 'Agente sem nome',\r\n          role: agent.agent_role || 'Assistant',\r\n          modelProvider: agent.empresa || 'openai',\r\n          modelId: agent.modelo || 'gpt-4o',\r\n          tools: tools,\r\n          status: agent.is_active_agent ? 'active' : 'inactive',\r\n          lastUsed: agent.created_at ? new Date(agent.created_at).toLocaleDateString('pt-BR') : 'N√£o dispon√≠vel',\r\n          instructions: instructions\r\n        };\r\n      });\r\n\r\n      setAgents(formattedAgents);\r\n      console.log('Agentes formatados:', formattedAgents);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar agentes:', err);\r\n      setError('Erro ao carregar agentes: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadWorkflows = async () => {\r\n    try {\r\n      const data = await agnoClient.listWorkflows();\r\n      console.log('Workflows recebidos:', data);\r\n\r\n      const formattedWorkflows = data.map(workflow => {\r\n        let workflowConfig = {};\r\n\r\n        try {\r\n          if (workflow.workflow_config && typeof workflow.workflow_config === 'string') {\r\n            workflowConfig = JSON.parse(workflow.workflow_config);\r\n          } else if (workflow.workflow_config && typeof workflow.workflow_config === 'object') {\r\n            workflowConfig = workflow.workflow_config;\r\n          }\r\n        } catch (e) {\r\n          console.warn('Erro ao parsear workflow_config:', e);\r\n          workflowConfig = {};\r\n        }\r\n\r\n        return {\r\n          id: workflow.id,\r\n          name: workflow.nome || 'Workflow sem nome',\r\n          description: workflow.descricao || 'Sem descri√ß√£o',\r\n          flowType: workflowConfig.flow_type || 'sequential',\r\n          agentCount: workflowConfig.agents?.length || 0,\r\n          status: workflow.is_active ? 'active' : 'inactive',\r\n          lastUsed: workflow.created_at ? new Date(workflow.created_at).toLocaleDateString('pt-BR') : 'N√£o dispon√≠vel'\r\n        };\r\n      });\r\n\r\n      setWorkflows(formattedWorkflows);\r\n      console.log('Workflows formatados:', formattedWorkflows);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar workflows:', err);\r\n      setError('Erro ao carregar workflows: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const CreateAgentModal = () => {\r\n    const [formData, setFormData] = useState({\r\n      name: '',\r\n      role: '',\r\n      model_provider: 'openai',\r\n      model_id: 'gpt-4o',\r\n      instructions: [''],\r\n      tools: [],\r\n      memory_enabled: true,\r\n      rag_enabled: false\r\n    });\r\n    const [creating, setCreating] = useState(false);\r\n\r\n    const availableTools = [\r\n      { id: 'duckduckgo', name: 'DuckDuckGo Search', description: 'Pesquisa na web' },\r\n      { id: 'yfinance', name: 'Yahoo Finance', description: 'Dados financeiros' },\r\n      { id: 'reasoning', name: 'Reasoning Tools', description: 'Capacidades de racioc√≠nio' }\r\n    ];\r\n\r\n    const modelOptions = {\r\n      openai: [\r\n        { id: 'gpt-4o', name: 'GPT-4o' },\r\n        { id: 'gpt-4o-mini', name: 'GPT-4o Mini' },\r\n        { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo' }\r\n      ],\r\n      anthropic: [\r\n        { id: 'claude-3-5-sonnet-20241022', name: 'Claude 3.5 Sonnet' },\r\n        { id: 'claude-3-haiku-20240307', name: 'Claude 3 Haiku' }\r\n      ]\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      if (!formData.name || !formData.role || !formData.instructions[0]) {\r\n        setError('Preencha todos os campos obrigat√≥rios');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setCreating(true);\r\n        console.log('Criando agente com dados:', formData);\r\n        const result = await agnoClient.createAgent(formData);\r\n        console.log('Agente criado:', result);\r\n        setShowCreateAgent(false);\r\n        await loadAgents(); // Recarrega a lista\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Erro ao criar agente:', err);\r\n        setError(`Erro ao criar agente: ${err.message}`);\r\n      } finally {\r\n        setCreating(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-6 flex items-center gap-2\">\r\n            <Bot className=\"w-6 h-6\" />\r\n            Criar Novo Agente\r\n          </h2>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2 text-red-700\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              <span className=\"text-sm\">{error}</span>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Nome do Agente *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Assistente de Marketing\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Papel/Fun√ß√£o *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.role}\r\n                  onChange={(e) => setFormData({...formData, role: e.target.value})}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Marketing Specialist\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Provedor do Modelo\r\n                </label>\r\n                <select\r\n                  value={formData.model_provider}\r\n                  onChange={(e) => setFormData({\r\n                    ...formData,\r\n                    model_provider: e.target.value,\r\n                    model_id: modelOptions[e.target.value][0].id\r\n                  })}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"openai\">OpenAI</option>\r\n                  <option value=\"anthropic\">Anthropic</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Modelo\r\n                </label>\r\n                <select\r\n                  value={formData.model_id}\r\n                  onChange={(e) => setFormData({...formData, model_id: e.target.value})}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  {modelOptions[formData.model_provider].map(model => (\r\n                    <option key={model.id} value={model.id}>{model.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Instru√ß√µes do Agente *\r\n              </label>\r\n              <textarea\r\n                value={formData.instructions[0]}\r\n                onChange={(e) => setFormData({\r\n                  ...formData,\r\n                  instructions: [e.target.value]\r\n                })}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                rows=\"4\"\r\n                placeholder=\"Descreva como o agente deve se comportar...\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Ferramentas Dispon√≠veis\r\n              </label>\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                {availableTools.map(tool => (\r\n                  <label key={tool.id} className=\"flex items-center p-3 border border-gray-200 rounded-lg cursor-pointer hover:bg-gray-50\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={formData.tools.includes(tool.id)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setFormData({...formData, tools: [...formData.tools, tool.id]});\r\n                        } else {\r\n                          setFormData({...formData, tools: formData.tools.filter(t => t !== tool.id)});\r\n                        }\r\n                      }}\r\n                      className=\"mr-3\"\r\n                    />\r\n                    <div>\r\n                      <div className=\"font-medium\">{tool.name}</div>\r\n                      <div className=\"text-sm text-gray-500\">{tool.description}</div>\r\n                    </div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-4\">\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.memory_enabled}\r\n                  onChange={(e) => setFormData({...formData, memory_enabled: e.target.checked})}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Habilitar Mem√≥ria</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.rag_enabled}\r\n                  onChange={(e) => setFormData({...formData, rag_enabled: e.target.checked})}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Habilitar RAG</span>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowCreateAgent(false);\r\n                  setError(null);\r\n                }}\r\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n                disabled={creating}\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmit}\r\n                disabled={creating}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 disabled:opacity-50\"\r\n              >\r\n                {creating ? (\r\n                  <>\r\n                    <Loader className=\"w-4 h-4 animate-spin\" />\r\n                    Criando...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Save className=\"w-4 h-4\" />\r\n                    Criar Agente\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ChatInterface = ({ agent, workflow }) => {\r\n    const handleSendMessage = async () => {\r\n      if (!message.trim() || isRunning) return;\r\n\r\n      const userMessage = message;\r\n      setMessage('');\r\n      setIsRunning(true);\r\n      setCurrentResponse('');\r\n\r\n      // Adiciona mensagem do usu√°rio\r\n      const newUserMessage = {\r\n        type: 'user',\r\n        content: userMessage,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      };\r\n      setChatHistory(prev => [...prev, newUserMessage]);\r\n\r\n      // Prepara resposta do agente\r\n      const agentMessage = {\r\n        type: 'agent',\r\n        content: '',\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        agentName: agent ? agent.name : workflow.name\r\n      };\r\n      setChatHistory(prev => [...prev, agentMessage]);\r\n\r\n      try {\r\n        const onChunk = (chunk) => {\r\n          setCurrentResponse(prev => prev + chunk);\r\n        };\r\n\r\n        const onComplete = (data) => {\r\n          setChatHistory(prev => {\r\n            const updated = [...prev];\r\n            const lastMessage = updated[updated.length - 1];\r\n            lastMessage.content = currentResponse;\r\n            lastMessage.completed = true;\r\n            return updated;\r\n          });\r\n          setCurrentResponse('');\r\n          setIsRunning(false);\r\n          setError(null);\r\n        };\r\n\r\n        const onError = (error) => {\r\n          console.error('Erro no chat:', error);\r\n          setError(`Erro: ${error.message}`);\r\n          setIsRunning(false);\r\n          setCurrentResponse('');\r\n\r\n          // Remove a mensagem de resposta vazia em caso de erro\r\n          setChatHistory(prev => prev.slice(0, -1));\r\n        };\r\n\r\n        if (agent) {\r\n          await agnoClient.chatWithAgent(agent.id, userMessage, onChunk, onComplete, onError);\r\n        } else if (workflow) {\r\n          // Temporariamente desabilitado at√© implementarmos o endpoint\r\n          onError(new Error('Chat com workflows ainda n√£o implementado. Use a aba de agentes.'));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Erro ao enviar mensagem:', error);\r\n        setError(`Erro ao enviar mensagem: ${error.message}`);\r\n        setIsRunning(false);\r\n        setCurrentResponse('');\r\n\r\n        // Remove a mensagem de resposta vazia em caso de erro\r\n        setChatHistory(prev => prev.slice(0, -1));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"mb-4\">\r\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\r\n            {agent ? <Bot className=\"w-5 h-5\" /> : <GitBranch className=\"w-5 h-5\" />}\r\n            Chat com {agent ? agent.name : workflow.name}\r\n          </h3>\r\n          {agent && (\r\n            <div className=\"text-sm text-gray-500 mt-1\">\r\n              Modelo: {agent.modelId} | Provider: {agent.modelProvider} | Tools: {agent.tools.join(', ') || 'Nenhuma'}\r\n            </div>\r\n          )}\r\n          {workflow && (\r\n            <div className=\"text-sm text-orange-600 mt-1 p-2 bg-orange-50 rounded\">\r\n              ‚ö†Ô∏è Chat com workflows ser√° implementado em breve. Use agentes individuais por enquanto.\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <div className=\"mt-2 p-2 bg-red-50 border border-red-200 rounded text-red-700 text-sm flex items-center gap-2\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              {error}\r\n              <button\r\n                onClick={() => setError(null)}\r\n                className=\"ml-auto text-red-500 hover:text-red-700\"\r\n              >\r\n                √ó\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"h-96 border border-gray-200 rounded-lg p-4 overflow-y-auto mb-4 bg-gray-50\">\r\n          {chatHistory.length === 0 ? (\r\n            <div className=\"text-center text-gray-500 mt-20\">\r\n              <MessageSquare className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n              <p>Inicie uma conversa com {agent ? 'o agente' : 'o workflow'}</p>\r\n              <p className=\"text-xs mt-1\">Este chat usa o Agno real conectado ao backend!</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {chatHistory.map((msg, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`${\r\n                    msg.type === 'user' \r\n                      ? 'ml-auto bg-blue-500 text-white' \r\n                      : 'mr-auto bg-white text-gray-800 border border-gray-200'\r\n                  } max-w-[80%] p-3 rounded-lg shadow-sm`}\r\n                >\r\n                  <div className=\"text-sm whitespace-pre-wrap\">\r\n                    {msg.content || (msg.type === 'agent' && !msg.completed ? currentResponse : '')}\r\n                  </div>\r\n                  {msg.type === 'agent' && !msg.completed && isRunning && (\r\n                    <div className=\"flex items-center gap-2 mt-2 text-xs text-gray-500\">\r\n                      <Loader className=\"w-3 h-3 animate-spin\" />\r\n                      <span>Digitando...</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"text-xs mt-1 opacity-70\">\r\n                    {msg.agentName && `${msg.agentName} ‚Ä¢ `}{msg.timestamp}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div ref={chatEndRef} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage()}\r\n            placeholder=\"Digite sua mensagem...\"\r\n            className=\"flex-1 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            disabled={isRunning || (workflow && !agent)}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={isRunning || !message.trim() || (workflow && !agent)}\r\n            className=\"px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\r\n          >\r\n            {isRunning ? (\r\n              <Loader className=\"w-4 h-4 animate-spin\" />\r\n            ) : (\r\n              <Play className=\"w-4 h-4\" />\r\n            )}\r\n            Enviar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                <Zap className=\"w-6 h-6 text-blue-600\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Agno Management</h1>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Plataforma real com Agno funcionando ‚Ä¢ {agents.length} agentes ‚Ä¢ {workflows.length} workflows\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowCreateAgent(true);\r\n                  setError(null);\r\n                }}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Novo Agente\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setError('Cria√ß√£o de workflows ser√° implementada em breve');\r\n                }}\r\n                className=\"px-4 py-2 bg-gray-400 text-white rounded-lg cursor-not-allowed flex items-center gap-2\"\r\n                disabled\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Novo Workflow\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Global Error Display */}\r\n        {error && (\r\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\r\n            <AlertCircle className=\"w-5 h-5 text-red-500 mt-0.5\" />\r\n            <div className=\"flex-1\">\r\n              <h3 className=\"font-medium text-red-800\">Erro</h3>\r\n              <p className=\"text-red-700 text-sm mt-1\">{error}</p>\r\n            </div>\r\n            <button\r\n              onClick={() => setError(null)}\r\n              className=\"text-red-500 hover:text-red-700\"\r\n            >\r\n              √ó\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Navigation Tabs */}\r\n        <div className=\"mb-8\">\r\n          <nav className=\"flex space-x-8\">\r\n            <button\r\n              onClick={() => setActiveTab('agents')}\r\n              className={`${\r\n                activeTab === 'agents'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <Bot className=\"w-4 h-4\" />\r\n              Agentes ({agents.length})\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('workflows')}\r\n              className={`${\r\n                activeTab === 'workflows'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <GitBranch className=\"w-4 h-4\" />\r\n              Workflows ({workflows.length})\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('chat')}\r\n              className={`${\r\n                activeTab === 'chat'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <MessageSquare className=\"w-4 h-4\" />\r\n              Testar\r\n            </button>\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <Loader className=\"w-8 h-8 animate-spin text-blue-600\" />\r\n            <span className=\"ml-3 text-gray-600\">Carregando dados...</span>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Agents Tab */}\r\n            {activeTab === 'agents' && (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {agents.map(agent => (\r\n                  <div key={agent.id} className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow\">\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                          <Bot className=\"w-5 h-5 text-blue-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <h3 className=\"font-semibold text-gray-900\">{agent.name}</h3>\r\n                          <p className=\"text-sm text-gray-500\">{agent.role}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <div className={`w-2 h-2 rounded-full ${\r\n                          agent.status === 'active' ? 'bg-green-500' : 'bg-gray-400'\r\n                        }`} />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2 mb-4\">\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Brain className=\"w-4 h-4\" />\r\n                        <span>{agent.modelProvider} - {agent.modelId}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        <span>{agent.tools.length} ferramentas</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Activity className=\"w-4 h-4\" />\r\n                        <span>Criado: {agent.lastUsed}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedAgent(agent);\r\n                          setSelectedWorkflow(null);\r\n                          setActiveTab('chat');\r\n                          setChatHistory([]);\r\n                          setError(null);\r\n                        }}\r\n                        className=\"flex-1 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 flex items-center justify-center gap-2\"\r\n                      >\r\n                        <Play className=\"w-4 h-4\" />\r\n                        Testar\r\n                      </button>\r\n                      <button className=\"px-3 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        Config\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {agents.length === 0 && !loading && (\r\n                  <div className=\"col-span-full text-center py-12\">\r\n                    <Bot className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                      Nenhum agente criado\r\n                    </h3>\r\n                    <p className=\"text-gray-500 mb-4\">\r\n                      Crie seu primeiro agente para come√ßar a usar o Agno.\r\n                    </p>\r\n                    <button\r\n                      onClick={() => setShowCreateAgent(true)}\r\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                    >\r\n                      Criar Primeiro Agente\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Workflows Tab */}\r\n            {activeTab === 'workflows' && (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {workflows.map(workflow => (\r\n                  <div key={workflow.id} className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow\">\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"p-2 bg-green-100 rounded-lg\">\r\n                          <GitBranch className=\"w-5 h-5 text-green-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <h3 className=\"font-semibold text-gray-900\">{workflow.name}</h3>\r\n                          <p className=\"text-sm text-gray-500\">{workflow.description}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2 mb-4\">\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Users className=\"w-4 h-4\" />\r\n                        <span>{workflow.agentCount} agentes</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <ChevronRight className=\"w-4 h-4\" />\r\n                        <span>Tipo: {workflow.flowType}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Activity className=\"w-4 h-4\" />\r\n                        <span>Criado: {workflow.lastUsed}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedWorkflow(workflow);\r\n                          setSelectedAgent(null);\r\n                          setActiveTab('chat');\r\n                          setChatHistory([]);\r\n                          setError(null);\r\n                        }}\r\n                        className=\"flex-1 px-3 py-2 bg-green-600 text-white text-sm rounded-lg hover:bg-green-700 flex items-center justify-center gap-2\"\r\n                      >\r\n                        <Play className=\"w-4 h-4\" />\r\n                        Executar\r\n                      </button>\r\n                      <button className=\"px-3 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        Config\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {workflows.length === 0 && !loading && (\r\n                  <div className=\"col-span-full text-center py-12\">\r\n                    <GitBranch className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                      Nenhum workflow criado\r\n                    </h3>\r\n                    <p className=\"text-gray-500 mb-4\">\r\n                      Workflows permitem coordenar m√∫ltiplos agentes. Em breve!\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Chat Tab */}\r\n            {activeTab === 'chat' && (\r\n              <div className=\"max-w-4xl mx-auto\">\r\n                {selectedAgent || selectedWorkflow ? (\r\n                  <ChatInterface agent={selectedAgent} workflow={selectedWorkflow} />\r\n                ) : (\r\n                  <div className=\"bg-white rounded-lg shadow-lg p-12 text-center\">\r\n                    <MessageSquare className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                      Selecione um Agente\r\n                    </h3>\r\n                    <p className=\"text-gray-500 mb-6\">\r\n                      Escolha um agente para iniciar um chat com o Agno real.\r\n                    </p>\r\n                    <div className=\"flex justify-center gap-4\">\r\n                      <button\r\n                        onClick={() => setActiveTab('agents')}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n                      >\r\n                        <Bot className=\"w-4 h-4\" />\r\n                        Ver Agentes\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {showCreateAgent && <CreateAgentModal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgnoManagementReal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2402, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/AgentTemplates.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Bot,\r\n  FileText,\r\n  Download,\r\n  Upload,\r\n  Star,\r\n  Search,\r\n  Filter,\r\n  Plus,\r\n  Edit,\r\n  Trash2,\r\n  Copy,\r\n  Eye,\r\n  Tag,\r\n  Clock,\r\n  User,\r\n  Zap,\r\n  Brain,\r\n  TrendingUp,\r\n  Code,\r\n  MessageSquare,\r\n  Loader,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  X,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\n// Import do cliente Agno\r\nimport AgnoClient from './agnoClient';\r\n\r\nconst AgentTemplatesReal = () => {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showCreateTemplate, setShowCreateTemplate] = useState(false);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n  const [templateToEdit, setTemplateToEdit] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  // Cliente Agno\r\n  const [agnoClient] = useState(() => new AgnoClient());\r\n\r\n  // Carregar dados iniciais\r\n  useEffect(() => {\r\n    loadTemplatesAndAgents();\r\n  }, []);\r\n\r\n  const loadTemplatesAndAgents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Carregar agentes existentes para usar como base para templates\r\n      const agentsData = await agnoClient.listAgents();\r\n      setAgents(agentsData);\r\n\r\n      // Criar templates baseados nos agentes existentes\r\n      const templatesFromAgents = agentsData.map((agent, index) => {\r\n        let instructions = [];\r\n        let tools = [];\r\n\r\n        try {\r\n          instructions = typeof agent.instructions === 'string'\r\n            ? JSON.parse(agent.instructions)\r\n            : agent.instructions || ['Assistente √∫til'];\r\n        } catch (e) {\r\n          instructions = ['Assistente √∫til'];\r\n        }\r\n\r\n        try {\r\n          const langchainConfig = typeof agent.langchain_config === 'string'\r\n            ? JSON.parse(agent.langchain_config)\r\n            : agent.langchain_config || {};\r\n          tools = langchainConfig.tools || [];\r\n        } catch (e) {\r\n          tools = [];\r\n        }\r\n\r\n        return {\r\n          id: `template_${agent.id}`,\r\n          name: `Template: ${agent.nome}`,\r\n          description: `Template baseado no agente ${agent.nome} com papel de ${agent.agent_role}`,\r\n          category: inferCategory(agent.agent_role, agent.nome),\r\n          author: 'Sistema',\r\n          isPublic: true,\r\n          isFeatured: index < 2, // Primeiros 2 como featured\r\n          rating: 4.5 + Math.random() * 0.5,\r\n          downloads: Math.floor(Math.random() * 1000) + 100,\r\n          lastUpdated: agent.created_at ? new Date(agent.created_at).toISOString().split('T')[0] : '2025-01-28',\r\n          tags: generateTags(agent.agent_role, tools),\r\n          originalAgentId: agent.id,\r\n          config: {\r\n            modelProvider: agent.empresa || 'openai',\r\n            modelId: agent.modelo || 'gpt-4o',\r\n            tools: tools,\r\n            instructions: instructions,\r\n            memoryEnabled: true,\r\n            ragEnabled: agent.usa_rag || false,\r\n            reasoningEnabled: tools.includes('reasoning')\r\n          }\r\n        };\r\n      });\r\n\r\n      // Adicionar alguns templates padr√£o\r\n      const defaultTemplates = [\r\n        {\r\n          id: 'template_research',\r\n          name: 'Assistente de Pesquisa Acad√™mica',\r\n          description: 'Especializado em pesquisa acad√™mica com cita√ß√µes e an√°lise cr√≠tica',\r\n          category: 'research',\r\n          author: 'Sistema',\r\n          isPublic: true,\r\n          isFeatured: true,\r\n          rating: 4.8,\r\n          downloads: 2847,\r\n          lastUpdated: '2025-01-28',\r\n          tags: ['pesquisa', 'acad√™mico', 'cita√ß√µes', 'an√°lise'],\r\n          config: {\r\n            modelProvider: 'openai',\r\n            modelId: 'gpt-4o',\r\n            tools: ['duckduckgo', 'reasoning'],\r\n            instructions: [\r\n              'Voc√™ √© um assistente de pesquisa acad√™mica especializado.',\r\n              'Sempre cite suas fontes e forne√ßa an√°lise cr√≠tica.',\r\n              'Use formata√ß√£o acad√™mica apropriada.',\r\n              'Mantenha-se atualizado com as √∫ltimas descobertas em sua √°rea.'\r\n            ],\r\n            memoryEnabled: true,\r\n            ragEnabled: true,\r\n            reasoningEnabled: true\r\n          }\r\n        },\r\n        {\r\n          id: 'template_finance',\r\n          name: 'Analista Financeiro Pro',\r\n          description: 'An√°lise financeira avan√ßada com dados de mercado em tempo real',\r\n          category: 'finance',\r\n          author: 'Sistema',\r\n          isPublic: true,\r\n          isFeatured: true,\r\n          rating: 4.9,\r\n          downloads: 1923,\r\n          lastUpdated: '2025-01-27',\r\n          tags: ['finan√ßas', 'mercado', 'an√°lise', 'investimentos'],\r\n          config: {\r\n            modelProvider: 'anthropic',\r\n            modelId: 'claude-3-5-sonnet-20241022',\r\n            tools: ['yfinance', 'reasoning'],\r\n            instructions: [\r\n              'Voc√™ √© um analista financeiro s√™nior com expertise em mercados globais.',\r\n              'Forne√ßa insights detalhados com disclaimers apropriados.',\r\n              'Use gr√°ficos e tabelas para apresentar dados complexos.',\r\n              'Sempre considere o contexto econ√¥mico atual.',\r\n              'Inclua an√°lise de risco em suas recomenda√ß√µes.'\r\n            ],\r\n            memoryEnabled: true,\r\n            ragEnabled: false,\r\n            reasoningEnabled: true\r\n          }\r\n        },\r\n        {\r\n          id: 'template_marketing',\r\n          name: 'Especialista em Marketing Digital',\r\n          description: 'Estrat√©gias de marketing digital e an√°lise de campanhas modernas',\r\n          category: 'marketing',\r\n          author: 'Sistema',\r\n          isPublic: true,\r\n          isFeatured: false,\r\n          rating: 4.6,\r\n          downloads: 1456,\r\n          lastUpdated: '2025-01-26',\r\n          tags: ['marketing', 'digital', 'campanhas', 'redes sociais'],\r\n          config: {\r\n            modelProvider: 'openai',\r\n            modelId: 'gpt-4o-mini',\r\n            tools: ['duckduckgo', 'reasoning'],\r\n            instructions: [\r\n              'Voc√™ √© um especialista em marketing digital com experi√™ncia em Growth Hacking.',\r\n              'Foque em estrat√©gias pr√°ticas e mensur√°veis com ROI claro.',\r\n              'Considere as √∫ltimas tend√™ncias em redes sociais e SEO.',\r\n              'Forne√ßa exemplos concretos e casos de uso.',\r\n              'Inclua m√©tricas relevantes para cada estrat√©gia sugerida.'\r\n            ],\r\n            memoryEnabled: true,\r\n            ragEnabled: true,\r\n            reasoningEnabled: false\r\n          }\r\n        }\r\n      ];\r\n\r\n      const allTemplates = [...templatesFromAgents, ...defaultTemplates];\r\n      setTemplates(allTemplates);\r\n\r\n      // Calcular categorias\r\n      const categoryCount = {};\r\n      allTemplates.forEach(template => {\r\n        categoryCount[template.category] = (categoryCount[template.category] || 0) + 1;\r\n      });\r\n\r\n      const calculatedCategories = [\r\n        { id: 'all', name: 'Todos', count: allTemplates.length },\r\n        { id: 'research', name: 'Pesquisa', count: categoryCount.research || 0 },\r\n        { id: 'finance', name: 'Financeiro', count: categoryCount.finance || 0 },\r\n        { id: 'marketing', name: 'Marketing', count: categoryCount.marketing || 0 },\r\n        { id: 'development', name: 'Desenvolvimento', count: categoryCount.development || 0 },\r\n        { id: 'support', name: 'Suporte', count: categoryCount.support || 0 },\r\n        { id: 'general', name: 'Geral', count: categoryCount.general || 0 }\r\n      ];\r\n\r\n      setCategories(calculatedCategories);\r\n\r\n    } catch (err) {\r\n      console.error('Erro ao carregar templates:', err);\r\n      setError(`Erro ao carregar templates: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const inferCategory = (role, name) => {\r\n    const text = `${role} ${name}`.toLowerCase();\r\n    if (text.includes('pesquis') || text.includes('research') || text.includes('academ')) return 'research';\r\n    if (text.includes('financ') || text.includes('market') || text.includes('invest')) return 'finance';\r\n    if (text.includes('marketing') || text.includes('social')) return 'marketing';\r\n    if (text.includes('dev') || text.includes('code') || text.includes('program')) return 'development';\r\n    if (text.includes('support') || text.includes('help') || text.includes('assist')) return 'support';\r\n    return 'general';\r\n  };\r\n\r\n  const generateTags = (role, tools) => {\r\n    const tags = [];\r\n    if (role) tags.push(role.toLowerCase());\r\n    tools.forEach(tool => tags.push(tool));\r\n    return tags.slice(0, 4); // M√°ximo 4 tags\r\n  };\r\n\r\n  const filteredTemplates = templates.filter(template => {\r\n    const matchesCategory = selectedCategory === 'all' || template.category === selectedCategory;\r\n    const matchesSearch = template.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         template.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         template.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    return matchesCategory && matchesSearch;\r\n  });\r\n\r\n  const handleUseTemplate = async (template) => {\r\n    try {\r\n      setError(null);\r\n\r\n      // Criar agente baseado no template\r\n      const agentData = {\r\n        name: template.name.replace('Template: ', ''),\r\n        role: template.config.instructions[0] || 'Assistant',\r\n        model_provider: template.config.modelProvider,\r\n        model_id: template.config.modelId,\r\n        instructions: template.config.instructions,\r\n        tools: template.config.tools,\r\n        memory_enabled: template.config.memoryEnabled,\r\n        rag_enabled: template.config.ragEnabled\r\n      };\r\n\r\n      console.log('Criando agente a partir do template:', agentData);\r\n      const result = await agnoClient.createAgent(agentData);\r\n\r\n      alert(`Agente criado com sucesso! ID: ${result.agent_id}`);\r\n\r\n      // Recarregar dados para mostrar o novo agente\r\n      await loadTemplatesAndAgents();\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao usar template:', error);\r\n      setError(`Erro ao criar agente: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCloneTemplate = (template) => {\r\n    setTemplateToEdit({\r\n      ...template,\r\n      id: `template_clone_${Date.now()}`,\r\n      name: `${template.name} (C√≥pia)`,\r\n      author: 'Voc√™',\r\n      isPublic: false,\r\n      downloads: 0\r\n    });\r\n    setShowCreateTemplate(true);\r\n  };\r\n\r\n  const handleDeleteTemplate = (templateId) => {\r\n    if (confirm('Tem certeza que deseja excluir este template?')) {\r\n      setTemplates(prev => prev.filter(t => t.id !== templateId));\r\n    }\r\n  };\r\n\r\n  const TemplateCard = ({ template, onView, onEdit, onClone, onUse, onDelete }) => {\r\n    const categoryColors = {\r\n      research: 'bg-blue-100 text-blue-800',\r\n      finance: 'bg-green-100 text-green-800',\r\n      marketing: 'bg-purple-100 text-purple-800',\r\n      development: 'bg-orange-100 text-orange-800',\r\n      support: 'bg-gray-100 text-gray-800',\r\n      general: 'bg-indigo-100 text-indigo-800'\r\n    };\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200 group\">\r\n        {/* Header */}\r\n        <div className=\"flex items-start justify-between mb-4\">\r\n          <div className=\"flex items-center gap-3 flex-1 min-w-0\">\r\n            <div className=\"p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg text-white flex-shrink-0\">\r\n              <Bot className=\"w-5 h-5\" />\r\n            </div>\r\n            <div className=\"min-w-0 flex-1\">\r\n              <h3 className=\"font-semibold text-gray-900 flex items-center gap-2 truncate\">\r\n                {template.name}\r\n                {template.isFeatured && (\r\n                  <Star className=\"w-4 h-4 text-yellow-500 fill-current flex-shrink-0\" />\r\n                )}\r\n              </h3>\r\n              <div className=\"flex items-center gap-2 text-xs text-gray-500 mt-1\">\r\n                <User className=\"w-3 h-3\" />\r\n                <span>{template.author}</span>\r\n                <span>‚Ä¢</span>\r\n                <Clock className=\"w-3 h-3\" />\r\n                <span>{template.lastUpdated}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n            <button\r\n              onClick={() => onView(template)}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600 rounded\"\r\n              title=\"Ver detalhes\"\r\n            >\r\n              <Eye className=\"w-4 h-4\" />\r\n            </button>\r\n            <button\r\n              onClick={() => onClone(template)}\r\n              className=\"p-1 text-gray-400 hover:text-green-600 rounded\"\r\n              title=\"Clonar\"\r\n            >\r\n              <Copy className=\"w-4 h-4\" />\r\n            </button>\r\n            {template.author === 'Voc√™' && (\r\n              <>\r\n                <button\r\n                  onClick={() => onEdit(template)}\r\n                  className=\"p-1 text-gray-400 hover:text-blue-600 rounded\"\r\n                  title=\"Editar\"\r\n                >\r\n                  <Edit className=\"w-4 h-4\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => onDelete(template.id)}\r\n                  className=\"p-1 text-gray-400 hover:text-red-600 rounded\"\r\n                  title=\"Excluir\"\r\n                >\r\n                  <Trash2 className=\"w-4 h-4\" />\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Descri√ß√£o */}\r\n        <p className=\"text-sm text-gray-600 mb-4 line-clamp-2 min-h-[2.5rem]\">\r\n          {template.description}\r\n        </p>\r\n\r\n        {/* Tags e Categoria */}\r\n        <div className=\"flex items-center gap-2 mb-4 flex-wrap\">\r\n          <span className={`px-2 py-1 text-xs font-medium rounded-full ${categoryColors[template.category] || categoryColors.general}`}>\r\n            {categories.find(c => c.id === template.category)?.name || 'Geral'}\r\n          </span>\r\n          {template.tags.slice(0, 2).map(tag => (\r\n            <span key={tag} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded\">\r\n              {tag}\r\n            </span>\r\n          ))}\r\n          {template.tags.length > 2 && (\r\n            <span className=\"text-xs text-gray-400\">+{template.tags.length - 2}</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Configura√ß√µes */}\r\n        <div className=\"flex items-center gap-4 text-xs text-gray-500 mb-4\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Brain className=\"w-3 h-3\" />\r\n            <span>{template.config.modelId}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <Zap className=\"w-3 h-3\" />\r\n            <span>{template.config.tools.length} tools</span>\r\n          </div>\r\n          {template.config.reasoningEnabled && (\r\n            <div className=\"flex items-center gap-1 text-purple-500\">\r\n              <TrendingUp className=\"w-3 h-3\" />\r\n              <span>AI</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Stats */}\r\n        <div className=\"flex items-center justify-between text-xs text-gray-500 mb-4\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"flex items-center gap-1\">\r\n              <Star className=\"w-3 h-3 text-yellow-500\" />\r\n              <span>{template.rating.toFixed(1)}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1\">\r\n              <Download className=\"w-3 h-3\" />\r\n              <span>{template.downloads.toLocaleString()}</span>\r\n            </div>\r\n          </div>\r\n          {template.isPublic && (\r\n            <span className=\"bg-green-100 text-green-600 px-2 py-1 rounded text-[10px] font-medium\">\r\n              P√∫blico\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={() => onUse(template)}\r\n            className=\"flex-1 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 flex items-center justify-center gap-2 transition-colors\"\r\n          >\r\n            <Plus className=\"w-4 h-4\" />\r\n            Usar Template\r\n          </button>\r\n          <button\r\n            onClick={() => onView(template)}\r\n            className=\"px-3 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50 transition-colors\"\r\n          >\r\n            Ver\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const TemplateModal = ({ template, onClose, onUse }) => {\r\n    if (!template) return null;\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <div className=\"flex justify-between items-start mb-6\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\r\n                {template.name}\r\n                {template.isFeatured && (\r\n                  <Star className=\"w-5 h-5 text-yellow-500 fill-current\" />\r\n                )}\r\n              </h2>\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-500 mt-1\">\r\n                <User className=\"w-4 h-4\" />\r\n                <span>Por {template.author}</span>\r\n                <span>‚Ä¢</span>\r\n                <Star className=\"w-4 h-4 text-yellow-500\" />\r\n                <span>{template.rating.toFixed(1)}</span>\r\n                <span>‚Ä¢</span>\r\n                <Download className=\"w-4 h-4\" />\r\n                <span>{template.downloads.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {/* Descri√ß√£o */}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Descri√ß√£o</h3>\r\n              <p className=\"text-gray-600\">{template.description}</p>\r\n            </div>\r\n\r\n            {/* Tags */}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Tags</h3>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {template.tags.map(tag => (\r\n                  <span key={tag} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded\">\r\n                    {tag}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Configura√ß√£o */}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Configura√ß√£o</h3>\r\n              <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <span className=\"text-sm font-medium text-gray-700\">Modelo:</span>\r\n                    <div className=\"text-sm text-gray-600\">{template.config.modelProvider} - {template.config.modelId}</div>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-sm font-medium text-gray-700\">Ferramentas:</span>\r\n                    <div className=\"text-sm text-gray-600\">{template.config.tools.join(', ') || 'Nenhuma'}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <span className=\"text-sm font-medium text-gray-700\">Funcionalidades:</span>\r\n                  <div className=\"flex flex-wrap gap-2 mt-1\">\r\n                    {template.config.memoryEnabled && (\r\n                      <span className=\"px-2 py-1 text-xs bg-blue-100 text-blue-600 rounded\">Mem√≥ria</span>\r\n                    )}\r\n                    {template.config.ragEnabled && (\r\n                      <span className=\"px-2 py-1 text-xs bg-green-100 text-green-600 rounded\">RAG</span>\r\n                    )}\r\n                    {template.config.reasoningEnabled && (\r\n                      <span className=\"px-2 py-1 text-xs bg-purple-100 text-purple-600 rounded\">Reasoning</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <span className=\"text-sm font-medium text-gray-700\">Instru√ß√µes:</span>\r\n                  <div className=\"mt-1 space-y-1 max-h-40 overflow-y-auto\">\r\n                    {template.config.instructions.map((instruction, index) => (\r\n                      <div key={index} className=\"text-sm text-gray-600 bg-white p-2 rounded border\">\r\n                        {instruction}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n            >\r\n              Fechar\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                onUse(template);\r\n                onClose();\r\n              }}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n            >\r\n              <Plus className=\"w-4 h-4\" />\r\n              Usar Template\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CreateTemplateModal = ({ onClose, onSave, editingTemplate }) => {\r\n    const [formData, setFormData] = useState(editingTemplate || {\r\n      name: '',\r\n      description: '',\r\n      category: 'general',\r\n      tags: [],\r\n      isPublic: false,\r\n      config: {\r\n        modelProvider: 'openai',\r\n        modelId: 'gpt-4o',\r\n        tools: [],\r\n        instructions: [''],\r\n        memoryEnabled: true,\r\n        ragEnabled: false,\r\n        reasoningEnabled: false\r\n      }\r\n    });\r\n\r\n    const [tagInput, setTagInput] = useState('');\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const addTag = () => {\r\n      if (tagInput.trim() && !formData.tags.includes(tagInput.trim())) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          tags: [...prev.tags, tagInput.trim()]\r\n        }));\r\n        setTagInput('');\r\n      }\r\n    };\r\n\r\n    const removeTag = (tagToRemove) => {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n      }));\r\n    };\r\n\r\n    const handleSave = async () => {\r\n      if (!formData.name || !formData.description || !formData.config.instructions[0]) {\r\n        setError('Preencha todos os campos obrigat√≥rios');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setSaving(true);\r\n\r\n        const newTemplate = {\r\n          ...formData,\r\n          id: editingTemplate?.id || `template_custom_${Date.now()}`,\r\n          author: 'Voc√™',\r\n          rating: 5.0,\r\n          downloads: 0,\r\n          lastUpdated: new Date().toISOString().split('T')[0],\r\n          isPublic: formData.isPublic,\r\n          isFeatured: false\r\n        };\r\n\r\n        if (editingTemplate) {\r\n          setTemplates(prev => prev.map(t => t.id === editingTemplate.id ? newTemplate : t));\r\n        } else {\r\n          setTemplates(prev => [...prev, newTemplate]);\r\n        }\r\n\r\n        onClose();\r\n        setError(null);\r\n\r\n      } catch (err) {\r\n        setError(`Erro ao salvar template: ${err.message}`);\r\n      } finally {\r\n        setSaving(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-6 flex items-center gap-2\">\r\n            <FileText className=\"w-6 h-6\" />\r\n            {editingTemplate ? 'Editar Template' : 'Criar Template de Agente'}\r\n          </h2>\r\n\r\n          <div className=\"space-y-6\">\r\n            {/* Informa√ß√µes b√°sicas */}\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Nome do Template *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Assistente de Marketing\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Categoria\r\n                </label>\r\n                <select\r\n                  value={formData.category}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value }))}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"general\">Geral</option>\r\n                  <option value=\"research\">Pesquisa</option>\r\n                  <option value=\"finance\">Financeiro</option>\r\n                  <option value=\"marketing\">Marketing</option>\r\n                  <option value=\"development\">Desenvolvimento</option>\r\n                  <option value=\"support\">Suporte</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Descri√ß√£o *\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                rows=\"3\"\r\n                placeholder=\"Descreva o prop√≥sito e funcionalidades do template...\"\r\n              />\r\n            </div>\r\n\r\n            {/* Tags */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Tags\r\n              </label>\r\n              <div className=\"flex gap-2 mb-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={tagInput}\r\n                  onChange={(e) => setTagInput(e.target.value)}\r\n                  onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addTag())}\r\n                  className=\"flex-1 p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Digite uma tag e pressione Enter\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={addTag}\r\n                  className=\"px-3 py-2 bg-gray-100 text-gray-700 rounded hover:bg-gray-200\"\r\n                >\r\n                  <Plus className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {formData.tags.map(tag => (\r\n                  <span key={tag} className=\"flex items-center gap-1 px-2 py-1 text-xs bg-blue-100 text-blue-600 rounded\">\r\n                    {tag}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeTag(tag)}\r\n                      className=\"text-blue-400 hover:text-blue-600\"\r\n                    >\r\n                      <X className=\"w-3 h-3\" />\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Configura√ß√£o do modelo */}\r\n            <div className=\"bg-gray-50 rounded-lg p-4\">\r\n              <h3 className=\"font-semibold text-gray-900 mb-4\">Configura√ß√£o do Agente</h3>\r\n\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Provedor\r\n                  </label>\r\n                  <select\r\n                    value={formData.config.modelProvider}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, modelProvider: e.target.value }\r\n                    }))}\r\n                    className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"openai\">OpenAI</option>\r\n                    <option value=\"anthropic\">Anthropic</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Modelo\r\n                  </label>\r\n                  <select\r\n                    value={formData.config.modelId}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, modelId: e.target.value }\r\n                    }))}\r\n                    className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    {formData.config.modelProvider === 'openai' ? (\r\n                      <>\r\n                        <option key=\"openai-gpt-4o\" value=\"gpt-4o\">GPT-4o</option>\r\n                        <option key=\"openai-gpt-4o-mini\" value=\"gpt-4o-mini\">GPT-4o Mini</option>\r\n                        <option key=\"openai-gpt-3.5-turbo\" value=\"gpt-3.5-turbo\">GPT-3.5 Turbo</option>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <option key=\"anthropic-claude-3-5-sonnet\" value=\"claude-3-5-sonnet-20241022\">Claude 3.5 Sonnet</option>\r\n                        <option key=\"anthropic-claude-3-haiku\" value=\"claude-3-haiku-20240307\">Claude 3 Haiku</option>\r\n                      </>\r\n                    )}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Ferramentas\r\n                </label>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\r\n                  {['duckduckgo', 'yfinance', 'reasoning'].map(tool => (\r\n                    <label key={`tool-${tool}`} className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={formData.config.tools.includes(tool)}\r\n                        onChange={(e) => {\r\n                          const tools = e.target.checked\r\n                            ? [...formData.config.tools, tool]\r\n                            : formData.config.tools.filter(t => t !== tool);\r\n                          setFormData(prev => ({\r\n                            ...prev,\r\n                            config: { ...prev.config, tools }\r\n                          }));\r\n                        }}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <span className=\"text-sm capitalize\">{tool}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Instru√ß√µes do Agente *\r\n                </label>\r\n                <textarea\r\n                  value={formData.config.instructions[0]}\r\n                  onChange={(e) => setFormData(prev => ({\r\n                    ...prev,\r\n                    config: { ...prev.config, instructions: [e.target.value] }\r\n                  }))}\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Descreva como o agente deve se comportar...\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex flex-wrap items-center gap-6\">\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.config.memoryEnabled}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, memoryEnabled: e.target.checked }\r\n                    }))}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm font-medium\">Habilitar Mem√≥ria</span>\r\n                </label>\r\n\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.config.ragEnabled}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, ragEnabled: e.target.checked }\r\n                    }))}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm font-medium\">Habilitar RAG</span>\r\n                </label>\r\n\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.config.reasoningEnabled}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, reasoningEnabled: e.target.checked }\r\n                    }))}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm font-medium\">Habilitar Reasoning</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Visibilidade */}\r\n            <div>\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.isPublic}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, isPublic: e.target.checked }))}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Tornar template p√∫blico</span>\r\n                <span className=\"text-xs text-gray-500 ml-2\">(outros usu√°rios poder√£o usar)</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n              disabled={saving}\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              onClick={handleSave}\r\n              disabled={saving}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 disabled:opacity-50\"\r\n            >\r\n              {saving ? (\r\n                <>\r\n                  <Loader className=\"w-4 h-4 animate-spin\" />\r\n                  Salvando...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FileText className=\"w-4 h-4\" />\r\n                  {editingTemplate ? 'Salvar Altera√ß√µes' : 'Criar Template'}\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <Loader className=\"w-8 h-8 animate-spin text-blue-600 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Carregando Templates</h3>\r\n          <p className=\"text-gray-500\">Conectando com o backend...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center py-4 gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg text-white\">\r\n                <FileText className=\"w-6 h-6\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Templates de Agentes</h1>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {templates.length} templates dispon√≠veis ‚Ä¢ Crie e use templates para acelerar o desenvolvimento\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                onClick={loadTemplatesAndAgents}\r\n                disabled={loading}\r\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 flex items-center gap-2 disabled:opacity-50\"\r\n              >\r\n                <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\r\n                Atualizar\r\n              </button>\r\n              <button\r\n                onClick={() => setShowCreateTemplate(true)}\r\n                className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:opacity-90 flex items-center gap-2\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Novo Template\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Display */}\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2 text-red-700\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              <span className=\"text-sm flex-1\">{error}</span>\r\n              <button\r\n                onClick={() => setError(null)}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n              >\r\n                <X className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Filtros */}\r\n        <div className=\"flex flex-col lg:flex-row gap-4 mb-8\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar templates...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-2 overflow-x-auto pb-2\">\r\n            {categories.map(category => (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => setSelectedCategory(category.id)}\r\n                className={`whitespace-nowrap px-4 py-2 text-sm font-medium rounded-lg transition-colors ${\r\n                  selectedCategory === category.id\r\n                    ? 'bg-blue-100 text-blue-700'\r\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\r\n                } border border-gray-200`}\r\n              >\r\n                {category.name} ({category.count})\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Grid de templates */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredTemplates.map(template => (\r\n            <TemplateCard\r\n              key={template.id}\r\n              template={template}\r\n              onView={setSelectedTemplate}\r\n              onEdit={(template) => {\r\n                setTemplateToEdit(template);\r\n                setShowCreateTemplate(true);\r\n              }}\r\n              onClone={handleCloneTemplate}\r\n              onUse={handleUseTemplate}\r\n              onDelete={handleDeleteTemplate}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {filteredTemplates.length === 0 && !loading && (\r\n          <div className=\"text-center py-12\">\r\n            <FileText className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n              Nenhum template encontrado\r\n            </h3>\r\n            <p className=\"text-gray-500 mb-4\">\r\n              {searchTerm || selectedCategory !== 'all'\r\n                ? 'Tente ajustar os filtros de busca.'\r\n                : 'Crie seu primeiro template para acelerar o desenvolvimento.'}\r\n            </p>\r\n            <button\r\n              onClick={() => setShowCreateTemplate(true)}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto\"\r\n            >\r\n              <Plus className=\"w-4 h-4\" />\r\n              Criar Template\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {selectedTemplate && (\r\n        <TemplateModal\r\n          template={selectedTemplate}\r\n          onClose={() => setSelectedTemplate(null)}\r\n          onUse={handleUseTemplate}\r\n        />\r\n      )}\r\n\r\n      {showCreateTemplate && (\r\n        <CreateTemplateModal\r\n          editingTemplate={templateToEdit}\r\n          onClose={() => {\r\n            setShowCreateTemplate(false);\r\n            setTemplateToEdit(null);\r\n          }}\r\n          onSave={(templateData) => {\r\n            console.log('Template salvo:', templateData);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentTemplatesReal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4751, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/WorkflowBuilder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport {\r\n  Bot,\r\n  Plus,\r\n  Trash2,\r\n  Settings,\r\n  ArrowRight,\r\n  GitBranch,\r\n  Play,\r\n  Save,\r\n  Zap,\r\n  ChevronDown,\r\n  Move,\r\n  Copy,\r\n  Eye,\r\n  FileText,\r\n  Users,\r\n  Activity,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Loader,\r\n  X,\r\n  RotateCcw,\r\n  Maximize2,\r\n  Grid3X3,\r\n  MousePointer,\r\n  Database,\r\n  Code,\r\n  MessageSquare,\r\n  Timer,\r\n  Filter,\r\n  Layers,\r\n  Target,\r\n  Workflow,\r\n  Import,\r\n  ExternalLink,\r\n  Share2,\r\n  History,\r\n  BookOpen,\r\n  Lightbulb,\r\n  Cpu,\r\n  Network,\r\n  Sparkles\r\n} from 'lucide-react';\r\n\r\n// Import do cliente Agno\r\nimport AgnoClient from './agnoClient';\r\n\r\nconst WorkflowBuilderSuper = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [connections, setConnections] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [draggedNode, setDraggedNode] = useState(null);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectionStart, setConnectionStart] = useState(null);\r\n  const [agents, setAgents] = useState([]);\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [executing, setExecuting] = useState(false);\r\n  const [executionResults, setExecutionResults] = useState([]);\r\n\r\n  const [workflowConfig, setWorkflowConfig] = useState({\r\n    name: 'Novo Workflow',\r\n    description: '',\r\n    flowType: 'sequential',\r\n    version: '1.0.0',\r\n    tags: [],\r\n    isPublic: false,\r\n    timeout: 300,\r\n    retries: 3,\r\n    parallelism: 2\r\n  });\r\n\r\n  const [showNodeConfig, setShowNodeConfig] = useState(false);\r\n  const [showExecutionPanel, setShowExecutionPanel] = useState(false);\r\n  const [showWorkflowSettings, setShowWorkflowSettings] = useState(false);\r\n  const [showTemplates, setShowTemplates] = useState(false);\r\n  const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [isPanning, setIsPanning] = useState(false);\r\n  const [panStart, setPanStart] = useState({ x: 0, y: 0 });\r\n  const [gridVisible, setGridVisible] = useState(true);\r\n  const [miniMapVisible, setMiniMapVisible] = useState(true);\r\n\r\n  const canvasRef = useRef(null);\r\n  const [agnoClient] = useState(() => new AgnoClient());\r\n\r\n  // Carregar dados iniciais\r\n  useEffect(() => {\r\n    loadInitialData();\r\n  }, []);\r\n\r\n  const loadInitialData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const [agentsData, workflowsData] = await Promise.all([\r\n        agnoClient.listAgents(),\r\n        agnoClient.listWorkflows()\r\n      ]);\r\n\r\n      setAgents(agentsData);\r\n      setWorkflows(workflowsData);\r\n\r\n    } catch (err) {\r\n      console.error('Erro ao carregar dados:', err);\r\n      setError(`Erro ao carregar dados: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const nodeTypes = [\r\n    {\r\n      id: 'start',\r\n      name: 'In√≠cio',\r\n      icon: Play,\r\n      color: 'bg-gradient-to-r from-green-500 to-emerald-500',\r\n      description: 'Ponto de entrada do workflow',\r\n      category: 'flow',\r\n      maxInstances: 1\r\n    },\r\n    {\r\n      id: 'agent',\r\n      name: 'AI Agent',\r\n      icon: Bot,\r\n      color: 'bg-gradient-to-r from-blue-500 to-indigo-500',\r\n      description: 'Agente individual com tools espec√≠ficas',\r\n      category: 'execution',\r\n      configurable: true\r\n    },\r\n    {\r\n      id: 'parallel',\r\n      name: 'Gateway Paralelo',\r\n      icon: Zap,\r\n      color: 'bg-gradient-to-r from-yellow-500 to-orange-500',\r\n      description: 'Executa m√∫ltiplos caminhos simultaneamente',\r\n      category: 'flow',\r\n      configurable: true\r\n    },\r\n    {\r\n      id: 'condition',\r\n      name: 'Decis√£o',\r\n      icon: GitBranch,\r\n      color: 'bg-gradient-to-r from-purple-500 to-pink-500',\r\n      description: 'L√≥gica condicional baseada em resultados',\r\n      category: 'logic',\r\n      configurable: true\r\n    },\r\n    {\r\n      id: 'delay',\r\n      name: 'Pausa',\r\n      icon: Timer,\r\n      color: 'bg-gradient-to-r from-gray-500 to-slate-600',\r\n      description: 'Introduz delay no workflow',\r\n      category: 'utility',\r\n      configurable: true\r\n    },\r\n    {\r\n      id: 'transform',\r\n      name: 'Transformador',\r\n      icon: Code,\r\n      color: 'bg-gradient-to-r from-teal-500 to-cyan-500',\r\n      description: 'Processa e transforma dados',\r\n      category: 'data',\r\n      configurable: true\r\n    },\r\n    {\r\n      id: 'notification',\r\n      name: 'Notifica√ß√£o',\r\n      icon: MessageSquare,\r\n      color: 'bg-gradient-to-r from-rose-500 to-red-500',\r\n      description: 'Envia notifica√ß√µes ou alertas',\r\n      category: 'utility',\r\n      configurable: true\r\n    },\r\n    {\r\n      id: 'end',\r\n      name: 'Fim',\r\n      icon: CheckCircle,\r\n      color: 'bg-gradient-to-r from-gray-600 to-gray-700',\r\n      description: 'Ponto de sa√≠da do workflow',\r\n      category: 'flow',\r\n      maxInstances: 1\r\n    }\r\n  ];\r\n\r\n  const workflowTemplates = [\r\n    {\r\n      id: 'research_analysis',\r\n      name: 'Pesquisa e An√°lise',\r\n      description: 'Workflow para pesquisa de informa√ß√µes e an√°lise detalhada',\r\n      nodes: [\r\n        { type: 'start', name: 'Iniciar Pesquisa', position: { x: 100, y: 200 } },\r\n        { type: 'agent', name: 'Pesquisador', position: { x: 300, y: 200 }, config: { role: 'Pesquisador' } },\r\n        { type: 'agent', name: 'Analista', position: { x: 500, y: 200 }, config: { role: 'Analista' } },\r\n        { type: 'end', name: 'Finalizar', position: { x: 700, y: 200 } }\r\n      ],\r\n      connections: [\r\n        { from: 0, to: 1 },\r\n        { from: 1, to: 2 },\r\n        { from: 2, to: 3 }\r\n      ]\r\n    },\r\n    {\r\n      id: 'content_creation',\r\n      name: 'Cria√ß√£o de Conte√∫do',\r\n      description: 'Pipeline completo para cria√ß√£o e revis√£o de conte√∫do',\r\n      nodes: [\r\n        { type: 'start', name: 'Novo Conte√∫do', position: { x: 100, y: 150 } },\r\n        { type: 'agent', name: 'Criador', position: { x: 300, y: 150 } },\r\n        { type: 'condition', name: 'Revisar?', position: { x: 500, y: 150 } },\r\n        { type: 'agent', name: 'Revisor', position: { x: 500, y: 300 } },\r\n        { type: 'notification', name: 'Notificar', position: { x: 700, y: 150 } },\r\n        { type: 'end', name: 'Conclu√≠do', position: { x: 900, y: 150 } }\r\n      ],\r\n      connections: [\r\n        { from: 0, to: 1 },\r\n        { from: 1, to: 2 },\r\n        { from: 2, to: 3 },\r\n        { from: 3, to: 2 },\r\n        { from: 2, to: 4 },\r\n        { from: 4, to: 5 }\r\n      ]\r\n    },\r\n    {\r\n      id: 'data_processing',\r\n      name: 'Processamento de Dados',\r\n      description: 'Workflow para ingest√£o, transforma√ß√£o e an√°lise de dados',\r\n      nodes: [\r\n        { type: 'start', name: 'Dados Recebidos', position: { x: 100, y: 200 } },\r\n        { type: 'transform', name: 'Limpar Dados', position: { x: 300, y: 200 } },\r\n        { type: 'parallel', name: 'Processar', position: { x: 500, y: 200 } },\r\n        { type: 'agent', name: 'Analisador A', position: { x: 700, y: 100 } },\r\n        { type: 'agent', name: 'Analisador B', position: { x: 700, y: 300 } },\r\n        { type: 'transform', name: 'Consolidar', position: { x: 900, y: 200 } },\r\n        { type: 'end', name: 'Resultado', position: { x: 1100, y: 200 } }\r\n      ],\r\n      connections: [\r\n        { from: 0, to: 1 },\r\n        { from: 1, to: 2 },\r\n        { from: 2, to: 3 },\r\n        { from: 2, to: 4 },\r\n        { from: 3, to: 5 },\r\n        { from: 4, to: 5 },\r\n        { from: 5, to: 6 }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const loadTemplate = (template) => {\r\n    const templateNodes = template.nodes.map((nodeTemplate, index) => {\r\n      const nodeType = nodeTypes.find(t => t.id === nodeTemplate.type);\r\n      return {\r\n        id: `node_${Date.now()}_${index}`,\r\n        type: nodeTemplate.type,\r\n        name: nodeTemplate.name,\r\n        position: nodeTemplate.position,\r\n        config: {\r\n          agentId: nodeTemplate.config?.agentId || null,\r\n          role: nodeTemplate.config?.role || '',\r\n          condition: nodeTemplate.config?.condition || '',\r\n          delay: nodeTemplate.config?.delay || 1000,\r\n          transformation: nodeTemplate.config?.transformation || '',\r\n          message: nodeTemplate.config?.message || '',\r\n          instructions: nodeTemplate.config?.instructions || ['']\r\n        },\r\n        ...nodeType\r\n      };\r\n    });\r\n\r\n    const templateConnections = template.connections.map((conn, index) => ({\r\n      id: `conn_${Date.now()}_${index}`,\r\n      from: templateNodes[conn.from].id,\r\n      to: templateNodes[conn.to].id,\r\n      type: 'default'\r\n    }));\r\n\r\n    setNodes(templateNodes);\r\n    setConnections(templateConnections);\r\n    setWorkflowConfig(prev => ({\r\n      ...prev,\r\n      name: template.name,\r\n      description: template.description\r\n    }));\r\n    setShowTemplates(false);\r\n  };\r\n\r\n  const addNode = (type, position = null) => {\r\n    // Verificar limite de inst√¢ncias\r\n    if (type.maxInstances) {\r\n      const existingCount = nodes.filter(n => n.type === type.id).length;\r\n      if (existingCount >= type.maxInstances) {\r\n        setError(`M√°ximo ${type.maxInstances} inst√¢ncia(s) de ${type.name} permitida(s)`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const canvasRect = canvasRef.current?.getBoundingClientRect();\r\n    const defaultPosition = position || {\r\n      x: (canvasRect ? canvasRect.width / 2 : 400) / zoom - canvasOffset.x / zoom - 80,\r\n      y: (canvasRect ? canvasRect.height / 2 : 300) / zoom - canvasOffset.y / zoom - 40\r\n    };\r\n\r\n    const newNode = {\r\n      id: `node_${Date.now()}`,\r\n      type: type.id,\r\n      name: `${type.name} ${nodes.filter(n => n.type === type.id).length + 1}`,\r\n      position: defaultPosition,\r\n      config: {\r\n        agentId: type.id === 'agent' ? (agents[0]?.id || null) : null,\r\n        condition: type.id === 'condition' ? 'if (result.success) return \"next\"; else return \"retry\";' : null,\r\n        delay: type.id === 'delay' ? 1000 : null,\r\n        transformation: type.id === 'transform' ? 'return data.map(item => ({ ...item, processed: true }));' : null,\r\n        message: type.id === 'notification' ? 'Processo conclu√≠do' : null,\r\n        role: type.id === 'agent' ? '' : null,\r\n        instructions: [''],\r\n        timeout: 60,\r\n        retries: 1\r\n      },\r\n      status: 'idle', // idle, running, completed, error\r\n      lastRun: null,\r\n      executionTime: null,\r\n      ...type\r\n    };\r\n\r\n    setNodes(prev => [...prev, newNode]);\r\n    if (type.configurable) {\r\n      setSelectedNode(newNode);\r\n      setShowNodeConfig(true);\r\n    }\r\n  };\r\n\r\n  const deleteNode = (nodeId) => {\r\n    setNodes(prev => prev.filter(n => n.id !== nodeId));\r\n    setConnections(prev => prev.filter(c => c.from !== nodeId && c.to !== nodeId));\r\n    if (selectedNode?.id === nodeId) {\r\n      setSelectedNode(null);\r\n      setShowNodeConfig(false);\r\n    }\r\n  };\r\n\r\n  const duplicateNode = (node) => {\r\n    const newNode = {\r\n      ...node,\r\n      id: `node_${Date.now()}`,\r\n      name: `${node.name} (C√≥pia)`,\r\n      position: {\r\n        x: node.position.x + 50,\r\n        y: node.position.y + 50\r\n      },\r\n      status: 'idle',\r\n      lastRun: null,\r\n      executionTime: null\r\n    };\r\n    setNodes(prev => [...prev, newNode]);\r\n  };\r\n\r\n  const validateWorkflow = () => {\r\n    const errors = [];\r\n\r\n    // Verificar se h√° n√≥ de in√≠cio\r\n    const startNodes = nodes.filter(n => n.type === 'start');\r\n    if (startNodes.length === 0) {\r\n      errors.push('Workflow deve ter um n√≥ de in√≠cio');\r\n    }\r\n\r\n    // Verificar se h√° n√≥ de fim\r\n    const endNodes = nodes.filter(n => n.type === 'end');\r\n    if (endNodes.length === 0) {\r\n      errors.push('Workflow deve ter um n√≥ de fim');\r\n    }\r\n\r\n    // Verificar n√≥s √≥rf√£os (sem conex√µes)\r\n    const connectedNodes = new Set();\r\n    connections.forEach(conn => {\r\n      connectedNodes.add(conn.from);\r\n      connectedNodes.add(conn.to);\r\n    });\r\n\r\n    const orphanNodes = nodes.filter(n =>\r\n      n.type !== 'start' && n.type !== 'end' && !connectedNodes.has(n.id)\r\n    );\r\n\r\n    if (orphanNodes.length > 0) {\r\n      errors.push(`${orphanNodes.length} n√≥(s) n√£o conectado(s)`);\r\n    }\r\n\r\n    // Verificar configura√ß√µes obrigat√≥rias\r\n    const incompleteNodes = nodes.filter(n => {\r\n      if (n.type === 'agent' && !n.config.agentId) return true;\r\n      if (n.type === 'condition' && !n.config.condition) return true;\r\n      if (n.type === 'transform' && !n.config.transformation) return true;\r\n      return false;\r\n    });\r\n\r\n    if (incompleteNodes.length > 0) {\r\n      errors.push(`${incompleteNodes.length} n√≥(s) mal configurado(s)`);\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const executeWorkflow = async () => {\r\n    const validationErrors = validateWorkflow();\r\n    if (validationErrors.length > 0) {\r\n      setError(`Erro de valida√ß√£o: ${validationErrors.join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setExecuting(true);\r\n      setExecutionResults([]);\r\n      setShowExecutionPanel(true);\r\n      setError(null);\r\n\r\n      // Simular execu√ß√£o do workflow\r\n      const startNode = nodes.find(n => n.type === 'start');\r\n      if (!startNode) return;\r\n\r\n      // Resetar status dos n√≥s\r\n      setNodes(prev => prev.map(n => ({ ...n, status: 'idle', executionTime: null })));\r\n\r\n      const executionLog = [];\r\n      const executed = new Set();\r\n\r\n      const executeNode = async (nodeId, input = null) => {\r\n        const node = nodes.find(n => n.id === nodeId);\r\n        if (!node || executed.has(nodeId)) return null;\r\n\r\n        executed.add(nodeId);\r\n\r\n        // Atualizar status para running\r\n        setNodes(prev => prev.map(n =>\r\n          n.id === nodeId ? { ...n, status: 'running' } : n\r\n        ));\r\n\r\n        const startTime = Date.now();\r\n\r\n        executionLog.push({\r\n          id: Date.now(),\r\n          nodeId,\r\n          nodeName: node.name,\r\n          nodeType: node.type,\r\n          status: 'running',\r\n          timestamp: new Date().toLocaleTimeString(),\r\n          input,\r\n          output: null\r\n        });\r\n\r\n        setExecutionResults([...executionLog]);\r\n\r\n        // Simular processamento baseado no tipo de n√≥\r\n        let delay = 1000;\r\n        let output = input;\r\n\r\n        switch (node.type) {\r\n          case 'agent':\r\n            delay = 2000 + Math.random() * 3000; // 2-5 segundos\r\n            output = `Resposta do agente: ${node.name}`;\r\n            break;\r\n          case 'condition':\r\n            delay = 500;\r\n            output = Math.random() > 0.5 ? 'success' : 'retry';\r\n            break;\r\n          case 'transform':\r\n            delay = 1000;\r\n            output = `Dados transformados por ${node.name}`;\r\n            break;\r\n          case 'delay':\r\n            delay = node.config.delay || 1000;\r\n            output = input;\r\n            break;\r\n          default:\r\n            delay = 500;\r\n        }\r\n\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n\r\n        const executionTime = Date.now() - startTime;\r\n        const success = Math.random() > 0.1; // 90% success rate\r\n\r\n        // Atualizar status final\r\n        setNodes(prev => prev.map(n =>\r\n          n.id === nodeId ? {\r\n            ...n,\r\n            status: success ? 'completed' : 'error',\r\n            executionTime,\r\n            lastRun: new Date().toISOString()\r\n          } : n\r\n        ));\r\n\r\n        // Atualizar log\r\n        const logIndex = executionLog.findIndex(log => log.nodeId === nodeId && log.status === 'running');\r\n        if (logIndex >= 0) {\r\n          executionLog[logIndex] = {\r\n            ...executionLog[logIndex],\r\n            status: success ? 'completed' : 'error',\r\n            output: success ? output : 'Erro na execu√ß√£o',\r\n            executionTime\r\n          };\r\n          setExecutionResults([...executionLog]);\r\n        }\r\n\r\n        if (!success) {\r\n          throw new Error(`Erro na execu√ß√£o do n√≥ ${node.name}`);\r\n        }\r\n\r\n        // Executar n√≥s conectados\r\n        const nextConnections = connections.filter(c => c.from === nodeId);\r\n\r\n        if (node.type === 'parallel') {\r\n          // Execu√ß√£o paralela\r\n          const promises = nextConnections.map(conn => executeNode(conn.to, output));\r\n          await Promise.all(promises);\r\n        } else {\r\n          // Execu√ß√£o sequencial\r\n          for (const conn of nextConnections) {\r\n            await executeNode(conn.to, output);\r\n          }\r\n        }\r\n\r\n        return output;\r\n      };\r\n\r\n      await executeNode(startNode.id, 'Workflow iniciado');\r\n\r\n      setExecutionResults(prev => [...prev, {\r\n        id: Date.now(),\r\n        nodeId: null,\r\n        nodeName: 'Sistema',\r\n        nodeType: 'system',\r\n        status: 'completed',\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        input: null,\r\n        output: 'Workflow conclu√≠do com sucesso!'\r\n      }]);\r\n\r\n    } catch (error) {\r\n      console.error('Erro na execu√ß√£o:', error);\r\n      setError(`Erro na execu√ß√£o: ${error.message}`);\r\n\r\n      setExecutionResults(prev => [...prev, {\r\n        id: Date.now(),\r\n        nodeId: null,\r\n        nodeName: 'Sistema',\r\n        nodeType: 'system',\r\n        status: 'error',\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        input: null,\r\n        output: `Execu√ß√£o falhou: ${error.message}`\r\n      }]);\r\n    } finally {\r\n      setExecuting(false);\r\n    }\r\n  };\r\n\r\n  const saveWorkflow = async () => {\r\n    const validationErrors = validateWorkflow();\r\n    if (validationErrors.length > 0) {\r\n      setError(`Erro de valida√ß√£o: ${validationErrors.join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    if (!workflowConfig.name.trim()) {\r\n      setError('Nome do workflow √© obrigat√≥rio');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSaving(true);\r\n      setError(null);\r\n\r\n      const workflowData = {\r\n        name: workflowConfig.name,\r\n        description: workflowConfig.description,\r\n        flow_type: workflowConfig.flowType,\r\n        supervisor_enabled: false,\r\n        version: workflowConfig.version,\r\n        tags: workflowConfig.tags,\r\n        isPublic: workflowConfig.isPublic,\r\n        timeout: workflowConfig.timeout,\r\n        retries: workflowConfig.retries,\r\n        parallelism: workflowConfig.parallelism,\r\n        workflow_definition: {\r\n          nodes: nodes.map(node => ({\r\n            id: node.id,\r\n            type: node.type,\r\n            name: node.name,\r\n            position: node.position,\r\n            config: node.config\r\n          })),\r\n          connections: connections\r\n        },\r\n        agents: nodes\r\n          .filter(node => node.type === 'agent' && node.config.agentId)\r\n          .map(node => {\r\n            const agent = agents.find(a => a.id.toString() === node.config.agentId);\r\n            return {\r\n              name: node.name,\r\n              role: agent?.agent_role || 'Assistant',\r\n              model_provider: agent?.empresa || 'openai',\r\n              model_id: agent?.modelo || 'gpt-4o',\r\n              tools: [],\r\n              instructions: node.config.instructions || ['Assistente √∫til']\r\n            };\r\n          })\r\n      };\r\n\r\n      console.log('Salvando workflow avan√ßado:', workflowData);\r\n      const result = await agnoClient.makeRequest('/api/workflows/create', {\r\n        method: 'POST',\r\n        body: JSON.stringify(workflowData)\r\n      });\r\n\r\n      console.log('Workflow salvo:', result);\r\n      alert(`Workflow \"${workflowConfig.name}\" salvo com sucesso!`);\r\n\r\n      // Recarregar workflows\r\n      await loadInitialData();\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao salvar workflow:', error);\r\n      setError(`Erro ao salvar workflow: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    if (confirm('Deseja limpar todo o canvas? Esta a√ß√£o n√£o pode ser desfeita.')) {\r\n      setNodes([]);\r\n      setConnections([]);\r\n      setSelectedNode(null);\r\n      setShowNodeConfig(false);\r\n      setExecutionResults([]);\r\n    }\r\n  };\r\n\r\n  const resetView = () => {\r\n    setCanvasOffset({ x: 0, y: 0 });\r\n    setZoom(1);\r\n  };\r\n\r\n  const exportWorkflow = () => {\r\n    const workflowExport = {\r\n      ...workflowConfig,\r\n      nodes,\r\n      connections,\r\n      version: workflowConfig.version,\r\n      exportedAt: new Date().toISOString()\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(workflowExport, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${workflowConfig.name.replace(/\\s+/g, '_')}_v${workflowConfig.version}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const importWorkflow = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const importedWorkflow = JSON.parse(e.target.result);\r\n\r\n        setWorkflowConfig({\r\n          name: importedWorkflow.name || 'Workflow Importado',\r\n          description: importedWorkflow.description || '',\r\n          flowType: importedWorkflow.flowType || 'sequential',\r\n          version: importedWorkflow.version || '1.0.0',\r\n          tags: importedWorkflow.tags || [],\r\n          isPublic: importedWorkflow.isPublic || false,\r\n          timeout: importedWorkflow.timeout || 300,\r\n          retries: importedWorkflow.retries || 3,\r\n          parallelism: importedWorkflow.parallelism || 2\r\n        });\r\n\r\n        setNodes(importedWorkflow.nodes || []);\r\n        setConnections(importedWorkflow.connections || []);\r\n\r\n        alert('Workflow importado com sucesso!');\r\n      } catch (error) {\r\n        console.error('Erro ao importar:', error);\r\n        setError('Erro ao importar workflow: arquivo inv√°lido');\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Componentes...\r\n  const NodeComponent = ({ node, isSelected }) => {\r\n    const IconComponent = node.icon;\r\n    const [isDragging, setIsDragging] = useState(false);\r\n\r\n    const statusColors = {\r\n      idle: 'border-gray-200 bg-white',\r\n      running: 'border-blue-500 bg-blue-50 animate-pulse',\r\n      completed: 'border-green-500 bg-green-50',\r\n      error: 'border-red-500 bg-red-50'\r\n    };\r\n\r\n    const handleMouseDown = (e) => {\r\n      e.stopPropagation();\r\n      setIsDragging(true);\r\n      setSelectedNode(node);\r\n\r\n      // Drag logic...\r\n      const handleMouseMove = (e) => {\r\n        const rect = canvasRef.current.getBoundingClientRect();\r\n        const newX = (e.clientX - rect.left - canvasOffset.x) / zoom - 80;\r\n        const newY = (e.clientY - rect.top - canvasOffset.y) / zoom - 40;\r\n\r\n        setNodes(prev => prev.map(n =>\r\n          n.id === node.id\r\n            ? { ...n, position: { x: Math.max(0, newX), y: Math.max(0, newY) } }\r\n            : n\r\n        ));\r\n      };\r\n\r\n      const handleMouseUp = () => {\r\n        setIsDragging(false);\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n      };\r\n\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`absolute cursor-move select-none transition-all duration-200 ${\r\n          isSelected ? 'z-20 scale-105' : 'z-10'\r\n        } ${isDragging ? 'opacity-75' : 'opacity-100'}`}\r\n        style={{\r\n          left: node.position.x * zoom + canvasOffset.x,\r\n          top: node.position.y * zoom + canvasOffset.y,\r\n          transform: `scale(${zoom})`\r\n        }}\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        <div className={`\r\n          w-48 p-4 rounded-xl shadow-lg border-2 transition-all duration-200\r\n          ${statusColors[node.status] || statusColors.idle}\r\n          ${isSelected ? 'ring-2 ring-blue-300' : ''}\r\n        `}>\r\n          {/* Header do N√≥ */}\r\n          <div className=\"flex items-center gap-3 mb-3\">\r\n            <div className={`p-2 rounded-lg ${node.color} text-white shadow-sm`}>\r\n              <IconComponent className=\"w-5 h-5\" />\r\n            </div>\r\n            <div className=\"flex-1 min-w-0\">\r\n              <div className=\"font-semibold text-gray-900 text-sm truncate\">{node.name}</div>\r\n              <div className=\"text-xs text-gray-500 flex items-center gap-2\">\r\n                <span className=\"capitalize\">{node.type}</span>\r\n                {node.status === 'running' && <Loader className=\"w-3 h-3 animate-spin\" />}\r\n                {node.status === 'completed' && <CheckCircle className=\"w-3 h-3 text-green-500\" />}\r\n                {node.status === 'error' && <AlertCircle className=\"w-3 h-3 text-red-500\" />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Informa√ß√µes do N√≥ */}\r\n          <div className=\"text-xs text-gray-600 mb-3 space-y-1\">\r\n            {node.type === 'agent' && (\r\n              <div className=\"flex items-center gap-1\">\r\n                <Bot className=\"w-3 h-3\" />\r\n                <span>{agents.find(a => a.id.toString() === node.config.agentId)?.nome || 'N√£o selecionado'}</span>\r\n              </div>\r\n            )}\r\n            {node.type === 'condition' && (\r\n              <div className=\"flex items-center gap-1\">\r\n                <GitBranch className=\"w-3 h-3\" />\r\n                <span>Condi√ß√£o definida</span>\r\n              </div>\r\n            )}\r\n            {node.type === 'delay' && (\r\n              <div className=\"flex items-center gap-1\">\r\n                <Timer className=\"w-3 h-3\" />\r\n                <span>{node.config.delay}ms</span>\r\n              </div>\r\n            )}\r\n            {node.executionTime && (\r\n              <div className=\"flex items-center gap-1 text-blue-600\">\r\n                <Activity className=\"w-3 h-3\" />\r\n                <span>{node.executionTime}ms</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Pontos de Conex√£o e Controles */}\r\n          <div className=\"flex justify-between items-center\">\r\n            {/* Input */}\r\n            {node.type !== 'start' && (\r\n              <div\r\n                className=\"w-3 h-3 bg-red-400 rounded-full cursor-pointer hover:bg-red-500 transition-colors border-2 border-white shadow-sm\"\r\n                title=\"Conectar entrada\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  if (isConnecting) {\r\n                    // Complete connection\r\n                    if (connectionStart && connectionStart.nodeId !== node.id) {\r\n                      const newConnection = {\r\n                        id: `conn_${Date.now()}`,\r\n                        from: connectionStart.nodeId,\r\n                        to: node.id,\r\n                        type: 'default'\r\n                      };\r\n\r\n                      const exists = connections.some(c => c.from === newConnection.from && c.to === newConnection.to);\r\n                      if (!exists) {\r\n                        setConnections(prev => [...prev, newConnection]);\r\n                      }\r\n                    }\r\n                    setIsConnecting(false);\r\n                    setConnectionStart(null);\r\n                  }\r\n                }}\r\n              />\r\n            )}\r\n\r\n            <div className=\"flex gap-1\">\r\n              {/* Configura√ß√µes */}\r\n              {node.configurable && (\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setSelectedNode(node);\r\n                    setShowNodeConfig(true);\r\n                  }}\r\n                  className=\"p-1 text-gray-400 hover:text-blue-600 rounded transition-colors\"\r\n                  title=\"Configurar\"\r\n                >\r\n                  <Settings className=\"w-3 h-3\" />\r\n                </button>\r\n              )}\r\n\r\n              {/* Duplicar */}\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  duplicateNode(node);\r\n                }}\r\n                className=\"p-1 text-gray-400 hover:text-green-600 rounded transition-colors\"\r\n                title=\"Duplicar\"\r\n              >\r\n                <Copy className=\"w-3 h-3\" />\r\n              </button>\r\n\r\n              {/* Excluir */}\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  deleteNode(node.id);\r\n                }}\r\n                className=\"p-1 text-gray-400 hover:text-red-600 rounded transition-colors\"\r\n                title=\"Excluir\"\r\n              >\r\n                <Trash2 className=\"w-3 h-3\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Output */}\r\n            {node.type !== 'end' && (\r\n              <div\r\n                className=\"w-3 h-3 bg-green-400 rounded-full cursor-pointer hover:bg-green-500 transition-colors border-2 border-white shadow-sm\"\r\n                title=\"Conectar sa√≠da\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setIsConnecting(true);\r\n                  setConnectionStart({ nodeId: node.id, type: 'output' });\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ExecutionPanel = () => (\r\n    <div className=\"w-80 bg-white border-l border-gray-200 shadow-lg flex flex-col\">\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <h3 className=\"font-semibold text-gray-900 flex items-center gap-2\">\r\n            <Activity className=\"w-4 h-4\" />\r\n            Execu√ß√£o\r\n          </h3>\r\n          <button\r\n            onClick={() => setShowExecutionPanel(false)}\r\n            className=\"p-1 text-gray-400 hover:text-gray-600 rounded\"\r\n          >\r\n            <X className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={executeWorkflow}\r\n            disabled={executing || nodes.length === 0}\r\n            className=\"flex-1 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center justify-center gap-2 text-sm\"\r\n          >\r\n            {executing ? (\r\n              <>\r\n                <Loader className=\"w-4 h-4 animate-spin\" />\r\n                Executando...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Play className=\"w-4 h-4\" />\r\n                Executar\r\n              </>\r\n            )}\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setExecutionResults([])}\r\n            className=\"px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 text-sm\"\r\n            title=\"Limpar log\"\r\n          >\r\n            <Trash2 className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-y-auto p-4\">\r\n        <div className=\"space-y-3\">\r\n          {executionResults.length === 0 ? (\r\n            <div className=\"text-center text-gray-500 py-8\">\r\n              <Activity className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n              <p className=\"text-sm\">Execute o workflow para ver os resultados</p>\r\n            </div>\r\n          ) : (\r\n            executionResults.map(result => (\r\n              <div key={result.id} className={`\r\n                p-3 rounded-lg border-l-4 text-sm\r\n                ${result.status === 'running' ? 'border-blue-500 bg-blue-50' :\r\n                  result.status === 'completed' ? 'border-green-500 bg-green-50' :\r\n                  result.status === 'error' ? 'border-red-500 bg-red-50' :\r\n                  'border-gray-500 bg-gray-50'}\r\n              `}>\r\n                <div className=\"flex items-center justify-between mb-1\">\r\n                  <span className=\"font-medium\">{result.nodeName}</span>\r\n                  <span className=\"text-xs text-gray-500\">{result.timestamp}</span>\r\n                </div>\r\n\r\n                {result.input && (\r\n                  <div className=\"text-xs text-gray-600 mb-1\">\r\n                    <strong>Input:</strong> {result.input}\r\n                  </div>\r\n                )}\r\n\r\n                {result.output && (\r\n                  <div className=\"text-xs text-gray-600 mb-1\">\r\n                    <strong>Output:</strong> {result.output}\r\n                  </div>\r\n                )}\r\n\r\n                {result.executionTime && (\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    Tempo: {result.executionTime}ms\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const TemplatesPanel = () => (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg p-6 max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\r\n            <Sparkles className=\"w-6 h-6\" />\r\n            Templates de Workflow\r\n          </h2>\r\n          <button\r\n            onClick={() => setShowTemplates(false)}\r\n            className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {workflowTemplates.map(template => (\r\n            <div key={template.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">{template.name}</h3>\r\n              <p className=\"text-sm text-gray-600 mb-4\">{template.description}</p>\r\n\r\n              <div className=\"text-xs text-gray-500 mb-4\">\r\n                {template.nodes.length} n√≥s ‚Ä¢ {template.connections.length} conex√µes\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => loadTemplate(template)}\r\n                className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\r\n              >\r\n                Usar Template\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <Loader className=\"w-8 h-8 animate-spin text-blue-600 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Carregando Workflow Builder</h3>\r\n          <p className=\"text-gray-500\">Conectando com o backend...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen bg-gray-50 flex\">\r\n      {/* Toolbar Lateral Aprimorada */}\r\n      <div className=\"w-80 bg-white border-r border-gray-200 shadow-lg flex flex-col\">\r\n        {/* Header com informa√ß√µes do workflow */}\r\n        <div className=\"p-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n              <Workflow className=\"w-5 h-5\" />\r\n              Workflow Builder\r\n            </h2>\r\n            <div className=\"flex gap-1\">\r\n              <button\r\n                onClick={() => setShowTemplates(true)}\r\n                className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg\"\r\n                title=\"Templates\"\r\n              >\r\n                <BookOpen className=\"w-4 h-4\" />\r\n              </button>\r\n              <button\r\n                onClick={() => setShowWorkflowSettings(true)}\r\n                className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg\"\r\n                title=\"Configura√ß√µes\"\r\n              >\r\n                <Settings className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={workflowConfig.name}\r\n            onChange={(e) => setWorkflowConfig(prev => ({ ...prev, name: e.target.value }))}\r\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-2\"\r\n            placeholder=\"Nome do workflow\"\r\n          />\r\n\r\n          <textarea\r\n            value={workflowConfig.description}\r\n            onChange={(e) => setWorkflowConfig(prev => ({ ...prev, description: e.target.value }))}\r\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\r\n            rows=\"2\"\r\n            placeholder=\"Descri√ß√£o do workflow\"\r\n          />\r\n\r\n          <div className=\"flex items-center gap-2 mt-2 text-xs text-gray-500\">\r\n            <span>v{workflowConfig.version}</span>\r\n            <span>‚Ä¢</span>\r\n            <span>{nodes.length} n√≥s</span>\r\n            <span>‚Ä¢</span>\r\n            <span>{connections.length} conex√µes</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"mx-4 mt-4 p-3 bg-red-50 border border-red-200 rounded flex items-center gap-2 text-red-700\">\r\n            <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\r\n            <span className=\"text-sm flex-1\">{error}</span>\r\n            <button onClick={() => setError(null)} className=\"text-red-500 hover:text-red-700\">\r\n              <X className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Componentes por categoria */}\r\n        <div className=\"flex-1 overflow-y-auto p-4\">\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <h3 className=\"text-sm font-medium text-gray-700\">Componentes</h3>\r\n            <span className=\"text-xs text-gray-500\">{nodeTypes.length} tipos</span>\r\n          </div>\r\n\r\n          {['flow', 'execution', 'logic', 'data', 'utility'].map(category => {\r\n            const categoryNodes = nodeTypes.filter(type => type.category === category);\r\n            if (categoryNodes.length === 0) return null;\r\n\r\n            const categoryNames = {\r\n              flow: { name: 'Fluxo', icon: GitBranch },\r\n              execution: { name: 'Execu√ß√£o', icon: Cpu },\r\n              logic: { name: 'L√≥gica', icon: GitBranch },\r\n              data: { name: 'Dados', icon: Database },\r\n              utility: { name: 'Utilidades', icon: Zap }\r\n            };\r\n\r\n            const CategoryIcon = categoryNames[category].icon;\r\n\r\n            return (\r\n              <div key={category} className=\"mb-4\">\r\n                <h4 className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-2 flex items-center gap-1\">\r\n                  <CategoryIcon className=\"w-3 h-3\" />\r\n                  {categoryNames[category].name}\r\n                </h4>\r\n                <div className=\"space-y-2\">\r\n                  {categoryNodes.map(type => {\r\n                    const IconComponent = type.icon;\r\n                    const currentCount = nodes.filter(n => n.type === type.id).length;\r\n                    const isMaxed = type.maxInstances && currentCount >= type.maxInstances;\r\n\r\n                    return (\r\n                      <button\r\n                        key={type.id}\r\n                        onClick={() => !isMaxed && addNode(type)}\r\n                        disabled={isMaxed}\r\n                        className={`w-full p-3 border rounded-lg flex items-center gap-3 text-left transition-all ${\r\n                          isMaxed \r\n                            ? 'border-gray-200 bg-gray-50 opacity-50 cursor-not-allowed' \r\n                            : 'border-gray-200 hover:bg-gray-50 hover:border-gray-300 hover:shadow-sm'\r\n                        }`}\r\n                      >\r\n                        <div className={`p-2 rounded ${type.color} text-white shadow-sm flex-shrink-0`}>\r\n                          <IconComponent className=\"w-4 h-4\" />\r\n                        </div>\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <div className=\"font-medium text-sm text-gray-900 flex items-center gap-2\">\r\n                            {type.name}\r\n                            {type.maxInstances && (\r\n                              <span className=\"text-xs text-gray-500\">\r\n                                ({currentCount}/{type.maxInstances})\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500 line-clamp-2\">{type.description}</div>\r\n                        </div>\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* A√ß√µes principais */}\r\n        <div className=\"p-4 border-t border-gray-200\">\r\n          <div className=\"space-y-2\">\r\n            {/* Primeira linha - A√ß√µes principais */}\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={saveWorkflow}\r\n                disabled={saving || nodes.length === 0}\r\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center justify-center gap-2 transition-colors text-sm font-medium\"\r\n              >\r\n                {saving ? (\r\n                  <>\r\n                    <Loader className=\"w-4 h-4 animate-spin\" />\r\n                    Salvando...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Save className=\"w-4 h-4\" />\r\n                    Salvar\r\n                  </>\r\n                )}\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => setShowExecutionPanel(true)}\r\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center justify-center gap-2 transition-colors text-sm font-medium\"\r\n              >\r\n                <Play className=\"w-4 h-4\" />\r\n                Executar\r\n              </button>\r\n            </div>\r\n\r\n            {/* Segunda linha - A√ß√µes secund√°rias */}\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={exportWorkflow}\r\n                className=\"flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 flex items-center justify-center gap-2 transition-colors text-sm\"\r\n              >\r\n                <Download className=\"w-4 h-4\" />\r\n                Exportar\r\n              </button>\r\n\r\n              <label className=\"flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 flex items-center justify-center gap-2 transition-colors text-sm cursor-pointer\">\r\n                <Upload className=\"w-4 h-4\" />\r\n                Importar\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".json\"\r\n                  onChange={importWorkflow}\r\n                  className=\"hidden\"\r\n                />\r\n              </label>\r\n\r\n              <button\r\n                onClick={clearCanvas}\r\n                className=\"px-3 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 flex items-center justify-center gap-2 transition-colors text-sm\"\r\n                title=\"Limpar Canvas\"\r\n              >\r\n                <Trash2 className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Canvas Principal */}\r\n      <div className=\"flex-1 relative overflow-hidden bg-gray-50\">\r\n        {/* Controles do Canvas */}\r\n        <div className=\"absolute top-4 right-4 z-30 flex gap-2\">\r\n          {/* Controles de Zoom */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-2 flex items-center gap-2\">\r\n            <button\r\n              onClick={() => setZoom(Math.max(0.25, zoom - 0.25))}\r\n              className=\"p-1 text-gray-600 hover:bg-gray-100 rounded\"\r\n              title=\"Diminuir zoom\"\r\n            >\r\n              -\r\n            </button>\r\n            <span className=\"text-sm font-medium text-gray-700 min-w-[3rem] text-center\">\r\n              {Math.round(zoom * 100)}%\r\n            </span>\r\n            <button\r\n              onClick={() => setZoom(Math.min(2, zoom + 0.25))}\r\n              className=\"p-1 text-gray-600 hover:bg-gray-100 rounded\"\r\n              title=\"Aumentar zoom\"\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n\r\n          {/* Outras op√ß√µes */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-2 flex items-center gap-1\">\r\n            <button\r\n              onClick={resetView}\r\n              className=\"p-1 text-gray-600 hover:bg-gray-100 rounded\"\r\n              title=\"Resetar visualiza√ß√£o\"\r\n            >\r\n              <RotateCcw className=\"w-4 h-4\" />\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setGridVisible(!gridVisible)}\r\n              className={`p-1 rounded ${gridVisible ? 'text-blue-600 bg-blue-100' : 'text-gray-600 hover:bg-gray-100'}`}\r\n              title=\"Alternar grid\"\r\n            >\r\n              <Grid3X3 className=\"w-4 h-4\" />\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setMiniMapVisible(!miniMapVisible)}\r\n              className={`p-1 rounded ${miniMapVisible ? 'text-blue-600 bg-blue-100' : 'text-gray-600 hover:bg-gray-100'}`}\r\n              title=\"Mini mapa\"\r\n            >\r\n              <Maximize2 className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Canvas */}\r\n        <div\r\n          ref={canvasRef}\r\n          className=\"w-full h-full relative cursor-default\"\r\n          onMouseDown={(e) => {\r\n            if (e.target === canvasRef.current) {\r\n              if (isConnecting) {\r\n                setIsConnecting(false);\r\n                setConnectionStart(null);\r\n              } else {\r\n                setSelectedNode(null);\r\n                setShowNodeConfig(false);\r\n\r\n                // Iniciar pan\r\n                setIsPanning(true);\r\n                setPanStart({ x: e.clientX - canvasOffset.x, y: e.clientY - canvasOffset.y });\r\n              }\r\n            }\r\n          }}\r\n          onMouseMove={(e) => {\r\n            if (isPanning) {\r\n              setCanvasOffset({\r\n                x: e.clientX - panStart.x,\r\n                y: e.clientY - panStart.y\r\n              });\r\n            }\r\n          }}\r\n          onMouseUp={() => setIsPanning(false)}\r\n          style={{\r\n            backgroundImage: gridVisible ? `\r\n              radial-gradient(circle, #d1d5db 1px, transparent 1px)\r\n            ` : 'none',\r\n            backgroundSize: gridVisible ? `${20 * zoom}px ${20 * zoom}px` : 'auto',\r\n            backgroundPosition: gridVisible ? `${canvasOffset.x}px ${canvasOffset.y}px` : 'auto'\r\n          }}\r\n        >\r\n          {/* SVG para conex√µes */}\r\n          <svg className=\"absolute inset-0 pointer-events-none z-10\" width=\"100%\" height=\"100%\">\r\n            <defs>\r\n              <marker\r\n                id=\"arrowhead\"\r\n                markerWidth=\"10\"\r\n                markerHeight=\"7\"\r\n                refX=\"9\"\r\n                refY=\"3.5\"\r\n                orient=\"auto\"\r\n                markerUnits=\"strokeWidth\"\r\n              >\r\n                <polygon\r\n                  points=\"0 0, 10 3.5, 0 7\"\r\n                  fill=\"#6b7280\"\r\n                />\r\n              </marker>\r\n            </defs>\r\n            {connections.map(connection => {\r\n              const fromNode = nodes.find(n => n.id === connection.from);\r\n              const toNode = nodes.find(n => n.id === connection.to);\r\n\r\n              if (!fromNode || !toNode) return null;\r\n\r\n              const startX = (fromNode.position.x + 96) * zoom + canvasOffset.x;\r\n              const startY = (fromNode.position.y + 50) * zoom + canvasOffset.y;\r\n              const endX = (toNode.position.x + 96) * zoom + canvasOffset.x;\r\n              const endY = (toNode.position.y + 50) * zoom + canvasOffset.y;\r\n\r\n              return (\r\n                <g key={connection.id}>\r\n                  <path\r\n                    d={`M ${startX} ${startY} Q ${(startX + endX) / 2} ${startY - 50 * zoom} ${endX} ${endY}`}\r\n                    stroke=\"#6b7280\"\r\n                    strokeWidth={2 * zoom}\r\n                    fill=\"none\"\r\n                    markerEnd=\"url(#arrowhead)\"\r\n                    className=\"hover:stroke-blue-500 cursor-pointer transition-colors\"\r\n                  />\r\n                </g>\r\n              );\r\n            })}\r\n          </svg>\r\n\r\n          {/* N√≥s */}\r\n          {nodes.map(node => (\r\n            <NodeComponent\r\n              key={node.id}\r\n              node={node}\r\n              isSelected={selectedNode?.id === node.id}\r\n            />\r\n          ))}\r\n\r\n          {/* Estado vazio */}\r\n          {nodes.length === 0 && (\r\n            <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\r\n              <div className=\"text-center text-gray-500\">\r\n                <Workflow className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">Canvas Vazio</h3>\r\n                <p className=\"text-sm mb-2\">Adicione componentes da barra lateral para come√ßar</p>\r\n                <div className=\"flex items-center justify-center gap-4 text-xs\">\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <BookOpen className=\"w-3 h-3\" />\r\n                    <span>Use templates</span>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <MousePointer className=\"w-3 h-3\" />\r\n                    <span>Arraste para navegar</span>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <Plus className=\"w-3 h-3\" />\r\n                    <span>Conecte componentes</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Indicador de conex√£o */}\r\n          {isConnecting && (\r\n            <div className=\"absolute top-4 left-4 bg-blue-100 text-blue-800 px-3 py-2 rounded-lg shadow-sm animate-pulse\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Network className=\"w-4 h-4\" />\r\n                <span className=\"text-sm font-medium\">Clique em outro n√≥ para conectar</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Info do Canvas */}\r\n          <div className=\"absolute bottom-4 left-4 bg-white rounded-lg shadow-sm border border-gray-200 px-3 py-2\">\r\n            <div className=\"text-xs text-gray-600 flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-1\">\r\n                <Target className=\"w-3 h-3\" />\r\n                <span>{nodes.length} n√≥s</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-1\">\r\n                <Network className=\"w-3 h-3\" />\r\n                <span>{connections.length} conex√µes</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-1\">\r\n                <Bot className=\"w-3 h-3\" />\r\n                <span>{agents.length} agentes</span>\r\n              </div>\r\n              {executing && (\r\n                <div className=\"flex items-center gap-1 text-green-600\">\r\n                  <Activity className=\"w-3 h-3 animate-pulse\" />\r\n                  <span>Executando</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Mini Mapa */}\r\n          {miniMapVisible && nodes.length > 0 && (\r\n            <div className=\"absolute bottom-4 right-4 w-48 h-32 bg-white rounded-lg shadow-sm border border-gray-200 p-2\">\r\n              <div className=\"text-xs text-gray-600 mb-1\">Vis√£o Geral</div>\r\n              <div className=\"w-full h-full bg-gray-50 rounded relative overflow-hidden\">\r\n                {/* Mini nodes */}\r\n                {nodes.map(node => (\r\n                  <div\r\n                    key={node.id}\r\n                    className={`absolute w-2 h-2 rounded-full ${\r\n                      node.status === 'running' ? 'bg-blue-500 animate-pulse' :\r\n                      node.status === 'completed' ? 'bg-green-500' :\r\n                      node.status === 'error' ? 'bg-red-500' :\r\n                      'bg-gray-400'\r\n                    }`}\r\n                    style={{\r\n                      left: `${(node.position.x / 1200) * 100}%`,\r\n                      top: `${(node.position.y / 800) * 100}%`\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pain√©is Laterais */}\r\n      {showNodeConfig && selectedNode && (\r\n        <div className=\"w-80 bg-white border-l border-gray-200 p-4 overflow-y-auto shadow-lg\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"font-semibold text-gray-900 flex items-center gap-2\">\r\n              <selectedNode.icon className=\"w-4 h-4\" />\r\n              Configurar {selectedNode.name}\r\n            </h3>\r\n            <button\r\n              onClick={() => setShowNodeConfig(false)}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600 rounded\"\r\n            >\r\n              <X className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Nome do N√≥\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={selectedNode.name}\r\n                onChange={(e) => {\r\n                  const newName = e.target.value;\r\n                  setNodes(prev => prev.map(n =>\r\n                    n.id === selectedNode.id ? { ...n, name: newName } : n\r\n                  ));\r\n                  setSelectedNode(prev => ({ ...prev, name: newName }));\r\n                }}\r\n                className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n\r\n            {selectedNode.type === 'agent' && (\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Selecionar Agente\r\n                </label>\r\n                <select\r\n                  value={selectedNode.config.agentId || ''}\r\n                  onChange={(e) => {\r\n                    const agentId = e.target.value;\r\n                    setNodes(prev => prev.map(n =>\r\n                      n.id === selectedNode.id\r\n                        ? { ...n, config: { ...n.config, agentId } }\r\n                        : n\r\n                    ));\r\n                    setSelectedNode(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, agentId }\r\n                    }));\r\n                  }}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"\">Selecione um agente</option>\r\n                  {agents.map(agent => (\r\n                    <option key={agent.id} value={agent.id}>\r\n                      {agent.nome}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {selectedNode.type === 'condition' && (\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Condi√ß√£o JavaScript\r\n                </label>\r\n                <textarea\r\n                  value={selectedNode.config.condition || ''}\r\n                  onChange={(e) => {\r\n                    const condition = e.target.value;\r\n                    setNodes(prev => prev.map(n =>\r\n                      n.id === selectedNode.id\r\n                        ? { ...n, config: { ...n.config, condition } }\r\n                        : n\r\n                    ));\r\n                    setSelectedNode(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, condition }\r\n                    }));\r\n                  }}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm\"\r\n                  rows=\"4\"\r\n                  placeholder=\"if (result.success) return 'next'; else return 'retry';\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {selectedNode.type === 'delay' && (\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Delay (ms)\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={selectedNode.config.delay || 1000}\r\n                  onChange={(e) => {\r\n                    const delay = parseInt(e.target.value) || 1000;\r\n                    setNodes(prev => prev.map(n =>\r\n                      n.id === selectedNode.id\r\n                        ? { ...n, config: { ...n.config, delay } }\r\n                        : n\r\n                    ));\r\n                    setSelectedNode(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, delay }\r\n                    }));\r\n                  }}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  min=\"100\"\r\n                  step=\"100\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {selectedNode.type === 'transform' && (\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Transforma√ß√£o JavaScript\r\n                </label>\r\n                <textarea\r\n                  value={selectedNode.config.transformation || ''}\r\n                  onChange={(e) => {\r\n                    const transformation = e.target.value;\r\n                    setNodes(prev => prev.map(n =>\r\n                      n.id === selectedNode.id\r\n                        ? { ...n, config: { ...n.config, transformation } }\r\n                        : n\r\n                    ));\r\n                    setSelectedNode(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, transformation }\r\n                    }));\r\n                  }}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm\"\r\n                  rows=\"4\"\r\n                  placeholder=\"return data.map(item => ({ ...item, processed: true }));\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {selectedNode.type === 'notification' && (\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Mensagem\r\n                </label>\r\n                <textarea\r\n                  value={selectedNode.config.message || ''}\r\n                  onChange={(e) => {\r\n                    const message = e.target.value;\r\n                    setNodes(prev => prev.map(n =>\r\n                      n.id === selectedNode.id\r\n                        ? { ...n, config: { ...n.config, message } }\r\n                        : n\r\n                    ));\r\n                    setSelectedNode(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, message }\r\n                    }));\r\n                  }}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  rows=\"3\"\r\n                  placeholder=\"Mensagem da notifica√ß√£o...\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Configura√ß√µes avan√ßadas */}\r\n            <div className=\"border-t pt-4\">\r\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Configura√ß√µes Avan√ßadas</h4>\r\n\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div>\r\n                  <label className=\"block text-xs text-gray-600 mb-1\">Timeout (s)</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={selectedNode.config.timeout || 60}\r\n                    onChange={(e) => {\r\n                      const timeout = parseInt(e.target.value) || 60;\r\n                      setNodes(prev => prev.map(n =>\r\n                        n.id === selectedNode.id\r\n                          ? { ...n, config: { ...n.config, timeout } }\r\n                          : n\r\n                      ));\r\n                      setSelectedNode(prev => ({\r\n                        ...prev,\r\n                        config: { ...prev.config, timeout }\r\n                      }));\r\n                    }}\r\n                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                    min=\"1\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-xs text-gray-600 mb-1\">Tentativas</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={selectedNode.config.retries || 1}\r\n                    onChange={(e) => {\r\n                      const retries = parseInt(e.target.value) || 1;\r\n                      setNodes(prev => prev.map(n =>\r\n                        n.id === selectedNode.id\r\n                          ? { ...n, config: { ...n.config, retries } }\r\n                          : n\r\n                      ));\r\n                      setSelectedNode(prev => ({\r\n                        ...prev,\r\n                        config: { ...prev.config, retries }\r\n                      }));\r\n                    }}\r\n                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                    min=\"1\"\r\n                    max=\"5\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-2 mt-6 pt-4 border-t\">\r\n            <button\r\n              onClick={() => duplicateNode(selectedNode)}\r\n              className=\"flex-1 px-3 py-2 bg-gray-100 text-gray-700 text-sm rounded hover:bg-gray-200 flex items-center justify-center gap-2\"\r\n            >\r\n              <Copy className=\"w-3 h-3\" />\r\n              Duplicar\r\n            </button>\r\n            <button\r\n              onClick={() => deleteNode(selectedNode.id)}\r\n              className=\"flex-1 px-3 py-2 bg-red-100 text-red-700 text-sm rounded hover:bg-red-200 flex items-center justify-center gap-2\"\r\n            >\r\n              <Trash2 className=\"w-3 h-3\" />\r\n              Excluir\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showExecutionPanel && <ExecutionPanel />}\r\n      {showTemplates && <TemplatesPanel />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkflowBuilderSuper;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7904, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/AgnoMonitoring.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Activity,\r\n  Clock,\r\n  Zap,\r\n  TrendingUp,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  RefreshCw,\r\n  Download,\r\n  Filter,\r\n  Search,\r\n  Calendar,\r\n  User,\r\n  Bot,\r\n  GitBranch,\r\n  Loader,\r\n  AlertCircle\r\n} from 'lucide-react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, BarChart, Bar } from 'recharts';\r\n\r\n// Import do cliente Agno\r\nimport AgnoClient from './agnoClient';\r\n\r\nconst AgnoMonitoringReal = () => {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [timeRange, setTimeRange] = useState('24h');\r\n  const [sessions, setSessions] = useState([]);\r\n  const [metrics, setMetrics] = useState({});\r\n  const [performanceData, setPerformanceData] = useState([]);\r\n  const [agents, setAgents] = useState([]);\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lastUpdate, setLastUpdate] = useState(new Date());\r\n\r\n  // Cliente Agno\r\n  const [agnoClient] = useState(() => new AgnoClient());\r\n\r\n  // Carregar dados iniciais\r\n  useEffect(() => {\r\n    loadAllData();\r\n\r\n    // Auto-refresh a cada 30 segundos\r\n    const interval = setInterval(loadAllData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [timeRange]);\r\n\r\n  const loadAllData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Carregar dados em paralelo\r\n      const [\r\n        metricsData,\r\n        performanceResult,\r\n        sessionsData,\r\n        agentsData,\r\n        workflowsData\r\n      ] = await Promise.all([\r\n        agnoClient.makeRequest('/api/metrics'),\r\n        agnoClient.makeRequest(`/api/performance?hours=${timeRange === '24h' ? 24 : timeRange === '7d' ? 168 : 720}`),\r\n        agnoClient.makeRequest('/api/sessions'),\r\n        agnoClient.makeRequest('/api/agents'),\r\n        agnoClient.makeRequest('/api/workflows')\r\n      ]);\r\n\r\n      setMetrics(metricsData);\r\n      setPerformanceData(performanceResult.reverse()); // Mais recente primeiro\r\n      setSessions(sessionsData);\r\n      setAgents(agentsData);\r\n      setWorkflows(workflowsData);\r\n      setLastUpdate(new Date());\r\n\r\n    } catch (err) {\r\n      console.error('Erro ao carregar dados:', err);\r\n      setError(`Erro ao carregar dados: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTimeRange = (range) => {\r\n    switch (range) {\r\n      case '1h': return '√∫ltima hora';\r\n      case '24h': return '√∫ltimas 24h';\r\n      case '7d': return '√∫ltimos 7 dias';\r\n      case '30d': return '√∫ltimos 30 dias';\r\n      default: return range;\r\n    }\r\n  };\r\n\r\n  const MetricCard = ({ title, value, subtitle, icon: Icon, trend, color = 'blue', loading = false }) => {\r\n    const colorClasses = {\r\n      blue: 'bg-blue-50 text-blue-600',\r\n      green: 'bg-green-50 text-green-600',\r\n      yellow: 'bg-yellow-50 text-yellow-600',\r\n      red: 'bg-red-50 text-red-600',\r\n      purple: 'bg-purple-50 text-purple-600'\r\n    };\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex-1\">\r\n            <p className=\"text-sm text-gray-600 mb-1\">{title}</p>\r\n            {loading ? (\r\n              <div className=\"flex items-center gap-2\">\r\n                <Loader className=\"w-4 h-4 animate-spin text-gray-400\" />\r\n                <span className=\"text-gray-400\">Carregando...</span>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\r\n                {subtitle && (\r\n                  <p className=\"text-sm text-gray-500 mt-1\">{subtitle}</p>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={`p-3 rounded-lg ${colorClasses[color]}`}>\r\n            <Icon className=\"w-6 h-6\" />\r\n          </div>\r\n        </div>\r\n        {trend && !loading && (\r\n          <div className=\"mt-4 flex items-center\">\r\n            <TrendingUp className={`w-4 h-4 mr-1 ${trend > 0 ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className={`text-sm font-medium ${trend > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n              {trend > 0 ? '+' : ''}{trend}%\r\n            </span>\r\n            <span className=\"text-sm text-gray-500 ml-1\">vs ontem</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SessionRow = ({ session, index }) => {\r\n    const statusColor = {\r\n      completed: 'text-green-600 bg-green-50',\r\n      error: 'text-red-600 bg-red-50',\r\n      active: 'text-blue-600 bg-blue-50',\r\n      timeout: 'text-yellow-600 bg-yellow-50'\r\n    };\r\n\r\n    const StatusIcon = {\r\n      completed: CheckCircle,\r\n      error: XCircle,\r\n      active: Activity,\r\n      timeout: AlertTriangle\r\n    }[session.status];\r\n\r\n    return (\r\n      <tr className=\"hover:bg-gray-50\">\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          <div className=\"flex items-center\">\r\n            <div className={`p-1 rounded-full ${statusColor[session.status]} mr-3`}>\r\n              <StatusIcon className=\"w-4 h-4\" />\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm font-medium text-gray-900\">{session.id}</div>\r\n              <div className=\"text-sm text-gray-500\">\r\n                {new Date(session.start_time).toLocaleString('pt-BR')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          <div className=\"flex items-center\">\r\n            <Bot className=\"w-4 h-4 text-blue-500 mr-2\" />\r\n            <span className=\"text-sm text-gray-900\">\r\n              {agents.find(a => a.id.toString() === session.agent_id)?.nome || `Agente ${session.agent_id}`}\r\n            </span>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          <div className=\"flex items-center\">\r\n            <User className=\"w-4 h-4 text-gray-400 mr-2\" />\r\n            <span className=\"text-sm text-gray-900\">user_{session.user_id}</span>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          {session.duration ? `${session.duration.toFixed(1)}s` : 'N/A'}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          {session.tokens_used ? session.tokens_used.toLocaleString() : 'N/A'}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          {session.response_length || 0}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          ${((session.tokens_used || 0) * 0.0001).toFixed(3)}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          {session.status === 'error' && (\r\n            <div className=\"text-xs text-red-600 bg-red-50 px-2 py-1 rounded max-w-xs truncate\">\r\n              Erro na execu√ß√£o\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  if (loading && sessions.length === 0) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <Loader className=\"w-8 h-8 animate-spin text-blue-600 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Carregando Dashboard</h3>\r\n          <p className=\"text-gray-500\">Conectando com o backend Agno...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n                <Activity className=\"w-6 h-6 text-purple-600\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Monitoramento Agno</h1>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Performance e analytics em tempo real ‚Ä¢ √öltima atualiza√ß√£o: {lastUpdate.toLocaleTimeString('pt-BR')}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-3\">\r\n              <select\r\n                value={timeRange}\r\n                onChange={(e) => setTimeRange(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"1h\">√öltima hora</option>\r\n                <option value=\"24h\">√öltimas 24h</option>\r\n                <option value=\"7d\">√öltimos 7 dias</option>\r\n                <option value=\"30d\">√öltimos 30 dias</option>\r\n              </select>\r\n\r\n              <button\r\n                onClick={loadAllData}\r\n                disabled={loading}\r\n                className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center gap-2 disabled:opacity-50\"\r\n              >\r\n                <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\r\n                Atualizar\r\n              </button>\r\n\r\n              <button className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                <Download className=\"w-4 h-4\" />\r\n                Exportar\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Display */}\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2 text-red-700\">\r\n              <AlertTriangle className=\"w-4 h-4\" />\r\n              <span className=\"text-sm\">{error}</span>\r\n              <button\r\n                onClick={() => setError(null)}\r\n                className=\"ml-auto text-red-500 hover:text-red-700\"\r\n              >\r\n                √ó\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Navigation Tabs */}\r\n          <nav className=\"flex space-x-8\">\r\n            <button\r\n              onClick={() => setActiveTab('overview')}\r\n              className={`${\r\n                activeTab === 'overview'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <BarChart3 className=\"w-4 h-4\" />\r\n              Vis√£o Geral\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('sessions')}\r\n              className={`${\r\n                activeTab === 'sessions'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <Activity className=\"w-4 h-4\" />\r\n              Sess√µes ({sessions.length})\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('agents')}\r\n              className={`${\r\n                activeTab === 'agents'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <Bot className=\"w-4 h-4\" />\r\n              Agentes ({agents.length})\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('performance')}\r\n              className={`${\r\n                activeTab === 'performance'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <TrendingUp className=\"w-4 h-4\" />\r\n              Performance\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Overview Tab */}\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-8\">\r\n            {/* M√©tricas principais */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              <MetricCard\r\n                title=\"Total de Sess√µes\"\r\n                value={metrics.total_sessions || 0}\r\n                subtitle={formatTimeRange(timeRange)}\r\n                icon={Activity}\r\n                trend={12.5}\r\n                color=\"blue\"\r\n                loading={loading}\r\n              />\r\n              <MetricCard\r\n                title=\"Taxa de Sucesso\"\r\n                value={`${(metrics.success_rate || 0).toFixed(1)}%`}\r\n                subtitle=\"sess√µes bem-sucedidas\"\r\n                icon={CheckCircle}\r\n                trend={2.1}\r\n                color=\"green\"\r\n                loading={loading}\r\n              />\r\n              <MetricCard\r\n                title=\"Tempo M√©dio\"\r\n                value={`${(metrics.avg_response_time || 0).toFixed(1)}s`}\r\n                subtitle=\"tempo de resposta\"\r\n                icon={Clock}\r\n                trend={-5.3}\r\n                color=\"yellow\"\r\n                loading={loading}\r\n              />\r\n              <MetricCard\r\n                title=\"Tokens Usados\"\r\n                value={(metrics.total_tokens || 0).toLocaleString()}\r\n                subtitle={`$${(metrics.cost_today || 0).toFixed(2)} em custos`}\r\n                icon={Zap}\r\n                trend={8.7}\r\n                color=\"purple\"\r\n                loading={loading}\r\n              />\r\n            </div>\r\n\r\n            {/* Status dos componentes */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Status do Sistema</h3>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Backend API</span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                      <span className=\"text-sm font-medium text-green-600\">Online</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Banco de Dados</span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                      <span className=\"text-sm font-medium text-green-600\">Conectado</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Agentes Ativos</span>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\r\n                      <span className=\"text-sm font-medium text-blue-600\">{metrics.active_agents || 0}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recursos</h3>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Agentes Criados</span>\r\n                    <span className=\"text-sm font-medium text-gray-900\">{agents.length}</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Workflows</span>\r\n                    <span className=\"text-sm font-medium text-gray-900\">{workflows.length}</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Sess√µes Hoje</span>\r\n                    <span className=\"text-sm font-medium text-gray-900\">{sessions.length}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">√öltimas Atividades</h3>\r\n                <div className=\"space-y-3\">\r\n                  {sessions.slice(0, 3).map((session, index) => (\r\n                    <div key={index} className=\"flex items-center gap-3\">\r\n                      <Bot className=\"w-4 h-4 text-blue-500\" />\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                          Sess√£o {session.id}\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          {new Date(session.start_time).toLocaleTimeString('pt-BR')}\r\n                        </div>\r\n                      </div>\r\n                      <div className={`w-2 h-2 rounded-full ${\r\n                        session.status === 'completed' ? 'bg-green-500' : \r\n                        session.status === 'error' ? 'bg-red-500' : 'bg-blue-500'\r\n                      }`}></div>\r\n                    </div>\r\n                  ))}\r\n                  {sessions.length === 0 && (\r\n                    <div className=\"text-sm text-gray-500 text-center py-4\">\r\n                      Nenhuma atividade recente\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Sessions Tab */}\r\n        {activeTab === 'sessions' && (\r\n          <div className=\"space-y-6\">\r\n            {/* Filtros */}\r\n            <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200\">\r\n              <div className=\"flex flex-wrap gap-4 items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Search className=\"w-4 h-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar sess√µes...\"\r\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n\r\n                <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\r\n                  <option value=\"all\">Todos os agentes</option>\r\n                  {agents.map(agent => (\r\n                    <option key={agent.id} value={agent.id}>{agent.nome}</option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\r\n                  <option value=\"all\">Todos os status</option>\r\n                  <option value=\"completed\">Sucesso</option>\r\n                  <option value=\"error\">Erro</option>\r\n                  <option value=\"active\">Ativo</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabela de sess√µes */}\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-lg overflow-hidden\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Sess√£o\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Agente\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Usu√°rio\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Dura√ß√£o\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Tokens\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Resposta\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Custo\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Status\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {sessions.map((session, index) => (\r\n                    <SessionRow key={session.id || index} session={session} index={index} />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              {sessions.length === 0 && (\r\n                <div className=\"text-center py-12\">\r\n                  <Activity className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                    Nenhuma sess√£o encontrada\r\n                  </h3>\r\n                  <p className=\"text-gray-500\">\r\n                    As sess√µes aparecer√£o aqui quando os agentes forem utilizados.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Agents Tab */}\r\n        {activeTab === 'agents' && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {agents.map(agent => {\r\n              // Calcular estat√≠sticas do agente\r\n              const agentSessions = sessions.filter(s => s.agent_id === agent.id.toString());\r\n              const successRate = agentSessions.length > 0\r\n                ? (agentSessions.filter(s => s.status === 'completed').length / agentSessions.length * 100).toFixed(1)\r\n                : 0;\r\n              const totalTokens = agentSessions.reduce((sum, s) => sum + (s.tokens_used || 0), 0);\r\n              const avgDuration = agentSessions.length > 0\r\n                ? (agentSessions.reduce((sum, s) => sum + (s.duration || 0), 0) / agentSessions.length).toFixed(1)\r\n                : 0;\r\n\r\n              return (\r\n                <div key={agent.id} className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                        <Bot className=\"w-5 h-5 text-blue-600\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold text-gray-900\">{agent.nome}</h3>\r\n                        <p className=\"text-sm text-gray-500\">{agent.agent_role}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`w-2 h-2 rounded-full ${\r\n                      agent.is_active_agent ? 'bg-green-500' : 'bg-gray-400'\r\n                    }`} />\r\n                  </div>\r\n\r\n                  <div className=\"space-y-3 mb-4\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Taxa de Sucesso</span>\r\n                      <span className={`font-medium ${\r\n                        successRate >= 90 ? 'text-green-600' : \r\n                        successRate >= 70 ? 'text-yellow-600' : 'text-red-600'\r\n                      }`}>\r\n                        {successRate}%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Sess√µes</span>\r\n                      <span className=\"font-medium text-gray-900\">{agentSessions.length}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Tokens Usados</span>\r\n                      <span className=\"font-medium text-gray-900\">{totalTokens.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Tempo M√©dio</span>\r\n                      <span className=\"font-medium text-gray-900\">{avgDuration}s</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    Modelo: {agent.empresa} - {agent.modelo}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            {agents.length === 0 && (\r\n              <div className=\"col-span-full text-center py-12\">\r\n                <Bot className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                  Nenhum agente encontrado\r\n                </h3>\r\n                <p className=\"text-gray-500\">\r\n                  Crie agentes para v√™-los aparecer aqui.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Performance Tab */}\r\n        {activeTab === 'performance' && (\r\n          <div className=\"space-y-8\">\r\n            {/* Gr√°ficos de performance */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tempo de Resposta</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <LineChart data={performanceData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"time\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"responseTime\" stroke=\"#8884d8\" strokeWidth={2} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Uso de Tokens</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <AreaChart data={performanceData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"time\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Area type=\"monotone\" dataKey=\"tokens\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.3} />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Atividade por per√≠odo */}\r\n            <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sess√µes e Erros por Per√≠odo</h3>\r\n              <ResponsiveContainer width=\"100%\" height={400}>\r\n                <BarChart data={performanceData}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"time\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"sessions\" fill=\"#8884d8\" name=\"Sess√µes\" />\r\n                  <Bar dataKey=\"errors\" fill=\"#ff7300\" name=\"Erros\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgnoMonitoringReal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9846, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Bot,\n  GitBranch,\n  Activity, \n  FileText,\n  Settings,\n  User,\n  Menu,\n  X,\n  Home,\n  BarChart3\n} from 'lucide-react';\n\n// Importar os componentes existentes\nimport AgnoManagementInterface from '@/components/AgnoManagementInterface';\nimport AgentTemplates from '@/components/AgentTemplates';\nimport WorkflowBuilder from '@/components/WorkflowBuilder';\nimport AgnoMonitoring from '@/components/AgnoMonitoring';\n\nexport default function HomePage() {\n  const [activeView, setActiveView] = useState('dashboard');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [user, setUser] = useState({\n    name: 'Usu√°rio Admin',\n    email: 'admin@agno.ai',\n    avatar: null\n  });\n\n  const navigationItems = [\n    {\n      id: 'dashboard',\n      name: 'Dashboard',\n      icon: Home,\n      component: AgnoManagementInterface\n    },\n    {\n      id: 'templates',\n      name: 'Templates',\n      icon: FileText,\n      component: AgentTemplates\n    },\n    {\n      id: 'workflows',\n      name: 'Workflow Builder',\n      icon: GitBranch,\n      component: WorkflowBuilder\n    },\n    {\n      id: 'monitoring',\n      name: 'Monitoramento',\n      icon: BarChart3,\n      component: AgnoMonitoring\n    }\n  ];\n\n  const activeItem = navigationItems.find(item => item.id === activeView);\n  const ActiveComponent = activeItem?.component;\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* Sidebar */}\n      <div className={`${sidebarOpen ? 'w-64' : 'w-16'} bg-white shadow-lg transition-all duration-300 flex flex-col`}>\n        {/* Header do Sidebar */}\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            {sidebarOpen && (\n              <div className=\"flex items-center gap-2\">\n                <div className=\"p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg text-white\">\n                  <Bot className=\"w-6 h-6\" />\n                </div>\n                <div>\n                  <h1 className=\"text-lg font-bold text-gray-900\">Agno Platform</h1>\n                  <p className=\"text-xs text-gray-500\">AI Agent Management</p>\n                </div>\n              </div>\n            )}\n            <button\n              onClick={() => setSidebarOpen(!sidebarOpen)}\n              className=\"p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              {sidebarOpen ? <X className=\"w-4 h-4\" /> : <Menu className=\"w-4 h-4\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Navega√ß√£o */}\n        <nav className=\"flex-1 p-4\">\n          <div className=\"space-y-2\">\n            {navigationItems.map((item) => {\n              const IconComponent = item.icon;\n              const isActive = activeView === item.id;\n              \n              return (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveView(item.id)}\n                  className={`\n                    w-full flex items-center gap-3 px-3 py-2 rounded-lg text-left transition-colors\n                    ${isActive \n                      ? 'bg-blue-50 text-blue-600 border border-blue-200' \n                      : 'text-gray-700 hover:bg-gray-50'\n                    }\n                  `}\n                  title={!sidebarOpen ? item.name : undefined}\n                >\n                  <IconComponent className=\"w-5 h-5 flex-shrink-0\" />\n                  {sidebarOpen && (\n                    <span className=\"font-medium\">{item.name}</span>\n                  )}\n                </button>\n              );\n            })}\n          </div>\n        </nav>\n\n        {/* User Info */}\n        <div className=\"p-4 border-t border-gray-200\">\n          <div className={`flex items-center gap-3 ${!sidebarOpen && 'justify-center'}`}>\n            <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-medium text-sm\">\n              {user.name.charAt(0)}\n            </div>\n            {sidebarOpen && (\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">\n                  {user.name}\n                </p>\n                <p className=\"text-xs text-gray-500 truncate\">\n                  {user.email}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Top Bar */}\n        <header className=\"bg-white shadow-sm border-b border-gray-200 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">\n                {activeItem?.name || 'Dashboard'}\n              </h2>\n              <p className=\"text-sm text-gray-500 mt-1\">\n                {activeView === 'dashboard' && 'Gerencie seus agentes e workflows'}\n                {activeView === 'templates' && 'Crie e use templates para acelerar o desenvolvimento'}\n                {activeView === 'workflows' && 'Construa workflows visuais com m√∫ltiplos agentes'}\n                {activeView === 'monitoring' && 'Monitore performance e uso dos seus agentes'}\n              </p>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                <Settings className=\"w-5 h-5\" />\n              </button>\n              <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-medium text-sm cursor-pointer\">\n                {user.name.charAt(0)}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Page Content */}\n        <main className=\"flex-1 overflow-auto bg-gray-50\">\n          {ActiveComponent && <ActiveComponent />}\n        </main>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}