{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/AgnoManagementInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Bot,\r\n  Plus,\r\n  Play,\r\n  Settings,\r\n  Users,\r\n  Brain,\r\n  Zap,\r\n  MessageSquare,\r\n  ChevronRight,\r\n  Save,\r\n  Trash2,\r\n  Edit,\r\n  Copy,\r\n  GitBranch,\r\n  Activity,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Loader\r\n} from 'lucide-react';\r\n\r\n// Importar o cliente Agno\r\nimport AgnoClient from './agnoClient';\r\n\r\nconst AgnoManagementReal = () => {\r\n  const [activeTab, setActiveTab] = useState('agents');\r\n  const [agents, setAgents] = useState([]);\r\n  const [workflows, setWorkflows] = useState([]);\r\n  const [showCreateAgent, setShowCreateAgent] = useState(false);\r\n  const [showCreateWorkflow, setShowCreateWorkflow] = useState(false);\r\n  const [selectedAgent, setSelectedAgent] = useState(null);\r\n  const [selectedWorkflow, setSelectedWorkflow] = useState(null);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentResponse, setCurrentResponse] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Cliente Agno\r\n  const [agnoClient] = useState(() => new AgnoClient());\r\n  const chatEndRef = useRef(null);\r\n\r\n  // Carregar dados iniciais\r\n  useEffect(() => {\r\n    loadAgents();\r\n    loadWorkflows();\r\n    checkHealth();\r\n  }, []);\r\n\r\n  // Auto-scroll do chat\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [chatHistory, currentResponse]);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      const health = await agnoClient.healthCheck();\r\n      console.log('Backend conectado:', health);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Erro ao conectar com o backend. Verifique se está rodando na porta 8000.');\r\n      console.error('Erro de conexão:', err);\r\n    }\r\n  };\r\n\r\n  const loadAgents = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await agnoClient.listAgents();\r\n      const formattedAgents = data.map(agent => ({\r\n        id: agent.id,\r\n        name: agent.nome,\r\n        role: agent.agent_role || 'Assistant',\r\n        modelProvider: agent.empresa,\r\n        modelId: agent.modelo,\r\n        tools: agent.langchain_config ? JSON.parse(agent.langchain_config).tools || [] : [],\r\n        status: agent.is_active_agent ? 'active' : 'inactive',\r\n        lastUsed: new Date(agent.created_at).toLocaleDateString('pt-BR'),\r\n        instructions: agent.instructions ? JSON.parse(agent.instructions) : []\r\n      }));\r\n      setAgents(formattedAgents);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar agentes:', err);\r\n      setError('Erro ao carregar agentes');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadWorkflows = async () => {\r\n    try {\r\n      const data = await agnoClient.listWorkflows();\r\n      const formattedWorkflows = data.map(workflow => ({\r\n        id: workflow.id,\r\n        name: workflow.nome,\r\n        description: workflow.descricao,\r\n        flowType: workflow.workflow_config ? JSON.parse(workflow.workflow_config).flow_type : 'sequential',\r\n        agentCount: workflow.workflow_config ? JSON.parse(workflow.workflow_config).agents?.length || 0 : 0,\r\n        status: workflow.is_active ? 'active' : 'inactive',\r\n        lastUsed: new Date(workflow.created_at).toLocaleDateString('pt-BR')\r\n      }));\r\n      setWorkflows(formattedWorkflows);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar workflows:', err);\r\n      setError('Erro ao carregar workflows');\r\n    }\r\n  };\r\n\r\n  const CreateAgentModal = () => {\r\n    const [formData, setFormData] = useState({\r\n      name: '',\r\n      role: '',\r\n      model_provider: 'openai',\r\n      model_id: 'gpt-4o',\r\n      instructions: [''],\r\n      tools: [],\r\n      memory_enabled: true,\r\n      rag_enabled: false\r\n    });\r\n    const [creating, setCreating] = useState(false);\r\n\r\n    const availableTools = [\r\n      { id: 'duckduckgo', name: 'DuckDuckGo Search', description: 'Pesquisa na web' },\r\n      { id: 'yfinance', name: 'Yahoo Finance', description: 'Dados financeiros' },\r\n      { id: 'reasoning', name: 'Reasoning Tools', description: 'Capacidades de raciocínio' }\r\n    ];\r\n\r\n    const modelOptions = {\r\n      openai: [\r\n        { id: 'gpt-4o', name: 'GPT-4o' },\r\n        { id: 'gpt-4o-mini', name: 'GPT-4o Mini' },\r\n        { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo' }\r\n      ],\r\n      anthropic: [\r\n        { id: 'claude-3-5-sonnet-20241022', name: 'Claude 3.5 Sonnet' },\r\n        { id: 'claude-3-haiku-20240307', name: 'Claude 3 Haiku' }\r\n      ]\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      if (!formData.name || !formData.role || !formData.instructions[0]) {\r\n        setError('Preencha todos os campos obrigatórios');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setCreating(true);\r\n        const result = await agnoClient.createAgent(formData);\r\n        console.log('Agente criado:', result);\r\n        setShowCreateAgent(false);\r\n        await loadAgents(); // Recarrega a lista\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Erro ao criar agente:', err);\r\n        setError(`Erro ao criar agente: ${err.message}`);\r\n      } finally {\r\n        setCreating(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-6 flex items-center gap-2\">\r\n            <Bot className=\"w-6 h-6\" />\r\n            Criar Novo Agente\r\n          </h2>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2 text-red-700\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              <span className=\"text-sm\">{error}</span>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Nome do Agente *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Assistente de Marketing\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Papel/Função *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.role}\r\n                  onChange={(e) => setFormData({...formData, role: e.target.value})}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Marketing Specialist\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Provedor do Modelo\r\n                </label>\r\n                <select\r\n                  value={formData.model_provider}\r\n                  onChange={(e) => setFormData({\r\n                    ...formData,\r\n                    model_provider: e.target.value,\r\n                    model_id: modelOptions[e.target.value][0].id\r\n                  })}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"openai\">OpenAI</option>\r\n                  <option value=\"anthropic\">Anthropic</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Modelo\r\n                </label>\r\n                <select\r\n                  value={formData.model_id}\r\n                  onChange={(e) => setFormData({...formData, model_id: e.target.value})}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  {modelOptions[formData.model_provider].map(model => (\r\n                    <option key={model.id} value={model.id}>{model.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Instruções do Agente *\r\n              </label>\r\n              <textarea\r\n                value={formData.instructions[0]}\r\n                onChange={(e) => setFormData({\r\n                  ...formData,\r\n                  instructions: [e.target.value]\r\n                })}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                rows=\"4\"\r\n                placeholder=\"Descreva como o agente deve se comportar...\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Ferramentas Disponíveis\r\n              </label>\r\n              <div className=\"grid grid-cols-1 gap-2\">\r\n                {availableTools.map(tool => (\r\n                  <label key={tool.id} className=\"flex items-center p-3 border border-gray-200 rounded-lg cursor-pointer hover:bg-gray-50\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={formData.tools.includes(tool.id)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setFormData({...formData, tools: [...formData.tools, tool.id]});\r\n                        } else {\r\n                          setFormData({...formData, tools: formData.tools.filter(t => t !== tool.id)});\r\n                        }\r\n                      }}\r\n                      className=\"mr-3\"\r\n                    />\r\n                    <div>\r\n                      <div className=\"font-medium\">{tool.name}</div>\r\n                      <div className=\"text-sm text-gray-500\">{tool.description}</div>\r\n                    </div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-4\">\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.memory_enabled}\r\n                  onChange={(e) => setFormData({...formData, memory_enabled: e.target.checked})}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Habilitar Memória</span>\r\n              </label>\r\n\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.rag_enabled}\r\n                  onChange={(e) => setFormData({...formData, rag_enabled: e.target.checked})}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Habilitar RAG</span>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowCreateAgent(false)}\r\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n                disabled={creating}\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmit}\r\n                disabled={creating}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 disabled:opacity-50\"\r\n              >\r\n                {creating ? (\r\n                  <>\r\n                    <Loader className=\"w-4 h-4 animate-spin\" />\r\n                    Criando...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Save className=\"w-4 h-4\" />\r\n                    Criar Agente\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ChatInterface = ({ agent, workflow }) => {\r\n    const handleSendMessage = async () => {\r\n      if (!message.trim() || isRunning) return;\r\n\r\n      const userMessage = message;\r\n      setMessage('');\r\n      setIsRunning(true);\r\n      setCurrentResponse('');\r\n\r\n      // Adiciona mensagem do usuário\r\n      const newUserMessage = {\r\n        type: 'user',\r\n        content: userMessage,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      };\r\n      setChatHistory(prev => [...prev, newUserMessage]);\r\n\r\n      // Prepara resposta do agente\r\n      const agentMessage = {\r\n        type: 'agent',\r\n        content: '',\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        agentName: agent ? agent.name : workflow.name\r\n      };\r\n      setChatHistory(prev => [...prev, agentMessage]);\r\n\r\n      try {\r\n        const onChunk = (chunk) => {\r\n          setCurrentResponse(prev => prev + chunk);\r\n        };\r\n\r\n        const onComplete = (data) => {\r\n          setChatHistory(prev => {\r\n            const updated = [...prev];\r\n            const lastMessage = updated[updated.length - 1];\r\n            lastMessage.content = currentResponse;\r\n            lastMessage.completed = true;\r\n            return updated;\r\n          });\r\n          setCurrentResponse('');\r\n          setIsRunning(false);\r\n          setError(null);\r\n        };\r\n\r\n        const onError = (error) => {\r\n          console.error('Erro no chat:', error);\r\n          setError(`Erro: ${error.message}`);\r\n          setIsRunning(false);\r\n          setCurrentResponse('');\r\n        };\r\n\r\n        if (agent) {\r\n          await agnoClient.chatWithAgent(agent.id, userMessage, onChunk, onComplete, onError);\r\n        } else if (workflow) {\r\n          await agnoClient.chatWithWorkflow(workflow.id, userMessage, onChunk, onComplete, onError);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Erro ao enviar mensagem:', error);\r\n        setError(`Erro ao enviar mensagem: ${error.message}`);\r\n        setIsRunning(false);\r\n        setCurrentResponse('');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"mb-4\">\r\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\r\n            {agent ? <Bot className=\"w-5 h-5\" /> : <GitBranch className=\"w-5 h-5\" />}\r\n            Chat com {agent ? agent.name : workflow.name}\r\n          </h3>\r\n          {agent && (\r\n            <div className=\"text-sm text-gray-500 mt-1\">\r\n              Modelo: {agent.modelId} | Provider: {agent.modelProvider} | Tools: {agent.tools.join(', ') || 'Nenhuma'}\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <div className=\"mt-2 p-2 bg-red-50 border border-red-200 rounded text-red-700 text-sm flex items-center gap-2\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"h-96 border border-gray-200 rounded-lg p-4 overflow-y-auto mb-4 bg-gray-50\">\r\n          {chatHistory.length === 0 ? (\r\n            <div className=\"text-center text-gray-500 mt-20\">\r\n              <MessageSquare className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n              <p>Inicie uma conversa com {agent ? 'o agente' : 'o workflow'}</p>\r\n              <p className=\"text-xs mt-1\">Este chat usa o Agno real conectado ao backend!</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {chatHistory.map((msg, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`${\r\n                    msg.type === 'user' \r\n                      ? 'ml-auto bg-blue-500 text-white' \r\n                      : 'mr-auto bg-white text-gray-800 border border-gray-200'\r\n                  } max-w-[80%] p-3 rounded-lg shadow-sm`}\r\n                >\r\n                  <div className=\"text-sm whitespace-pre-wrap\">\r\n                    {msg.content || (msg.type === 'agent' && !msg.completed ? currentResponse : '')}\r\n                  </div>\r\n                  {msg.type === 'agent' && !msg.completed && isRunning && (\r\n                    <div className=\"flex items-center gap-2 mt-2 text-xs text-gray-500\">\r\n                      <Loader className=\"w-3 h-3 animate-spin\" />\r\n                      <span>Digitando...</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"text-xs mt-1 opacity-70\">\r\n                    {msg.agentName && `${msg.agentName} • `}{msg.timestamp}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div ref={chatEndRef} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage()}\r\n            placeholder=\"Digite sua mensagem...\"\r\n            className=\"flex-1 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            disabled={isRunning}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={isRunning || !message.trim()}\r\n            className=\"px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\r\n          >\r\n            {isRunning ? (\r\n              <Loader className=\"w-4 h-4 animate-spin\" />\r\n            ) : (\r\n              <Play className=\"w-4 h-4\" />\r\n            )}\r\n            Enviar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                <Zap className=\"w-6 h-6 text-blue-600\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Agno Management</h1>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Plataforma real com Agno funcionando • {agents.length} agentes • {workflows.length} workflows\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowCreateAgent(true);\r\n                  setError(null);\r\n                }}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Novo Agente\r\n              </button>\r\n              <button\r\n                onClick={() => setShowCreateWorkflow(true)}\r\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center gap-2\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Novo Workflow\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Global Error Display */}\r\n        {error && (\r\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\r\n            <AlertCircle className=\"w-5 h-5 text-red-500 mt-0.5\" />\r\n            <div>\r\n              <h3 className=\"font-medium text-red-800\">Erro de Conexão</h3>\r\n              <p className=\"text-red-700 text-sm mt-1\">{error}</p>\r\n              <button\r\n                onClick={checkHealth}\r\n                className=\"mt-2 text-sm text-red-600 underline hover:text-red-800\"\r\n              >\r\n                Tentar novamente\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Navigation Tabs */}\r\n        <div className=\"mb-8\">\r\n          <nav className=\"flex space-x-8\">\r\n            <button\r\n              onClick={() => setActiveTab('agents')}\r\n              className={`${\r\n                activeTab === 'agents'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <Bot className=\"w-4 h-4\" />\r\n              Agentes ({agents.length})\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('workflows')}\r\n              className={`${\r\n                activeTab === 'workflows'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <GitBranch className=\"w-4 h-4\" />\r\n              Workflows ({workflows.length})\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('chat')}\r\n              className={`${\r\n                activeTab === 'chat'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <MessageSquare className=\"w-4 h-4\" />\r\n              Testar\r\n            </button>\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <Loader className=\"w-8 h-8 animate-spin text-blue-600\" />\r\n            <span className=\"ml-3 text-gray-600\">Carregando dados...</span>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Agents Tab */}\r\n            {activeTab === 'agents' && (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {agents.map(agent => (\r\n                  <div key={agent.id} className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow\">\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                          <Bot className=\"w-5 h-5 text-blue-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <h3 className=\"font-semibold text-gray-900\">{agent.name}</h3>\r\n                          <p className=\"text-sm text-gray-500\">{agent.role}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <div className={`w-2 h-2 rounded-full ${\r\n                          agent.status === 'active' ? 'bg-green-500' : 'bg-gray-400'\r\n                        }`} />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2 mb-4\">\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Brain className=\"w-4 h-4\" />\r\n                        <span>{agent.modelProvider} - {agent.modelId}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        <span>{agent.tools.length} ferramentas</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Activity className=\"w-4 h-4\" />\r\n                        <span>Criado: {agent.lastUsed}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedAgent(agent);\r\n                          setSelectedWorkflow(null);\r\n                          setActiveTab('chat');\r\n                          setChatHistory([]);\r\n                          setError(null);\r\n                        }}\r\n                        className=\"flex-1 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 flex items-center justify-center gap-2\"\r\n                      >\r\n                        <Play className=\"w-4 h-4\" />\r\n                        Testar\r\n                      </button>\r\n                      <button className=\"px-3 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        Config\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {agents.length === 0 && !loading && (\r\n                  <div className=\"col-span-full text-center py-12\">\r\n                    <Bot className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                      Nenhum agente criado\r\n                    </h3>\r\n                    <p className=\"text-gray-500 mb-4\">\r\n                      Crie seu primeiro agente para começar a usar o Agno.\r\n                    </p>\r\n                    <button\r\n                      onClick={() => setShowCreateAgent(true)}\r\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                    >\r\n                      Criar Primeiro Agente\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Workflows Tab */}\r\n            {activeTab === 'workflows' && (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {workflows.map(workflow => (\r\n                  <div key={workflow.id} className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow\">\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"p-2 bg-green-100 rounded-lg\">\r\n                          <GitBranch className=\"w-5 h-5 text-green-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <h3 className=\"font-semibold text-gray-900\">{workflow.name}</h3>\r\n                          <p className=\"text-sm text-gray-500\">{workflow.description}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2 mb-4\">\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Users className=\"w-4 h-4\" />\r\n                        <span>{workflow.agentCount} agentes</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <ChevronRight className=\"w-4 h-4\" />\r\n                        <span>Tipo: {workflow.flowType}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n                        <Activity className=\"w-4 h-4\" />\r\n                        <span>Último uso: {workflow.lastUsed}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedWorkflow(workflow);\r\n                          setSelectedAgent(null);\r\n                          setActiveTab('chat');\r\n                          setChatHistory([]);\r\n                          setError(null);\r\n                        }}\r\n                        className=\"flex-1 px-3 py-2 bg-green-600 text-white text-sm rounded-lg hover:bg-green-700 flex items-center justify-center gap-2\"\r\n                      >\r\n                        <Play className=\"w-4 h-4\" />\r\n                        Executar\r\n                      </button>\r\n                      <button className=\"px-3 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        Config\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {workflows.length === 0 && !loading && (\r\n                  <div className=\"col-span-full text-center py-12\">\r\n                    <GitBranch className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                      Nenhum workflow criado\r\n                    </h3>\r\n                    <p className=\"text-gray-500 mb-4\">\r\n                      Crie workflows para coordenar múltiplos agentes.\r\n                    </p>\r\n                    <button\r\n                      onClick={() => setShowCreateWorkflow(true)}\r\n                      className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\r\n                    >\r\n                      Criar Primeiro Workflow\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Chat Tab */}\r\n            {activeTab === 'chat' && (\r\n              <div className=\"max-w-4xl mx-auto\">\r\n                {selectedAgent || selectedWorkflow ? (\r\n                  <ChatInterface agent={selectedAgent} workflow={selectedWorkflow} />\r\n                ) : (\r\n                  <div className=\"bg-white rounded-lg shadow-lg p-12 text-center\">\r\n                    <MessageSquare className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n                      Selecione um Agente ou Workflow\r\n                    </h3>\r\n                    <p className=\"text-gray-500 mb-6\">\r\n                      Escolha um agente ou workflow para iniciar um chat com o Agno real.\r\n                    </p>\r\n                    <div className=\"flex justify-center gap-4\">\r\n                      <button\r\n                        onClick={() => setActiveTab('agents')}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n                      >\r\n                        <Bot className=\"w-4 h-4\" />\r\n                        Ver Agentes\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setActiveTab('workflows')}\r\n                        className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center gap-2\"\r\n                      >\r\n                        <GitBranch className=\"w-4 h-4\" />\r\n                        Ver Workflows\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {showCreateAgent && <CreateAgentModal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgnoManagementReal;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAwBA,MAAM,qBAAqB;IACzB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,eAAe;IACf,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,IAAI;IACxC,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAE1B,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA;QACA;IACF,GAAG,EAAE;IAEL,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC1D,GAAG;QAAC;QAAa;KAAgB;IAEjC,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,SAAS,MAAM,WAAW,WAAW;YAC3C,QAAQ,GAAG,CAAC,sBAAsB;YAClC,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC,oBAAoB;QACpC;IACF;IAEA,MAAM,aAAa;QACjB,IAAI;YACF,WAAW;YACX,MAAM,OAAO,MAAM,WAAW,UAAU;YACxC,MAAM,kBAAkB,KAAK,GAAG,CAAC,CAAA,QAAS,CAAC;oBACzC,IAAI,MAAM,EAAE;oBACZ,MAAM,MAAM,IAAI;oBAChB,MAAM,MAAM,UAAU,IAAI;oBAC1B,eAAe,MAAM,OAAO;oBAC5B,SAAS,MAAM,MAAM;oBACrB,OAAO,MAAM,gBAAgB,GAAG,KAAK,KAAK,CAAC,MAAM,gBAAgB,EAAE,KAAK,IAAI,EAAE,GAAG,EAAE;oBACnF,QAAQ,MAAM,eAAe,GAAG,WAAW;oBAC3C,UAAU,IAAI,KAAK,MAAM,UAAU,EAAE,kBAAkB,CAAC;oBACxD,cAAc,MAAM,YAAY,GAAG,KAAK,KAAK,CAAC,MAAM,YAAY,IAAI,EAAE;gBACxE,CAAC;YACD,UAAU;QACZ,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,OAAO,MAAM,WAAW,aAAa;YAC3C,MAAM,qBAAqB,KAAK,GAAG,CAAC,CAAA,WAAY,CAAC;oBAC/C,IAAI,SAAS,EAAE;oBACf,MAAM,SAAS,IAAI;oBACnB,aAAa,SAAS,SAAS;oBAC/B,UAAU,SAAS,eAAe,GAAG,KAAK,KAAK,CAAC,SAAS,eAAe,EAAE,SAAS,GAAG;oBACtF,YAAY,SAAS,eAAe,GAAG,KAAK,KAAK,CAAC,SAAS,eAAe,EAAE,MAAM,EAAE,UAAU,IAAI;oBAClG,QAAQ,SAAS,SAAS,GAAG,WAAW;oBACxC,UAAU,IAAI,KAAK,SAAS,UAAU,EAAE,kBAAkB,CAAC;gBAC7D,CAAC;YACD,aAAa;QACf,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,SAAS;QACX;IACF;IAEA,MAAM,mBAAmB;QACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;YACvC,MAAM;YACN,MAAM;YACN,gBAAgB;YAChB,UAAU;YACV,cAAc;gBAAC;aAAG;YAClB,OAAO,EAAE;YACT,gBAAgB;YAChB,aAAa;QACf;QACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAEzC,MAAM,iBAAiB;YACrB;gBAAE,IAAI;gBAAc,MAAM;gBAAqB,aAAa;YAAkB;YAC9E;gBAAE,IAAI;gBAAY,MAAM;gBAAiB,aAAa;YAAoB;YAC1E;gBAAE,IAAI;gBAAa,MAAM;gBAAmB,aAAa;YAA4B;SACtF;QAED,MAAM,eAAe;YACnB,QAAQ;gBACN;oBAAE,IAAI;oBAAU,MAAM;gBAAS;gBAC/B;oBAAE,IAAI;oBAAe,MAAM;gBAAc;gBACzC;oBAAE,IAAI;oBAAiB,MAAM;gBAAgB;aAC9C;YACD,WAAW;gBACT;oBAAE,IAAI;oBAA8B,MAAM;gBAAoB;gBAC9D;oBAAE,IAAI;oBAA2B,MAAM;gBAAiB;aACzD;QACH;QAEA,MAAM,eAAe;YACnB,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,YAAY,CAAC,EAAE,EAAE;gBACjE,SAAS;gBACT;YACF;YAEA,IAAI;gBACF,YAAY;gBACZ,MAAM,SAAS,MAAM,WAAW,WAAW,CAAC;gBAC5C,QAAQ,GAAG,CAAC,kBAAkB;gBAC9B,mBAAmB;gBACnB,MAAM,cAAc,oBAAoB;gBACxC,SAAS;YACX,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,yBAAyB;gBACvC,SAAS,CAAC,sBAAsB,EAAE,IAAI,OAAO,EAAE;YACjD,SAAU;gBACR,YAAY;YACd;QACF;QAEA,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAAY;;;;;;;oBAI5B,uBACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,oNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;0CACvB,8OAAC;gCAAK,WAAU;0CAAW;;;;;;;;;;;;kCAI/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,MAAK;gDACL,OAAO,SAAS,IAAI;gDACpB,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oDAAA;gDAC/D,WAAU;gDACV,aAAY;gDACZ,QAAQ;;;;;;;;;;;;kDAIZ,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,MAAK;gDACL,OAAO,SAAS,IAAI;gDACpB,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oDAAA;gDAC/D,WAAU;gDACV,aAAY;gDACZ,QAAQ;;;;;;;;;;;;;;;;;;0CAKd,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,OAAO,SAAS,cAAc;gDAC9B,UAAU,CAAC,IAAM,YAAY;wDAC3B,GAAG,QAAQ;wDACX,gBAAgB,EAAE,MAAM,CAAC,KAAK;wDAC9B,UAAU,YAAY,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;oDAC9C;gDACA,WAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAS;;;;;;kEACvB,8OAAC;wDAAO,OAAM;kEAAY;;;;;;;;;;;;;;;;;;kDAI9B,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,OAAO,SAAS,QAAQ;gDACxB,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,UAAU,EAAE,MAAM,CAAC,KAAK;oDAAA;gDACnE,WAAU;0DAET,YAAY,CAAC,SAAS,cAAc,CAAC,CAAC,GAAG,CAAC,CAAA,sBACzC,8OAAC;wDAAsB,OAAO,MAAM,EAAE;kEAAG,MAAM,IAAI;uDAAtC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;0CAM7B,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO,SAAS,YAAY,CAAC,EAAE;wCAC/B,UAAU,CAAC,IAAM,YAAY;gDAC3B,GAAG,QAAQ;gDACX,cAAc;oDAAC,EAAE,MAAM,CAAC,KAAK;iDAAC;4CAChC;wCACA,WAAU;wCACV,MAAK;wCACL,aAAY;wCACZ,QAAQ;;;;;;;;;;;;0CAIZ,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCAAI,WAAU;kDACZ,eAAe,GAAG,CAAC,CAAA,qBAClB,8OAAC;gDAAoB,WAAU;;kEAC7B,8OAAC;wDACC,MAAK;wDACL,SAAS,SAAS,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE;wDACxC,UAAU,CAAC;4DACT,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE;gEACpB,YAAY;oEAAC,GAAG,QAAQ;oEAAE,OAAO;2EAAI,SAAS,KAAK;wEAAE,KAAK,EAAE;qEAAC;gEAAA;4DAC/D,OAAO;gEACL,YAAY;oEAAC,GAAG,QAAQ;oEAAE,OAAO,SAAS,KAAK,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM,KAAK,EAAE;gEAAC;4DAC5E;wDACF;wDACA,WAAU;;;;;;kEAEZ,8OAAC;;0EACC,8OAAC;gEAAI,WAAU;0EAAe,KAAK,IAAI;;;;;;0EACvC,8OAAC;gEAAI,WAAU;0EAAyB,KAAK,WAAW;;;;;;;;;;;;;+CAfhD,KAAK,EAAE;;;;;;;;;;;;;;;;0CAsBzB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAM,WAAU;;0DACf,8OAAC;gDACC,MAAK;gDACL,SAAS,SAAS,cAAc;gDAChC,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,gBAAgB,EAAE,MAAM,CAAC,OAAO;oDAAA;gDAC3E,WAAU;;;;;;0DAEZ,8OAAC;gDAAK,WAAU;0DAAsB;;;;;;;;;;;;kDAGxC,8OAAC;wCAAM,WAAU;;0DACf,8OAAC;gDACC,MAAK;gDACL,SAAS,SAAS,WAAW;gDAC7B,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,aAAa,EAAE,MAAM,CAAC,OAAO;oDAAA;gDACxE,WAAU;;;;;;0DAEZ,8OAAC;gDAAK,WAAU;0DAAsB;;;;;;;;;;;;;;;;;;0CAI1C,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,MAAK;wCACL,SAAS,IAAM,mBAAmB;wCAClC,WAAU;wCACV,UAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,MAAK;wCACL,SAAS;wCACT,UAAU;wCACV,WAAU;kDAET,yBACC;;8DACE,8OAAC,sMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;gDAAyB;;yEAI7C;;8DACE,8OAAC,kMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAU9C;IAEA,MAAM,gBAAgB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE;QACxC,MAAM,oBAAoB;YACxB,IAAI,CAAC,QAAQ,IAAI,MAAM,WAAW;YAElC,MAAM,cAAc;YACpB,WAAW;YACX,aAAa;YACb,mBAAmB;YAEnB,+BAA+B;YAC/B,MAAM,iBAAiB;gBACrB,MAAM;gBACN,SAAS;gBACT,WAAW,IAAI,OAAO,kBAAkB;YAC1C;YACA,eAAe,CAAA,OAAQ;uBAAI;oBAAM;iBAAe;YAEhD,6BAA6B;YAC7B,MAAM,eAAe;gBACnB,MAAM;gBACN,SAAS;gBACT,WAAW,IAAI,OAAO,kBAAkB;gBACxC,WAAW,QAAQ,MAAM,IAAI,GAAG,SAAS,IAAI;YAC/C;YACA,eAAe,CAAA,OAAQ;uBAAI;oBAAM;iBAAa;YAE9C,IAAI;gBACF,MAAM,UAAU,CAAC;oBACf,mBAAmB,CAAA,OAAQ,OAAO;gBACpC;gBAEA,MAAM,aAAa,CAAC;oBAClB,eAAe,CAAA;wBACb,MAAM,UAAU;+BAAI;yBAAK;wBACzB,MAAM,cAAc,OAAO,CAAC,QAAQ,MAAM,GAAG,EAAE;wBAC/C,YAAY,OAAO,GAAG;wBACtB,YAAY,SAAS,GAAG;wBACxB,OAAO;oBACT;oBACA,mBAAmB;oBACnB,aAAa;oBACb,SAAS;gBACX;gBAEA,MAAM,UAAU,CAAC;oBACf,QAAQ,KAAK,CAAC,iBAAiB;oBAC/B,SAAS,CAAC,MAAM,EAAE,MAAM,OAAO,EAAE;oBACjC,aAAa;oBACb,mBAAmB;gBACrB;gBAEA,IAAI,OAAO;oBACT,MAAM,WAAW,aAAa,CAAC,MAAM,EAAE,EAAE,aAAa,SAAS,YAAY;gBAC7E,OAAO,IAAI,UAAU;oBACnB,MAAM,WAAW,gBAAgB,CAAC,SAAS,EAAE,EAAE,aAAa,SAAS,YAAY;gBACnF;YAEF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,SAAS,CAAC,yBAAyB,EAAE,MAAM,OAAO,EAAE;gBACpD,aAAa;gBACb,mBAAmB;YACrB;QACF;QAEA,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;;gCACX,sBAAQ,8OAAC,gMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;6FAAe,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAAa;gCAC/D,QAAQ,MAAM,IAAI,GAAG,SAAS,IAAI;;;;;;;wBAE7C,uBACC,8OAAC;4BAAI,WAAU;;gCAA6B;gCACjC,MAAM,OAAO;gCAAC;gCAAc,MAAM,aAAa;gCAAC;gCAAW,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS;;;;;;;wBAGjG,uBACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,oNAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;gCACtB;;;;;;;;;;;;;8BAKP,8OAAC;oBAAI,WAAU;8BACZ,YAAY,MAAM,KAAK,kBACtB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,wNAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,8OAAC;;oCAAE;oCAAyB,QAAQ,aAAa;;;;;;;0CACjD,8OAAC;gCAAE,WAAU;0CAAe;;;;;;;;;;;iFAG9B,8OAAC;wBAAI,WAAU;;4BACZ,YAAY,GAAG,CAAC,CAAC,KAAK,sBACrB,8OAAC;oCAEC,WAAW,GACT,IAAI,IAAI,KAAK,SACT,mCACA,wDACL,qCAAqC,CAAC;;sDAEvC,8OAAC;4CAAI,WAAU;sDACZ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,WAAW,CAAC,IAAI,SAAS,GAAG,kBAAkB,EAAE;;;;;;wCAE/E,IAAI,IAAI,KAAK,WAAW,CAAC,IAAI,SAAS,IAAI,2BACzC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,sMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;8DAClB,8OAAC;8DAAK;;;;;;;;;;;;sDAGV,8OAAC;4CAAI,WAAU;;gDACZ,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC;gDAAE,IAAI,SAAS;;;;;;;;mCAjBnD;;;;;0CAqBT,8OAAC;gCAAI,KAAK;;;;;;;;;;;;;;;;;8BAKhB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4BAC1C,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,IAAI;4BACvD,aAAY;4BACZ,WAAU;4BACV,UAAU;;;;;;sCAEZ,8OAAC;4BACC,SAAS;4BACT,UAAU,aAAa,CAAC,QAAQ,IAAI;4BACpC,WAAU;;gCAET,0BACC,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;6FAElB,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;gCAChB;;;;;;;;;;;;;;;;;;;IAMZ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,gMAAA,CAAA,MAAG;4CAAC,WAAU;;;;;;;;;;;kDAEjB,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAmC;;;;;;0DACjD,8OAAC;gDAAE,WAAU;;oDAAwB;oDACK,OAAO,MAAM;oDAAC;oDAAY,UAAU,MAAM;oDAAC;;;;;;;;;;;;;;;;;;;0CAKzF,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS;4CACP,mBAAmB;4CACnB,SAAS;wCACX;wCACA,WAAU;;0DAEV,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAG9B,8OAAC;wCACC,SAAS,IAAM,sBAAsB;wCACrC,WAAU;;0DAEV,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQtC,8OAAC;gBAAI,WAAU;;oBAEZ,uBACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,oNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;0CACvB,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAA2B;;;;;;kDACzC,8OAAC;wCAAE,WAAU;kDAA6B;;;;;;kDAC1C,8OAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;;;;;;;;kCAQP,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS,IAAM,aAAa;oCAC5B,WAAW,GACT,cAAc,WACV,kCACA,uDACL,mFAAmF,CAAC;;sDAErF,8OAAC,gMAAA,CAAA,MAAG;4CAAC,WAAU;;;;;;wCAAY;wCACjB,OAAO,MAAM;wCAAC;;;;;;;8CAE1B,8OAAC;oCACC,SAAS,IAAM,aAAa;oCAC5B,WAAW,GACT,cAAc,cACV,kCACA,uDACL,mFAAmF,CAAC;;sDAErF,8OAAC,gNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;wCAAY;wCACrB,UAAU,MAAM;wCAAC;;;;;;;8CAE/B,8OAAC;oCACC,SAAS,IAAM,aAAa;oCAC5B,WAAW,GACT,cAAc,SACV,kCACA,uDACL,mFAAmF,CAAC;;sDAErF,8OAAC,wNAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;;;;;;;oBAO1C,wBACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC;gCAAK,WAAU;0CAAqB;;;;;;;;;;;iFAGvC;;4BAEG,cAAc,0BACb,8OAAC;gCAAI,WAAU;;oCACZ,OAAO,GAAG,CAAC,CAAA,sBACV,8OAAC;4CAAmB,WAAU;;8DAC5B,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;8EACb,cAAA,8OAAC,gMAAA,CAAA,MAAG;wEAAC,WAAU;;;;;;;;;;;8EAEjB,8OAAC;;sFACC,8OAAC;4EAAG,WAAU;sFAA+B,MAAM,IAAI;;;;;;sFACvD,8OAAC;4EAAE,WAAU;sFAAyB,MAAM,IAAI;;;;;;;;;;;;;;;;;;sEAGpD,8OAAC;4DAAI,WAAU;sEACb,cAAA,8OAAC;gEAAI,WAAW,CAAC,qBAAqB,EACpC,MAAM,MAAM,KAAK,WAAW,iBAAiB,eAC7C;;;;;;;;;;;;;;;;;8DAIN,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,oMAAA,CAAA,QAAK;oEAAC,WAAU;;;;;;8EACjB,8OAAC;;wEAAM,MAAM,aAAa;wEAAC;wEAAI,MAAM,OAAO;;;;;;;;;;;;;sEAE9C,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;8EACpB,8OAAC;;wEAAM,MAAM,KAAK,CAAC,MAAM;wEAAC;;;;;;;;;;;;;sEAE5B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;8EACpB,8OAAC;;wEAAK;wEAAS,MAAM,QAAQ;;;;;;;;;;;;;;;;;;;8DAIjC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DACC,SAAS;gEACP,iBAAiB;gEACjB,oBAAoB;gEACpB,aAAa;gEACb,eAAe,EAAE;gEACjB,SAAS;4DACX;4DACA,WAAU;;8EAEV,8OAAC,kMAAA,CAAA,OAAI;oEAAC,WAAU;;;;;;gEAAY;;;;;;;sEAG9B,8OAAC;4DAAO,WAAU;;8EAChB,8OAAC,0MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;gEAAY;;;;;;;;;;;;;;2CAhD5B,MAAM,EAAE;;;;;oCAuDnB,OAAO,MAAM,KAAK,KAAK,CAAC,yBACvB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,gMAAA,CAAA,MAAG;gDAAC,WAAU;;;;;;0DACf,8OAAC;gDAAG,WAAU;0DAAyC;;;;;;0DAGvD,8OAAC;gDAAE,WAAU;0DAAqB;;;;;;0DAGlC,8OAAC;gDACC,SAAS,IAAM,mBAAmB;gDAClC,WAAU;0DACX;;;;;;;;;;;;;;;;;;4BASR,cAAc,6BACb,8OAAC;gCAAI,WAAU;;oCACZ,UAAU,GAAG,CAAC,CAAA,yBACb,8OAAC;4CAAsB,WAAU;;8DAC/B,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC,gNAAA,CAAA,YAAS;oEAAC,WAAU;;;;;;;;;;;0EAEvB,8OAAC;;kFACC,8OAAC;wEAAG,WAAU;kFAA+B,SAAS,IAAI;;;;;;kFAC1D,8OAAC;wEAAE,WAAU;kFAAyB,SAAS,WAAW;;;;;;;;;;;;;;;;;;;;;;;8DAKhE,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,oMAAA,CAAA,QAAK;oEAAC,WAAU;;;;;;8EACjB,8OAAC;;wEAAM,SAAS,UAAU;wEAAC;;;;;;;;;;;;;sEAE7B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,sNAAA,CAAA,eAAY;oEAAC,WAAU;;;;;;8EACxB,8OAAC;;wEAAK;wEAAO,SAAS,QAAQ;;;;;;;;;;;;;sEAEhC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;8EACpB,8OAAC;;wEAAK;wEAAa,SAAS,QAAQ;;;;;;;;;;;;;;;;;;;8DAIxC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DACC,SAAS;gEACP,oBAAoB;gEACpB,iBAAiB;gEACjB,aAAa;gEACb,eAAe,EAAE;gEACjB,SAAS;4DACX;4DACA,WAAU;;8EAEV,8OAAC,kMAAA,CAAA,OAAI;oEAAC,WAAU;;;;;;gEAAY;;;;;;;sEAG9B,8OAAC;4DAAO,WAAU;;8EAChB,8OAAC,0MAAA,CAAA,WAAQ;oEAAC,WAAU;;;;;;gEAAY;;;;;;;;;;;;;;2CA3C5B,SAAS,EAAE;;;;;oCAkDtB,UAAU,MAAM,KAAK,KAAK,CAAC,yBAC1B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,gNAAA,CAAA,YAAS;gDAAC,WAAU;;;;;;0DACrB,8OAAC;gDAAG,WAAU;0DAAyC;;;;;;0DAGvD,8OAAC;gDAAE,WAAU;0DAAqB;;;;;;0DAGlC,8OAAC;gDACC,SAAS,IAAM,sBAAsB;gDACrC,WAAU;0DACX;;;;;;;;;;;;;;;;;;4BASR,cAAc,wBACb,8OAAC;gCAAI,WAAU;0CACZ,iBAAiB,iCAChB,8OAAC;oCAAc,OAAO;oCAAe,UAAU;;;;;6FAE/C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,wNAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;sDACzB,8OAAC;4CAAG,WAAU;sDAA2C;;;;;;sDAGzD,8OAAC;4CAAE,WAAU;sDAAqB;;;;;;sDAGlC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,SAAS,IAAM,aAAa;oDAC5B,WAAU;;sEAEV,8OAAC,gMAAA,CAAA,MAAG;4DAAC,WAAU;;;;;;wDAAY;;;;;;;8DAG7B,8OAAC;oDACC,SAAS,IAAM,aAAa;oDAC5B,WAAU;;sEAEV,8OAAC,gNAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;wDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAalD,iCAAmB,8OAAC;;;;;;;;;;;AAG3B;uCAEe","debugId":null}},
    {"offset": {"line": 1870, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/AgentTemplates.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Bot,\r\n  FileText,\r\n  Download,\r\n  Upload,\r\n  Star,\r\n  Search,\r\n  Filter,\r\n  Plus,\r\n  Edit,\r\n  Trash2,\r\n  Copy,\r\n  Eye,\r\n  Tag,\r\n  Clock,\r\n  User,\r\n  Zap,\r\n  Brain,\r\n  TrendingUp,\r\n  Code,\r\n  MessageSquare\r\n} from 'lucide-react';\r\n\r\nconst AgentTemplates = () => {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [showCreateTemplate, setShowCreateTemplate] = useState(false);\r\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\r\n  const [templateToEdit, setTemplateToEdit] = useState(null);\r\n\r\n  // Mock data para demonstração\r\n  useEffect(() => {\r\n    setCategories([\r\n      { id: 'all', name: 'Todos', count: 24 },\r\n      { id: 'research', name: 'Pesquisa', count: 8 },\r\n      { id: 'finance', name: 'Financeiro', count: 6 },\r\n      { id: 'marketing', name: 'Marketing', count: 4 },\r\n      { id: 'development', name: 'Desenvolvimento', count: 3 },\r\n      { id: 'support', name: 'Suporte', count: 3 }\r\n    ]);\r\n\r\n    setTemplates([\r\n      {\r\n        id: 'tpl_001',\r\n        name: 'Assistente de Pesquisa Acadêmica',\r\n        description: 'Especializado em pesquisa acadêmica com citações e análise crítica',\r\n        category: 'research',\r\n        author: 'Sistema',\r\n        isPublic: true,\r\n        isFeatured: true,\r\n        rating: 4.8,\r\n        downloads: 2847,\r\n        lastUpdated: '2025-01-28',\r\n        tags: ['pesquisa', 'acadêmico', 'citações'],\r\n        config: {\r\n          modelProvider: 'openai',\r\n          modelId: 'gpt-4o',\r\n          tools: ['duckduckgo', 'reasoning'],\r\n          instructions: [\r\n            'Você é um assistente de pesquisa acadêmica especializado.',\r\n            'Sempre cite suas fontes e forneça análise crítica.',\r\n            'Use formatação acadêmica apropriada.'\r\n          ],\r\n          memoryEnabled: true,\r\n          ragEnabled: true,\r\n          reasoningEnabled: true\r\n        }\r\n      },\r\n      {\r\n        id: 'tpl_002',\r\n        name: 'Analista Financeiro Avançado',\r\n        description: 'Análise financeira completa com dados de mercado em tempo real',\r\n        category: 'finance',\r\n        author: 'user_123',\r\n        isPublic: true,\r\n        isFeatured: true,\r\n        rating: 4.9,\r\n        downloads: 1923,\r\n        lastUpdated: '2025-01-27',\r\n        tags: ['finanças', 'mercado', 'análise'],\r\n        config: {\r\n          modelProvider: 'anthropic',\r\n          modelId: 'claude-3-sonnet',\r\n          tools: ['yfinance', 'reasoning'],\r\n          instructions: [\r\n            'Você é um analista financeiro com expertise em mercados.',\r\n            'Forneça insights detalhados com disclaimers apropriados.',\r\n            'Use gráficos e tabelas para apresentar dados.'\r\n          ],\r\n          memoryEnabled: true,\r\n          ragEnabled: false,\r\n          reasoningEnabled: true\r\n        }\r\n      },\r\n      {\r\n        id: 'tpl_003',\r\n        name: 'Especialista em Marketing Digital',\r\n        description: 'Estratégias de marketing digital e análise de campanhas',\r\n        category: 'marketing',\r\n        author: 'user_456',\r\n        isPublic: true,\r\n        isFeatured: false,\r\n        rating: 4.6,\r\n        downloads: 1456,\r\n        lastUpdated: '2025-01-26',\r\n        tags: ['marketing', 'digital', 'campanhas'],\r\n        config: {\r\n          modelProvider: 'openai',\r\n          modelId: 'gpt-4o-mini',\r\n          tools: ['duckduckgo', 'reasoning'],\r\n          instructions: [\r\n            'Você é um especialista em marketing digital.',\r\n            'Foque em estratégias práticas e mensuráveis.',\r\n            'Considere as últimas tendências e melhores práticas.'\r\n          ],\r\n          memoryEnabled: true,\r\n          ragEnabled: true,\r\n          reasoningEnabled: false\r\n        }\r\n      },\r\n      {\r\n        id: 'tpl_004',\r\n        name: 'Assistente de Código Python',\r\n        description: 'Desenvolvimento e debug de código Python com boas práticas',\r\n        category: 'development',\r\n        author: 'Sistema',\r\n        isPublic: true,\r\n        isFeatured: false,\r\n        rating: 4.7,\r\n        downloads: 3201,\r\n        lastUpdated: '2025-01-25',\r\n        tags: ['python', 'código', 'debug'],\r\n        config: {\r\n          modelProvider: 'openai',\r\n          modelId: 'gpt-4o',\r\n          tools: ['reasoning'],\r\n          instructions: [\r\n            'Você é um assistente de programação Python.',\r\n            'Forneça código limpo e bem documentado.',\r\n            'Explique conceitos complexos de forma simples.'\r\n          ],\r\n          memoryEnabled: true,\r\n          ragEnabled: false,\r\n          reasoningEnabled: true\r\n        }\r\n      }\r\n    ]);\r\n  }, []);\r\n\r\n  const filteredTemplates = templates.filter(template => {\r\n    const matchesCategory = selectedCategory === 'all' || template.category === selectedCategory;\r\n    const matchesSearch = template.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         template.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         template.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    return matchesCategory && matchesSearch;\r\n  });\r\n\r\n  const TemplateCard = ({ template, onView, onEdit, onClone, onUse }) => {\r\n    const categoryColors = {\r\n      research: 'bg-blue-100 text-blue-800',\r\n      finance: 'bg-green-100 text-green-800',\r\n      marketing: 'bg-purple-100 text-purple-800',\r\n      development: 'bg-orange-100 text-orange-800',\r\n      support: 'bg-gray-100 text-gray-800'\r\n    };\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\">\r\n        {/* Header */}\r\n        <div className=\"flex items-start justify-between mb-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg text-white\">\r\n              <Bot className=\"w-5 h-5\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 flex items-center gap-2\">\r\n                {template.name}\r\n                {template.isFeatured && (\r\n                  <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\r\n                )}\r\n              </h3>\r\n              <div className=\"flex items-center gap-2 text-xs text-gray-500\">\r\n                <User className=\"w-3 h-3\" />\r\n                <span>{template.author}</span>\r\n                <span>•</span>\r\n                <Clock className=\"w-3 h-3\" />\r\n                <span>{template.lastUpdated}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-1\">\r\n            <button\r\n              onClick={() => onView(template)}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600\"\r\n              title=\"Ver detalhes\"\r\n            >\r\n              <Eye className=\"w-4 h-4\" />\r\n            </button>\r\n            <button\r\n              onClick={() => onEdit(template)}\r\n              className=\"p-1 text-gray-400 hover:text-blue-600\"\r\n              title=\"Editar\"\r\n            >\r\n              <Edit className=\"w-4 h-4\" />\r\n            </button>\r\n            <button\r\n              onClick={() => onClone(template)}\r\n              className=\"p-1 text-gray-400 hover:text-green-600\"\r\n              title=\"Clonar\"\r\n            >\r\n              <Copy className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Descrição */}\r\n        <p className=\"text-sm text-gray-600 mb-4 line-clamp-2\">\r\n          {template.description}\r\n        </p>\r\n\r\n        {/* Tags e Categoria */}\r\n        <div className=\"flex items-center gap-2 mb-4\">\r\n          <span className={`px-2 py-1 text-xs font-medium rounded-full ${categoryColors[template.category]}`}>\r\n            {categories.find(c => c.id === template.category)?.name}\r\n          </span>\r\n          {template.tags.slice(0, 2).map(tag => (\r\n            <span key={tag} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded\">\r\n              {tag}\r\n            </span>\r\n          ))}\r\n          {template.tags.length > 2 && (\r\n            <span className=\"text-xs text-gray-400\">+{template.tags.length - 2}</span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Configurações */}\r\n        <div className=\"flex items-center gap-4 text-xs text-gray-500 mb-4\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Brain className=\"w-3 h-3\" />\r\n            <span>{template.config.modelId}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <Zap className=\"w-3 h-3\" />\r\n            <span>{template.config.tools.length} tools</span>\r\n          </div>\r\n          {template.config.reasoningEnabled && (\r\n            <div className=\"flex items-center gap-1 text-purple-500\">\r\n              <TrendingUp className=\"w-3 h-3\" />\r\n              <span>Reasoning</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Stats */}\r\n        <div className=\"flex items-center justify-between text-xs text-gray-500 mb-4\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <span>⭐ {template.rating}</span>\r\n            <span>📥 {template.downloads.toLocaleString()}</span>\r\n          </div>\r\n          {template.isPublic && (\r\n            <span className=\"bg-green-100 text-green-600 px-2 py-1 rounded\">\r\n              Público\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={() => onUse(template)}\r\n            className=\"flex-1 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 flex items-center justify-center gap-2\"\r\n          >\r\n            <Plus className=\"w-4 h-4\" />\r\n            Usar Template\r\n          </button>\r\n          <button\r\n            onClick={() => onView(template)}\r\n            className=\"px-3 py-2 border border-gray-300 text-gray-700 text-sm rounded-lg hover:bg-gray-50\"\r\n          >\r\n            Visualizar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const TemplateModal = ({ temple, onClose, onUse }) => {\r\n    if (!temple) return null;\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <div className=\"flex justify-between items-start mb-6\">\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\r\n                {temple.name}\r\n                {temple.isFeatured && (\r\n                  <Star className=\"w-5 h-5 text-yellow-500 fill-current\" />\r\n                )}\r\n              </h2>\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-500 mt-1\">\r\n                <User className=\"w-4 h-4\" />\r\n                <span>Por {temple.author}</span>\r\n                <span>•</span>\r\n                <span>⭐ {temple.rating}</span>\r\n                <span>•</span>\r\n                <span>📥 {temple.downloads.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {/* Descrição */}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Descrição</h3>\r\n              <p className=\"text-gray-600\">{temple.description}</p>\r\n            </div>\r\n\r\n            {/* Tags */}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Tags</h3>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {temple.tags.map(tag => (\r\n                  <span key={tag} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded\">\r\n                    {tag}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Configuração */}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Configuração</h3>\r\n              <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <span className=\"text-sm font-medium text-gray-700\">Modelo:</span>\r\n                    <div className=\"text-sm text-gray-600\">{temple.config.modelProvider} - {temple.config.modelId}</div>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-sm font-medium text-gray-700\">Ferramentas:</span>\r\n                    <div className=\"text-sm text-gray-600\">{temple.config.tools.join(', ')}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <span className=\"text-sm font-medium text-gray-700\">Funcionalidades:</span>\r\n                  <div className=\"flex gap-2 mt-1\">\r\n                    {temple.config.memoryEnabled && (\r\n                      <span className=\"px-2 py-1 text-xs bg-blue-100 text-blue-600 rounded\">Memória</span>\r\n                    )}\r\n                    {temple.config.ragEnabled && (\r\n                      <span className=\"px-2 py-1 text-xs bg-green-100 text-green-600 rounded\">RAG</span>\r\n                    )}\r\n                    {temple.config.reasoningEnabled && (\r\n                      <span className=\"px-2 py-1 text-xs bg-purple-100 text-purple-600 rounded\">Reasoning</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <span className=\"text-sm font-medium text-gray-700\">Instruções:</span>\r\n                  <div className=\"mt-1 space-y-1\">\r\n                    {temple.config.instructions.map((instruction, index) => (\r\n                      <div key={index} className=\"text-sm text-gray-600 bg-white p-2 rounded border\">\r\n                        {instruction}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n            >\r\n              Fechar\r\n            </button>\r\n            <button\r\n              onClick={() => onUse(temple)}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n            >\r\n              <Plus className=\"w-4 h-4\" />\r\n              Usar Template\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CreateTemplateModal = ({ onClose, onSave }) => {\r\n    const [formData, setFormData] = useState({\r\n      name: '',\r\n      description: '',\r\n      category: 'research',\r\n      tags: [],\r\n      isPublic: false,\r\n      config: {\r\n        modelProvider: 'openai',\r\n        modelId: 'gpt-4o',\r\n        tools: [],\r\n        instructions: [''],\r\n        memoryEnabled: true,\r\n        ragEnabled: false,\r\n        reasoningEnabled: false\r\n      }\r\n    });\r\n\r\n    const [tagInput, setTagInput] = useState('');\r\n\r\n    const addTag = () => {\r\n      if (tagInput.trim() && !formData.tags.includes(tagInput.trim())) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          tags: [...prev.tags, tagInput.trim()]\r\n        }));\r\n        setTagInput('');\r\n      }\r\n    };\r\n\r\n    const removeTag = (tagToRemove) => {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n      }));\r\n    };\r\n\r\n    const handleSave = () => {\r\n      console.log('Salvando template:', formData);\r\n      onSave(formData);\r\n      onClose();\r\n    };\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-6 flex items-center gap-2\">\r\n            <FileText className=\"w-6 h-6\" />\r\n            Criar Template de Agente\r\n          </h2>\r\n\r\n          <div className=\"space-y-6\">\r\n            {/* Informações básicas */}\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Nome do Template\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Assistente de Marketing\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Categoria\r\n                </label>\r\n                <select\r\n                  value={formData.category}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value }))}\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"research\">Pesquisa</option>\r\n                  <option value=\"finance\">Financeiro</option>\r\n                  <option value=\"marketing\">Marketing</option>\r\n                  <option value=\"development\">Desenvolvimento</option>\r\n                  <option value=\"support\">Suporte</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Descrição\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                rows=\"3\"\r\n                placeholder=\"Descreva o propósito e funcionalidades do template...\"\r\n              />\r\n            </div>\r\n\r\n            {/* Tags */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Tags\r\n              </label>\r\n              <div className=\"flex gap-2 mb-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={tagInput}\r\n                  onChange={(e) => setTagInput(e.target.value)}\r\n                  onKeyPress={(e) => e.key === 'Enter' && addTag()}\r\n                  className=\"flex-1 p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Digite uma tag e pressione Enter\"\r\n                />\r\n                <button\r\n                  onClick={addTag}\r\n                  className=\"px-3 py-2 bg-gray-100 text-gray-700 rounded hover:bg-gray-200\"\r\n                >\r\n                  <Plus className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {formData.tags.map(tag => (\r\n                  <span key={tag} className=\"flex items-center gap-1 px-2 py-1 text-xs bg-blue-100 text-blue-600 rounded\">\r\n                    {tag}\r\n                    <button\r\n                      onClick={() => removeTag(tag)}\r\n                      className=\"text-blue-400 hover:text-blue-600\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Configuração do modelo */}\r\n            <div className=\"bg-gray-50 rounded-lg p-4\">\r\n              <h3 className=\"font-semibold text-gray-900 mb-4\">Configuração do Agente</h3>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Provedor\r\n                  </label>\r\n                  <select\r\n                    value={formData.config.modelProvider}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, modelProvider: e.target.value }\r\n                    }))}\r\n                    className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"openai\">OpenAI</option>\r\n                    <option value=\"anthropic\">Anthropic</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Modelo\r\n                  </label>\r\n                  <select\r\n                    value={formData.config.modelId}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, modelId: e.target.value }\r\n                    }))}\r\n                    className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    {formData.config.modelProvider === 'openai' ? (\r\n                      <>\r\n                        <option value=\"gpt-4o\">GPT-4o</option>\r\n                        <option value=\"gpt-4o-mini\">GPT-4o Mini</option>\r\n                        <option value=\"gpt-3.5-turbo\">GPT-3.5 Turbo</option>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <option value=\"claude-3-opus\">Claude 3 Opus</option>\r\n                        <option value=\"claude-3-sonnet\">Claude 3 Sonnet</option>\r\n                        <option value=\"claude-3-haiku\">Claude 3 Haiku</option>\r\n                      </>\r\n                    )}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Ferramentas\r\n                </label>\r\n                <div className=\"grid grid-cols-3 gap-2\">\r\n                  {['duckduckgo', 'yfinance', 'reasoning'].map(tool => (\r\n                    <label key={tool} className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={formData.config.tools.includes(tool)}\r\n                        onChange={(e) => {\r\n                          const tools = e.target.checked\r\n                            ? [...formData.config.tools, tool]\r\n                            : formData.config.tools.filter(t => t !== tool);\r\n                          setFormData(prev => ({\r\n                            ...prev,\r\n                            config: { ...prev.config, tools }\r\n                          }));\r\n                        }}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <span className=\"text-sm capitalize\">{tool}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Instruções do Agente\r\n                </label>\r\n                <textarea\r\n                  value={formData.config.instructions[0]}\r\n                  onChange={(e) => setFormData(prev => ({\r\n                    ...prev,\r\n                    config: { ...prev.config, instructions: [e.target.value] }\r\n                  }))}\r\n                  className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Descreva como o agente deve se comportar...\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-6\">\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.config.memoryEnabled}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, memoryEnabled: e.target.checked }\r\n                    }))}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm font-medium\">Habilitar Memória</span>\r\n                </label>\r\n\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.config.ragEnabled}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, ragEnabled: e.target.checked }\r\n                    }))}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm font-medium\">Habilitar RAG</span>\r\n                </label>\r\n\r\n                <label className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.config.reasoningEnabled}\r\n                    onChange={(e) => setFormData(prev => ({\r\n                      ...prev,\r\n                      config: { ...prev.config, reasoningEnabled: e.target.checked }\r\n                    }))}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm font-medium\">Habilitar Reasoning</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Visibilidade */}\r\n            <div>\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.isPublic}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, isPublic: e.target.checked }))}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Tornar template público</span>\r\n                <span className=\"text-xs text-gray-500 ml-2\">(outros usuários poderão usar)</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              onClick={handleSave}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\r\n            >\r\n              <FileText className=\"w-4 h-4\" />\r\n              Criar Template\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleUseTemplate = (template) => {\r\n    console.log('Usando template:', template);\r\n    // Aqui navegaria para o criador de agente com o template pré-preenchido\r\n  };\r\n\r\n  const handleCloneTemplate = (template) => {\r\n    console.log('Clonando template:', template);\r\n    // Criar uma cópia do template para edição\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg text-white\">\r\n                <FileText className=\"w-6 h-6\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Templates de Agentes</h1>\r\n                <p className=\"text-sm text-gray-500\">Crie e use templates para acelerar o desenvolvimento</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-3\">\r\n              <button className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                <Upload className=\"w-4 h-4\" />\r\n                Importar\r\n              </button>\r\n              <button\r\n                onClick={() => setShowCreateTemplate(true)}\r\n                className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:opacity-90 flex items-center gap-2\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                Novo Template\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Filtros */}\r\n        <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar templates...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex gap-2 overflow-x-auto\">\r\n            {categories.map(category => (\r\n              <button\r\n                key={category.id}\r\n                onClick={() => setSelectedCategory(category.id)}\r\n                className={`whitespace-nowrap px-4 py-2 text-sm font-medium rounded-lg transition-colors ${\r\n                  selectedCategory === category.id\r\n                    ? 'bg-blue-100 text-blue-700'\r\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\r\n                } border border-gray-200`}\r\n              >\r\n                {category.name} ({category.count})\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Grid de templates */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredTemplates.map(template => (\r\n            <TemplateCard\r\n              key={template.id}\r\n              template={template}\r\n              onView={setSelectedTemplate}\r\n              onEdit={setTemplateToEdit}\r\n              onClone={handleCloneTemplate}\r\n              onUse={handleUseTemplate}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {filteredTemplates.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <FileText className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n              Nenhum template encontrado\r\n            </h3>\r\n            <p className=\"text-gray-500 mb-4\">\r\n              Tente ajustar os filtros ou criar um novo template.\r\n            </p>\r\n            <button\r\n              onClick={() => setShowCreateTemplate(true)}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n            >\r\n              Criar Primeiro Template\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {selectedTemplate && (\r\n        <TemplateModal\r\n          temple={selectedTemplate}\r\n          onClose={() => setSelectedTemplate(null)}\r\n          onUse={handleUseTemplate}\r\n        />\r\n      )}\r\n\r\n      {showCreateTemplate && (\r\n        <CreateTemplateModal\r\n          onClose={() => setShowCreateTemplate(false)}\r\n          onSave={(templateData) => {\r\n            // Aqui salvaria o template via API\r\n            console.log('Template criado:', templateData);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentTemplates;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3888, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/WorkflowBuilder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport {\r\n  Bot,\r\n  Plus,\r\n  Trash2,\r\n  Settings,\r\n  ArrowRight,\r\n  GitBranch,\r\n  Play,\r\n  Save,\r\n  Zap,\r\n  ChevronDown,\r\n  Move,\r\n  Copy\r\n} from 'lucide-react';\r\n\r\nconst WorkflowBuilder = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [connections, setConnections] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [draggedNode, setDraggedNode] = useState(null);\r\n  const [workflowConfig, setWorkflowConfig] = useState({\r\n    name: 'Novo Workflow',\r\n    description: '',\r\n    flowType: 'sequential'\r\n  });\r\n  const [showNodeConfig, setShowNodeConfig] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\r\n\r\n  const nodeTypes = [\r\n    {\r\n      id: 'agent',\r\n      name: 'AI Agent',\r\n      icon: Bot,\r\n      color: 'bg-blue-500',\r\n      description: 'Agente individual com tools específicas'\r\n    },\r\n    {\r\n      id: 'condition',\r\n      name: 'Condição',\r\n      icon: GitBranch,\r\n      color: 'bg-yellow-500',\r\n      description: 'Lógica condicional no workflow'\r\n    },\r\n    {\r\n      id: 'parallel',\r\n      name: 'Paralelo',\r\n      icon: Zap,\r\n      color: 'bg-green-500',\r\n      description: 'Execução paralela de agentes'\r\n    }\r\n  ];\r\n\r\n  const addNode = (type, position = null) => {\r\n    const newNode = {\r\n      id: `node_${Date.now()}`,\r\n      type: type.id,\r\n      name: `${type.name} ${nodes.length + 1}`,\r\n      position: position || {\r\n        x: Math.random() * 400 + 100,\r\n        y: Math.random() * 300 + 100\r\n      },\r\n      config: {\r\n        modelProvider: 'openai',\r\n        modelId: 'gpt-4o',\r\n        tools: [],\r\n        instructions: [''],\r\n        role: ''\r\n      },\r\n      ...type\r\n    };\r\n\r\n    setNodes(prev => [...prev, newNode]);\r\n    setSelectedNode(newNode);\r\n    setShowNodeConfig(true);\r\n  };\r\n\r\n  const deleteNode = (nodeId) => {\r\n    setNodes(prev => prev.filter(n => n.id !== nodeId));\r\n    setConnections(prev => prev.filter(c => c.from !== nodeId && c.to !== nodeId));\r\n    if (selectedNode?.id === nodeId) {\r\n      setSelectedNode(null);\r\n      setShowNodeConfig(false);\r\n    }\r\n  };\r\n\r\n  const connectNodes = (fromId, toId) => {\r\n    const exists = connections.some(c => c.from === fromId && c.to === toId);\r\n    if (!exists && fromId !== toId) {\r\n      setConnections(prev => [...prev, { from: fromId, to: toId, id: `conn_${Date.now()}` }]);\r\n    }\r\n  };\r\n\r\n  const NodeComponent = ({ node, isSelected, onSelect, onDrag, onConnect }) => {\r\n    const IconComponent = node.icon;\r\n\r\n    return (\r\n      <div\r\n        className={`absolute cursor-move select-none ${isSelected ? 'z-20' : 'z-10'}`}\r\n        style={{ left: node.position.x, top: node.position.y }}\r\n        onMouseDown={(e) => onDrag(e, node)}\r\n        onClick={() => onSelect(node)}\r\n      >\r\n        <div\r\n          className={`\r\n            w-32 p-3 rounded-lg shadow-lg border-2 transition-all\r\n            ${isSelected \r\n              ? 'border-blue-500 shadow-xl' \r\n              : 'border-gray-200 hover:border-gray-300'\r\n            }\r\n            bg-white\r\n          `}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <div className={`p-1 rounded ${node.color} text-white`}>\r\n              <IconComponent className=\"w-4 h-4\" />\r\n            </div>\r\n            <span className=\"text-xs font-medium truncate\">{node.name}</span>\r\n          </div>\r\n\r\n          <div className=\"text-xs text-gray-500 mb-2\">\r\n            {node.type === 'agent' && `${node.config.modelId}`}\r\n            {node.type === 'condition' && 'If/Else Logic'}\r\n            {node.type === 'parallel' && 'Parallel Exec'}\r\n          </div>\r\n\r\n          <div className=\"flex justify-between items-center\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setSelectedNode(node);\r\n                setShowNodeConfig(true);\r\n              }}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <Settings className=\"w-3 h-3\" />\r\n            </button>\r\n\r\n            <div className=\"flex gap-1\">\r\n              <div\r\n                className=\"w-2 h-2 bg-green-400 rounded-full cursor-pointer hover:bg-green-500\"\r\n                title=\"Conectar saída\"\r\n                onMouseDown={(e) => {\r\n                  e.stopPropagation();\r\n                  // Lógica para iniciar conexão\r\n                }}\r\n              />\r\n              <div\r\n                className=\"w-2 h-2 bg-red-400 rounded-full cursor-pointer hover:bg-red-500\"\r\n                title=\"Conectar entrada\"\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                deleteNode(node.id);\r\n              }}\r\n              className=\"p-1 text-gray-400 hover:text-red-600\"\r\n            >\r\n              <Trash2 className=\"w-3 h-3\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ConnectionComponent = ({ connection }) => {\r\n    const fromNode = nodes.find(n => n.id === connection.from);\r\n    const toNode = nodes.find(n => n.id === connection.to);\r\n\r\n    if (!fromNode || !toNode) return null;\r\n\r\n    const startX = fromNode.position.x + 64; // Centro do nó\r\n    const startY = fromNode.position.y + 32;\r\n    const endX = toNode.position.x + 64;\r\n    const endY = toNode.position.y + 32;\r\n\r\n    return (\r\n      <svg className=\"absolute inset-0 pointer-events-none z-0\">\r\n        <defs>\r\n          <marker\r\n            id=\"arrowhead\"\r\n            markerWidth=\"10\"\r\n            markerHeight=\"7\"\r\n            refX=\"9\"\r\n            refY=\"3.5\"\r\n            orient=\"auto\"\r\n          >\r\n            <polygon\r\n              points=\"0 0, 10 3.5, 0 7\"\r\n              fill=\"#6b7280\"\r\n            />\r\n          </marker>\r\n        </defs>\r\n        <path\r\n          d={`M ${startX} ${startY} Q ${(startX + endX) / 2} ${startY - 50} ${endX} ${endY}`}\r\n          stroke=\"#6b7280\"\r\n          strokeWidth=\"2\"\r\n          fill=\"none\"\r\n          markerEnd=\"url(#arrowhead)\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  const NodeConfigPanel = () => {\r\n    if (!selectedNode) return null;\r\n\r\n    const updateNodeConfig = (updates) => {\r\n      setNodes(prev => prev.map(node =>\r\n        node.id === selectedNode.id\r\n          ? { ...node, config: { ...node.config, ...updates } }\r\n          : node\r\n      ));\r\n      setSelectedNode(prev => ({ ...prev, config: { ...prev.config, ...updates } }));\r\n    };\r\n\r\n    const updateNodeName = (name) => {\r\n      setNodes(prev => prev.map(node =>\r\n        node.id === selectedNode.id ? { ...node, name } : node\r\n      ));\r\n      setSelectedNode(prev => ({ ...prev, name }));\r\n    };\r\n\r\n    return (\r\n      <div className=\"w-80 bg-white border-l border-gray-200 p-4 overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"font-semibold text-gray-900\">Configurar Nó</h3>\r\n          <button\r\n            onClick={() => setShowNodeConfig(false)}\r\n            className=\"p-1 text-gray-400 hover:text-gray-600\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Nome do Nó\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={selectedNode.name}\r\n              onChange={(e) => updateNodeName(e.target.value)}\r\n              className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n\r\n          {selectedNode.type === 'agent' && (\r\n            <>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Papel/Função\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={selectedNode.config.role}\r\n                  onChange={(e) => updateNodeConfig({ role: e.target.value })}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  placeholder=\"Ex: Marketing Specialist\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Provedor\r\n                  </label>\r\n                  <select\r\n                    value={selectedNode.config.modelProvider}\r\n                    onChange={(e) => updateNodeConfig({ modelProvider: e.target.value })}\r\n                    className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"openai\">OpenAI</option>\r\n                    <option value=\"anthropic\">Anthropic</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Modelo\r\n                  </label>\r\n                  <select\r\n                    value={selectedNode.config.modelId}\r\n                    onChange={(e) => updateNodeConfig({ modelId: e.target.value })}\r\n                    className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    {selectedNode.config.modelProvider === 'openai' ? (\r\n                      <>\r\n                        <option value=\"gpt-4o\">GPT-4o</option>\r\n                        <option value=\"gpt-4o-mini\">GPT-4o Mini</option>\r\n                        <option value=\"gpt-3.5-turbo\">GPT-3.5 Turbo</option>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <option value=\"claude-3-opus\">Claude 3 Opus</option>\r\n                        <option value=\"claude-3-sonnet\">Claude 3 Sonnet</option>\r\n                        <option value=\"claude-3-haiku\">Claude 3 Haiku</option>\r\n                      </>\r\n                    )}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Instruções\r\n                </label>\r\n                <textarea\r\n                  value={selectedNode.config.instructions[0] || ''}\r\n                  onChange={(e) => updateNodeConfig({ instructions: [e.target.value] })}\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  rows=\"3\"\r\n                  placeholder=\"Descreva como este agente deve se comportar...\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Ferramentas\r\n                </label>\r\n                <div className=\"space-y-2\">\r\n                  {['duckduckgo', 'yfinance', 'reasoning'].map(tool => (\r\n                    <label key={tool} className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedNode.config.tools.includes(tool)}\r\n                        onChange={(e) => {\r\n                          const tools = e.target.checked\r\n                            ? [...selectedNode.config.tools, tool]\r\n                            : selectedNode.config.tools.filter(t => t !== tool);\r\n                          updateNodeConfig({ tools });\r\n                        }}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      <span className=\"text-sm capitalize\">{tool}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {selectedNode.type === 'condition' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Condição\r\n              </label>\r\n              <textarea\r\n                value={selectedNode.config.condition || ''}\r\n                onChange={(e) => updateNodeConfig({ condition: e.target.value })}\r\n                className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                rows=\"3\"\r\n                placeholder=\"Defina a lógica condicional...\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex gap-2 mt-6 pt-4 border-t\">\r\n          <button\r\n            onClick={() => {\r\n              const newNode = { ...selectedNode, id: `node_${Date.now()}` };\r\n              newNode.position.x += 50;\r\n              newNode.position.y += 50;\r\n              setNodes(prev => [...prev, newNode]);\r\n            }}\r\n            className=\"flex-1 px-3 py-2 bg-gray-100 text-gray-700 text-sm rounded hover:bg-gray-200 flex items-center justify-center gap-2\"\r\n          >\r\n            <Copy className=\"w-3 h-3\" />\r\n            Duplicar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleCanvasMouseDown = (e) => {\r\n    if (e.target === canvasRef.current) {\r\n      setSelectedNode(null);\r\n      setShowNodeConfig(false);\r\n    }\r\n  };\r\n\r\n  const handleNodeDrag = (e, node) => {\r\n    e.preventDefault();\r\n    setDraggedNode(node);\r\n\r\n    const handleMouseMove = (e) => {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const newX = e.clientX - rect.left - canvasOffset.x - 64;\r\n      const newY = e.clientY - rect.top - canvasOffset.y - 32;\r\n\r\n      setNodes(prev => prev.map(n =>\r\n        n.id === node.id\r\n          ? { ...n, position: { x: Math.max(0, newX), y: Math.max(0, newY) } }\r\n          : n\r\n      ));\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setDraggedNode(null);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  };\r\n\r\n  const saveWorkflow = async () => {\r\n    const workflowData = {\r\n      ...workflowConfig,\r\n      nodes: nodes.map(node => ({\r\n        id: node.id,\r\n        type: node.type,\r\n        name: node.name,\r\n        position: node.position,\r\n        config: node.config\r\n      })),\r\n      connections: connections\r\n    };\r\n\r\n    console.log('Salvando workflow:', workflowData);\r\n    // Aqui faria a chamada para a API\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen bg-gray-50 flex\">\r\n      {/* Toolbar */}\r\n      <div className=\"w-64 bg-white border-r border-gray-200 p-4\">\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">Workflow Builder</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={workflowConfig.name}\r\n            onChange={(e) => setWorkflowConfig(prev => ({ ...prev, name: e.target.value }))}\r\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Nome do workflow\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Adicionar Nós</h3>\r\n          <div className=\"space-y-2\">\r\n            {nodeTypes.map(type => {\r\n              const IconComponent = type.icon;\r\n              return (\r\n                <button\r\n                  key={type.id}\r\n                  onClick={() => addNode(type)}\r\n                  className=\"w-full p-3 border border-gray-200 rounded-lg hover:bg-gray-50 flex items-center gap-3 text-left\"\r\n                >\r\n                  <div className={`p-2 rounded ${type.color} text-white`}>\r\n                    <IconComponent className=\"w-4 h-4\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"font-medium text-sm\">{type.name}</div>\r\n                    <div className=\"text-xs text-gray-500\">{type.description}</div>\r\n                  </div>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Tipo de Fluxo</h3>\r\n          <select\r\n            value={workflowConfig.flowType}\r\n            onChange={(e) => setWorkflowConfig(prev => ({ ...prev, flowType: e.target.value }))}\r\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"sequential\">Sequencial</option>\r\n            <option value=\"parallel\">Paralelo</option>\r\n            <option value=\"conditional\">Condicional</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-2\">\r\n          <button\r\n            onClick={saveWorkflow}\r\n            className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center justify-center gap-2\"\r\n          >\r\n            <Save className=\"w-4 h-4\" />\r\n            Salvar Workflow\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => console.log('Testar workflow')}\r\n            className=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center justify-center gap-2\"\r\n          >\r\n            <Play className=\"w-4 h-4\" />\r\n            Testar\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Canvas */}\r\n      <div className=\"flex-1 relative overflow-hidden\">\r\n        <div\r\n          ref={canvasRef}\r\n          className=\"w-full h-full bg-gray-100 relative cursor-default\"\r\n          onMouseDown={handleCanvasMouseDown}\r\n          style={{\r\n            backgroundImage: `\r\n              radial-gradient(circle, #d1d5db 1px, transparent 1px)\r\n            `,\r\n            backgroundSize: '20px 20px'\r\n          }}\r\n        >\r\n          {/* Connections */}\r\n          {connections.map(connection => (\r\n            <ConnectionComponent key={connection.id} connection={connection} />\r\n          ))}\r\n\r\n          {/* Nodes */}\r\n          {nodes.map(node => (\r\n            <NodeComponent\r\n              key={node.id}\r\n              node={node}\r\n              isSelected={selectedNode?.id === node.id}\r\n              onSelect={setSelectedNode}\r\n              onDrag={handleNodeDrag}\r\n              onConnect={connectNodes}\r\n            />\r\n          ))}\r\n\r\n          {nodes.length === 0 && (\r\n            <div className=\"absolute inset-0 flex items-center justify-center\">\r\n              <div className=\"text-center text-gray-500\">\r\n                <GitBranch className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">Canvas Vazia</h3>\r\n                <p className=\"text-sm\">Adicione nós da barra lateral para começar a construir seu workflow</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Config Panel */}\r\n      {showNodeConfig && <NodeConfigPanel />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkflowBuilder;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4979, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/components/AgnoMonitoring.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Activity,\r\n  Clock,\r\n  Zap,\r\n  TrendingUp,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  RefreshCw,\r\n  Download,\r\n  Filter,\r\n  Search,\r\n  Calendar,\r\n  User,\r\n  Bot,\r\n  GitBranch\r\n} from 'lucide-react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, BarChart, Bar } from 'recharts';\r\n\r\nconst AgnoMonitoring = () => {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [timeRange, setTimeRange] = useState('24h');\r\n  const [filterAgent, setFilterAgent] = useState('all');\r\n  const [sessions, setSessions] = useState([]);\r\n  const [metrics, setMetrics] = useState({});\r\n  const [performanceData, setPerformanceData] = useState([]);\r\n  const [usageData, setUsageData] = useState([]);\r\n\r\n  // Mock data para demonstração\r\n  useEffect(() => {\r\n    // Métricas gerais\r\n    setMetrics({\r\n      totalSessions: 156,\r\n      successRate: 94.2,\r\n      avgResponseTime: 2.3,\r\n      totalTokens: 45678,\r\n      activeAgents: 8,\r\n      totalWorkflows: 3,\r\n      costToday: 12.45,\r\n      errorsToday: 3\r\n    });\r\n\r\n    // Dados de performance ao longo do tempo\r\n    setPerformanceData([\r\n      { time: '00:00', responseTime: 1.8, tokens: 1200, sessions: 12, errors: 0 },\r\n      { time: '04:00', responseTime: 2.1, tokens: 890, sessions: 8, errors: 1 },\r\n      { time: '08:00', responseTime: 2.8, tokens: 2100, sessions: 25, errors: 0 },\r\n      { time: '12:00', responseTime: 3.2, tokens: 3400, sessions: 35, errors: 1 },\r\n      { time: '16:00', responseTime: 2.9, tokens: 2800, sessions: 28, errors: 0 },\r\n      { time: '20:00', responseTime: 2.4, tokens: 1950, sessions: 22, errors: 1 }\r\n    ]);\r\n\r\n    // Uso por agente\r\n    setUsageData([\r\n      { name: 'Assistente de Pesquisa', sessions: 45, tokens: 12000, avgTime: 2.1, success: 96 },\r\n      { name: 'Analista Financeiro', sessions: 38, tokens: 15000, avgTime: 3.2, success: 92 },\r\n      { name: 'Marketing Specialist', sessions: 32, tokens: 8500, avgTime: 1.8, success: 98 },\r\n      { name: 'Workflow Completo', sessions: 25, tokens: 18000, avgTime: 4.5, success: 88 },\r\n      { name: 'Support Agent', sessions: 16, tokens: 6200, avgTime: 1.5, success: 100 }\r\n    ]);\r\n\r\n    // Sessões recentes\r\n    setSessions([\r\n      {\r\n        id: 'sess_001',\r\n        agent: 'Assistente de Pesquisa',\r\n        user: 'user_123',\r\n        startTime: '2025-01-28 14:30:25',\r\n        duration: 125,\r\n        tokens: 1250,\r\n        status: 'success',\r\n        messages: 8,\r\n        cost: 0.15\r\n      },\r\n      {\r\n        id: 'sess_002',\r\n        agent: 'Analista Financeiro',\r\n        user: 'user_456',\r\n        startTime: '2025-01-28 14:28:10',\r\n        duration: 203,\r\n        tokens: 2100,\r\n        status: 'success',\r\n        messages: 12,\r\n        cost: 0.28\r\n      },\r\n      {\r\n        id: 'sess_003',\r\n        agent: 'Marketing Specialist',\r\n        user: 'user_789',\r\n        startTime: '2025-01-28 14:25:45',\r\n        duration: 95,\r\n        tokens: 890,\r\n        status: 'error',\r\n        messages: 5,\r\n        cost: 0.09,\r\n        error: 'Rate limit exceeded'\r\n      }\r\n    ]);\r\n  }, []);\r\n\r\n  const MetricCard = ({ title, value, subtitle, icon: Icon, trend, color = 'blue' }) => {\r\n    const colorClasses = {\r\n      blue: 'bg-blue-50 text-blue-600',\r\n      green: 'bg-green-50 text-green-600',\r\n      yellow: 'bg-yellow-50 text-yellow-600',\r\n      red: 'bg-red-50 text-red-600'\r\n    };\r\n\r\n    return (\r\n      <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm text-gray-600 mb-1\">{title}</p>\r\n            <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\r\n            {subtitle && (\r\n              <p className=\"text-sm text-gray-500 mt-1\">{subtitle}</p>\r\n            )}\r\n          </div>\r\n          <div className={`p-3 rounded-lg ${colorClasses[color]}`}>\r\n            <Icon className=\"w-6 h-6\" />\r\n          </div>\r\n        </div>\r\n        {trend && (\r\n          <div className=\"mt-4 flex items-center\">\r\n            <TrendingUp className={`w-4 h-4 mr-1 ${trend > 0 ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className={`text-sm font-medium ${trend > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n              {trend > 0 ? '+' : ''}{trend}%\r\n            </span>\r\n            <span className=\"text-sm text-gray-500 ml-1\">vs ontem</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SessionRow = ({ session }) => {\r\n    const statusColor = {\r\n      success: 'text-green-600 bg-green-50',\r\n      error: 'text-red-600 bg-red-50',\r\n      timeout: 'text-yellow-600 bg-yellow-50'\r\n    };\r\n\r\n    const StatusIcon = {\r\n      success: CheckCircle,\r\n      error: XCircle,\r\n      timeout: AlertTriangle\r\n    }[session.status];\r\n\r\n    return (\r\n      <tr className=\"hover:bg-gray-50\">\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          <div className=\"flex items-center\">\r\n            <div className={`p-1 rounded-full ${statusColor[session.status]} mr-3`}>\r\n              <StatusIcon className=\"w-4 h-4\" />\r\n            </div>\r\n            <div>\r\n              <div className=\"text-sm font-medium text-gray-900\">{session.id}</div>\r\n              <div className=\"text-sm text-gray-500\">{session.startTime}</div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          <div className=\"flex items-center\">\r\n            <Bot className=\"w-4 h-4 text-blue-500 mr-2\" />\r\n            <span className=\"text-sm text-gray-900\">{session.agent}</span>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          <div className=\"flex items-center\">\r\n            <User className=\"w-4 h-4 text-gray-400 mr-2\" />\r\n            <span className=\"text-sm text-gray-900\">{session.user}</span>\r\n          </div>\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          {session.duration}s\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          {session.tokens.toLocaleString()}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          {session.messages}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n          ${session.cost.toFixed(3)}\r\n        </td>\r\n        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n          {session.error && (\r\n            <div className=\"text-xs text-red-600 bg-red-50 px-2 py-1 rounded\">\r\n              {session.error}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n                <Activity className=\"w-6 h-6 text-purple-600\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">Monitoramento Agno</h1>\r\n                <p className=\"text-sm text-gray-500\">Performance e analytics dos seus agentes AI</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-3\">\r\n              <select\r\n                value={timeRange}\r\n                onChange={(e) => setTimeRange(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"1h\">Última hora</option>\r\n                <option value=\"24h\">Últimas 24h</option>\r\n                <option value=\"7d\">Últimos 7 dias</option>\r\n                <option value=\"30d\">Últimos 30 dias</option>\r\n              </select>\r\n\r\n              <button className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center gap-2\">\r\n                <RefreshCw className=\"w-4 h-4\" />\r\n                Atualizar\r\n              </button>\r\n\r\n              <button className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 flex items-center gap-2\">\r\n                <Download className=\"w-4 h-4\" />\r\n                Exportar\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Navigation Tabs */}\r\n          <nav className=\"flex space-x-8\">\r\n            <button\r\n              onClick={() => setActiveTab('overview')}\r\n              className={`${\r\n                activeTab === 'overview'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <BarChart3 className=\"w-4 h-4\" />\r\n              Visão Geral\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('sessions')}\r\n              className={`${\r\n                activeTab === 'sessions'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <Activity className=\"w-4 h-4\" />\r\n              Sessões\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('agents')}\r\n              className={`${\r\n                activeTab === 'agents'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <Bot className=\"w-4 h-4\" />\r\n              Por Agente\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('costs')}\r\n              className={`${\r\n                activeTab === 'costs'\r\n                  ? 'border-purple-500 text-purple-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\r\n              } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2`}\r\n            >\r\n              <PieChart className=\"w-4 h-4\" />\r\n              Custos\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Overview Tab */}\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-8\">\r\n            {/* Métricas principais */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              <MetricCard\r\n                title=\"Total de Sessões\"\r\n                value={metrics.totalSessions}\r\n                subtitle=\"últimas 24h\"\r\n                icon={Activity}\r\n                trend={12.5}\r\n                color=\"blue\"\r\n              />\r\n              <MetricCard\r\n                title=\"Taxa de Sucesso\"\r\n                value={`${metrics.successRate}%`}\r\n                subtitle=\"sessões bem-sucedidas\"\r\n                icon={CheckCircle}\r\n                trend={2.1}\r\n                color=\"green\"\r\n              />\r\n              <MetricCard\r\n                title=\"Tempo Médio\"\r\n                value={`${metrics.avgResponseTime}s`}\r\n                subtitle=\"tempo de resposta\"\r\n                icon={Clock}\r\n                trend={-5.3}\r\n                color=\"yellow\"\r\n              />\r\n              <MetricCard\r\n                title=\"Custo Hoje\"\r\n                value={`$${metrics.costToday}`}\r\n                subtitle=\"tokens consumidos\"\r\n                icon={TrendingUp}\r\n                trend={8.7}\r\n                color=\"red\"\r\n              />\r\n            </div>\r\n\r\n            {/* Gráficos de performance */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tempo de Resposta</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <LineChart data={performanceData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"time\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"responseTime\" stroke=\"#8884d8\" strokeWidth={2} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Uso de Tokens</h3>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <AreaChart data={performanceData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"time\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Area type=\"monotone\" dataKey=\"tokens\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.3} />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Atividade por período */}\r\n            <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sessões e Erros por Período</h3>\r\n              <ResponsiveContainer width=\"100%\" height={400}>\r\n                <BarChart data={performanceData}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"time\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"sessions\" fill=\"#8884d8\" name=\"Sessões\" />\r\n                  <Bar dataKey=\"errors\" fill=\"#ff7300\" name=\"Erros\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Sessions Tab */}\r\n        {activeTab === 'sessions' && (\r\n          <div className=\"space-y-6\">\r\n            {/* Filtros */}\r\n            <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200\">\r\n              <div className=\"flex flex-wrap gap-4 items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Search className=\"w-4 h-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar sessões...\"\r\n                    className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n\r\n                <select\r\n                  value={filterAgent}\r\n                  onChange={(e) => setFilterAgent(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"all\">Todos os agentes</option>\r\n                  <option value=\"research\">Assistente de Pesquisa</option>\r\n                  <option value=\"finance\">Analista Financeiro</option>\r\n                  <option value=\"marketing\">Marketing Specialist</option>\r\n                </select>\r\n\r\n                <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\">\r\n                  <option value=\"all\">Todos os status</option>\r\n                  <option value=\"success\">Sucesso</option>\r\n                  <option value=\"error\">Erro</option>\r\n                  <option value=\"timeout\">Timeout</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tabela de sessões */}\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-lg overflow-hidden\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Sessão\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Agente\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Usuário\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Duração\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Tokens\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Mensagens\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Custo\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Observações\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {sessions.map(session => (\r\n                    <SessionRow key={session.id} session={session} />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Paginação */}\r\n            <div className=\"flex items-center justify-between bg-white px-6 py-3 border border-gray-200 rounded-lg\">\r\n              <div className=\"text-sm text-gray-700\">\r\n                Exibindo <span className=\"font-medium\">1</span> a <span className=\"font-medium\">10</span> de{' '}\r\n                <span className=\"font-medium\">156</span> resultados\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\r\n                  Anterior\r\n                </button>\r\n                <button className=\"px-3 py-1 bg-purple-600 text-white rounded text-sm\">\r\n                  1\r\n                </button>\r\n                <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\r\n                  2\r\n                </button>\r\n                <button className=\"px-3 py-1 border border-gray-300 rounded text-sm hover:bg-gray-50\">\r\n                  Próximo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Agents Tab */}\r\n        {activeTab === 'agents' && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n              {/* Tabela de agentes */}\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance por Agente</h3>\r\n                <div className=\"space-y-4\">\r\n                  {usageData.map((agent, index) => (\r\n                    <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Bot className=\"w-4 h-4 text-blue-500\" />\r\n                          <span className=\"font-medium text-gray-900\">{agent.name}</span>\r\n                        </div>\r\n                        <span className={`px-2 py-1 rounded-full text-xs ${\r\n                          agent.success >= 95 ? 'bg-green-50 text-green-600' :\r\n                          agent.success >= 90 ? 'bg-yellow-50 text-yellow-600' :\r\n                          'bg-red-50 text-red-600'\r\n                        }`}>\r\n                          {agent.success}% sucesso\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                        <div>\r\n                          <div className=\"text-gray-500\">Sessões</div>\r\n                          <div className=\"font-medium\">{agent.sessions}</div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-gray-500\">Tokens</div>\r\n                          <div className=\"font-medium\">{agent.tokens.toLocaleString()}</div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-gray-500\">Tempo Médio</div>\r\n                          <div className=\"font-medium\">{agent.avgTime}s</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Gráfico de uso */}\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Uso por Agente</h3>\r\n                <ResponsiveContainer width=\"100%\" height={400}>\r\n                  <BarChart data={usageData} layout=\"horizontal\" margin={{ left: 100 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis type=\"number\" />\r\n                    <YAxis dataKey=\"name\" type=\"category\" width={100} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"sessions\" fill=\"#8884d8\" name=\"Sessões\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Costs Tab */}\r\n        {activeTab === 'costs' && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              <MetricCard\r\n                title=\"Custo Total (24h)\"\r\n                value={`$${metrics.costToday}`}\r\n                subtitle=\"tokens consumidos\"\r\n                icon={TrendingUp}\r\n                color=\"red\"\r\n              />\r\n              <MetricCard\r\n                title=\"Custo por Sessão\"\r\n                value=\"$0.08\"\r\n                subtitle=\"média das últimas 24h\"\r\n                icon={Activity}\r\n                color=\"blue\"\r\n              />\r\n              <MetricCard\r\n                title=\"Economia vs GPT-4\"\r\n                value=\"23%\"\r\n                subtitle=\"usando modelos otimizados\"\r\n                icon={Zap}\r\n                color=\"green\"\r\n              />\r\n            </div>\r\n\r\n            {/* Breakdown de custos por agente */}\r\n            <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Custos por Agente</h3>\r\n              <div className=\"space-y-4\">\r\n                {usageData.map((agent, index) => {\r\n                  const cost = (agent.tokens * 0.0001).toFixed(3);\r\n                  return (\r\n                    <div key={index} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <Bot className=\"w-5 h-5 text-blue-500\" />\r\n                        <div>\r\n                          <div className=\"font-medium text-gray-900\">{agent.name}</div>\r\n                          <div className=\"text-sm text-gray-500\">{agent.tokens.toLocaleString()} tokens</div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"font-medium text-gray-900\">${cost}</div>\r\n                        <div className=\"text-sm text-gray-500\">{agent.sessions} sessões</div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgnoMonitoring;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6769, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Henrique/Desktop/python/AgnoTest/agno-frontend/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Bot,\n  GitBranch,\n  Activity, \n  FileText,\n  Settings,\n  User,\n  Menu,\n  X,\n  Home,\n  BarChart3\n} from 'lucide-react';\n\n// Importar os componentes existentes\nimport AgnoManagementInterface from '@/components/AgnoManagementInterface';\nimport AgentTemplates from '@/components/AgentTemplates';\nimport WorkflowBuilder from '@/components/WorkflowBuilder';\nimport AgnoMonitoring from '@/components/AgnoMonitoring';\n\nexport default function HomePage() {\n  const [activeView, setActiveView] = useState('dashboard');\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [user, setUser] = useState({\n    name: 'Usuário Admin',\n    email: 'admin@agno.ai',\n    avatar: null\n  });\n\n  const navigationItems = [\n    {\n      id: 'dashboard',\n      name: 'Dashboard',\n      icon: Home,\n      component: AgnoManagementInterface\n    },\n    {\n      id: 'templates',\n      name: 'Templates',\n      icon: FileText,\n      component: AgentTemplates\n    },\n    {\n      id: 'workflows',\n      name: 'Workflow Builder',\n      icon: GitBranch,\n      component: WorkflowBuilder\n    },\n    {\n      id: 'monitoring',\n      name: 'Monitoramento',\n      icon: BarChart3,\n      component: AgnoMonitoring\n    }\n  ];\n\n  const activeItem = navigationItems.find(item => item.id === activeView);\n  const ActiveComponent = activeItem?.component;\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* Sidebar */}\n      <div className={`${sidebarOpen ? 'w-64' : 'w-16'} bg-white shadow-lg transition-all duration-300 flex flex-col`}>\n        {/* Header do Sidebar */}\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            {sidebarOpen && (\n              <div className=\"flex items-center gap-2\">\n                <div className=\"p-2 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg text-white\">\n                  <Bot className=\"w-6 h-6\" />\n                </div>\n                <div>\n                  <h1 className=\"text-lg font-bold text-gray-900\">Agno Platform</h1>\n                  <p className=\"text-xs text-gray-500\">AI Agent Management</p>\n                </div>\n              </div>\n            )}\n            <button\n              onClick={() => setSidebarOpen(!sidebarOpen)}\n              className=\"p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              {sidebarOpen ? <X className=\"w-4 h-4\" /> : <Menu className=\"w-4 h-4\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Navegação */}\n        <nav className=\"flex-1 p-4\">\n          <div className=\"space-y-2\">\n            {navigationItems.map((item) => {\n              const IconComponent = item.icon;\n              const isActive = activeView === item.id;\n              \n              return (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveView(item.id)}\n                  className={`\n                    w-full flex items-center gap-3 px-3 py-2 rounded-lg text-left transition-colors\n                    ${isActive \n                      ? 'bg-blue-50 text-blue-600 border border-blue-200' \n                      : 'text-gray-700 hover:bg-gray-50'\n                    }\n                  `}\n                  title={!sidebarOpen ? item.name : undefined}\n                >\n                  <IconComponent className=\"w-5 h-5 flex-shrink-0\" />\n                  {sidebarOpen && (\n                    <span className=\"font-medium\">{item.name}</span>\n                  )}\n                </button>\n              );\n            })}\n          </div>\n        </nav>\n\n        {/* User Info */}\n        <div className=\"p-4 border-t border-gray-200\">\n          <div className={`flex items-center gap-3 ${!sidebarOpen && 'justify-center'}`}>\n            <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-medium text-sm\">\n              {user.name.charAt(0)}\n            </div>\n            {sidebarOpen && (\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">\n                  {user.name}\n                </p>\n                <p className=\"text-xs text-gray-500 truncate\">\n                  {user.email}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Top Bar */}\n        <header className=\"bg-white shadow-sm border-b border-gray-200 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">\n                {activeItem?.name || 'Dashboard'}\n              </h2>\n              <p className=\"text-sm text-gray-500 mt-1\">\n                {activeView === 'dashboard' && 'Gerencie seus agentes e workflows'}\n                {activeView === 'templates' && 'Crie e use templates para acelerar o desenvolvimento'}\n                {activeView === 'workflows' && 'Construa workflows visuais com múltiplos agentes'}\n                {activeView === 'monitoring' && 'Monitore performance e uso dos seus agentes'}\n              </p>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                <Settings className=\"w-5 h-5\" />\n              </button>\n              <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-medium text-sm cursor-pointer\">\n                {user.name.charAt(0)}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Page Content */}\n        <main className=\"flex-1 overflow-auto bg-gray-50\">\n          {ActiveComponent && <ActiveComponent />}\n        </main>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}