services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: agno_postgres
    environment:
      POSTGRES_DB: agno_db
      POSTGRES_USER: agno_user
      POSTGRES_PASSWORD: agno_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - agno_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agno_user -d agno_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: agno_backend
    environment:
      - DATABASE_URL=postgresql://agno_user:agno_password@postgres:5432/agno_db
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ENVIRONMENT=development
      - LOG_LEVEL=info
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - ./logs:/app/logs
    networks:
      - agno_network
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: agno_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - agno_network
    restart: unless-stopped

  # Redis para Cache
  redis:
    image: redis:7-alpine
    container_name: agno_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agno_network
    command: redis-server --appendonly yes
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  agno_network:
    driver: bridge